{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introl\u7684\u4e2a\u4eba\u77e5\u8bc6\u5e93","text":""},{"location":"#_1","title":"\u7b80\u4ecb","text":"<p>\u672c\u77e5\u8bc6\u5e93\u7528\u4e8eIntrol\u7684\u4e2a\u4eba\u603b\u7ed3\uff0c\u6db5\u76d6\u4fe1\u606f\u5b66\u7ade\u8d5b\uff08OI\uff09\u3001\u5355\u7247\u673a\u3001HomeLab\u3001\u9ad8\u4e2d\u6587\u5316\u8bfe\u3001\u6570\u5b66\u3001\u7f51\u7edc\u6280\u672f\u3001\u6587\u5b66\u3001\u82f1\u8bed\u3001\u9605\u8bfb\u7b49\u591a\u4e2a\u9886\u57df\uff0c\u7528\u4e8e\u6784\u5efa\u7ed3\u6784\u5316\u7684\u77e5\u8bc6\u4f53\u7cfb\uff0c\u8f85\u52a9\u5b66\u4e60\u3002\u540c\u65f6\u4e5f\u4e3a\u5176\u4ed6\u60f3\u8981\u642d\u5efa\u4e2a\u4eba\u77e5\u8bc6\u5e93\u7684\u540c\u5b66\u63d0\u4f9b\u53c2\u8003\u548c\u5efa\u8bae\u3002</p> <p>\u672c\u77e5\u8bc6\u5e93\u4f1a\u6301\u7eed\u66f4\u65b0\u3002</p>"},{"location":"#about-introl","title":"\u5173\u4e8e\u6211/About Introl","text":"<p>Introl | INTP | SX | \u9ad8\u4e00 | OIer | \u79d1\u6280\u7231\u597d\u8005</p>"},{"location":"#_2","title":"\u5f53\u524d\u76ee\u6807\uff1a","text":"<p>NOIp\u7701\u4e00 | \u8fdb\u961f</p>"},{"location":"#_3","title":"\u8054\u7cfb\u6211\uff1a","text":"<p>\u200b   mail\uff1aintrol-ljl@qq.com / introlljl@gmail.com</p> <p>\u200b   Wechat\uff1aIntrol-ljl</p> <p>\u200b   QQ\uff1a3226749226</p>"},{"location":"#_4","title":"\u5feb\u901f\u5bfc\u822a","text":"\u5206\u7c7b \u7b80\u4ecb OI \u5173\u4e8e\u4fe1\u606f\u5b66\u5965\u6797\u5339\u514b\u7ade\u8d5b\uff08OI\uff09\u76f8\u5173\u7684\u77e5\u8bc6\u5185\u5bb9 \u9ad8\u4e2d\u6587\u5316\u8bfe \u5173\u4e8e\u9ad8\u4e2d\u7406\u79d1\u6587\u5316\u8bfe\u76f8\u5173\u77e5\u8bc6\u5185\u5bb9 \u5355\u7247\u673a \u5173\u4e8eSTM32\u53caESP32\u7b49\u5355\u7247\u673a\u76f8\u5173\u7684\u77e5\u8bc6\u5b9e\u8df5\u5185\u5bb9 HomeLab \u5173\u4e8e\u5bb6\u5ead\u5b9e\u9a8c\u5ba4\u7684\u5404\u79cd\u6d4b\u8bd5\u642d\u5efa\u5185\u5bb9 \u82f1\u8bed \u5173\u4e8e\u82f1\u8bed\u5b66\u4e60\u63d0\u5347\u7684\u76f8\u5173\u77e5\u8bc6 \u6587\u5b66 \u5173\u4e8e\u9605\u8bfb\uff0c\u6587\u5b66\u9274\u8d4f\u7b49\u65b9\u9762\u7684\u5185\u5bb9 \u5176\u4ed6 \u5176\u4ed6\u6570\u91cf\u7e41\u591a\u4f46\u4e0d\u8db3\u4ee5\u5355\u72ec\u5206\u7c7b\u7684\u77e5\u8bc6\u5185\u5bb9"},{"location":"#_5","title":"\u5185\u5bb9\u76f8\u5173","text":"<p>\u672c\u6587\u6863\u5168\u90e8\u4f7f\u7528 Markdown&amp;LeTeX\u683c\u5f0f\uff0c\u652f\u6301\u8de8\u6587\u4ef6\u8df3\u8f6c\u3002\u77e5\u8bc6\u5e93\u5b8c\u6210\u8fc7\u7a0b\u4e2d\u90e8\u5206\u5185\u5bb9\u5f15\u7528\u4ed6\u4eba\u5f00\u6e90\u5185\u5bb9\uff0c\u5982\u6709\u4fb5\u6743\u8bf7\u8054\u7cfb\u3002</p>"},{"location":"#_6","title":"\u66f4\u65b0\u8bb0\u5f55&amp;\u5f85\u529e\u4e8b\u9879","text":""},{"location":"#_7","title":"\u66f4\u65b0","text":"<p>2025-1-30\uff1a</p> <p>\u5f00\u59cb\u642d\u5efa\u77e5\u8bc6\u5e93\uff0c\u5b8c\u6210<code>README.md</code>\u6587\u4ef6\uff0c\u642d\u5efa\u6574\u4f53\u67b6\u6784\u3002</p> <p>2025-2-9\uff1a</p> <p>\u5b8c\u5584OI\u76f8\u5173\u7684\u90e8\u5206\u5185\u5bb9\uff0c\u8c03\u6574\u683c\u5f0f\u3002</p> <p>2025-2-18\uff1a</p> <p>\u5b9e\u73b0GoodNotes\u7b14\u8bb0\u6587\u4ef6\u7684\u540c\u6b65\u3002</p> <p>2025-4-20\uff1a</p> <p>\u5408\u5e76wiki\u9879\u76ee\uff0c\u6dfb\u52a0Github Action\uff0c\u7b80\u5316\u63d0\u4ea4\u6d41\u7a0b</p> <p>2025-4-24\uff1a</p> <p>\u4fee\u6539NAS\u677f\u5757\u4e3aHomeLab\uff0c\u589e\u52a0\u5206\u7c7b\u5185\u5bb9\u3002</p>"},{"location":"#_8","title":"\u5f85\u529e","text":"<ul> <li>\u5b8c\u5584\u5185\u5bb9</li> <li>\u5b8c\u6210OI\u76f8\u5173\u5185\u5bb9</li> <li>\u5c06\u5927\u5185\u5b58\u6587\u4ef6\u79fb\u52a8\u81f3\u4e2a\u4eba\u7f51\u76d8\u4ee5\u907f\u514dgit\u63d0\u4ea4\u901f\u5ea6\u8fc7\u6162\u4ee5\u53ca\u7a7a\u95f4\u4e0d\u8db3\u95ee\u9898\u3002</li> <li>\u5c06\u6587\u7ae0\u4e2d\u51fa\u73b0\u7684\u56fe\u7247\u7b49\u5168\u90e8\u79fb\u52a8\u81f3\u4e2a\u4eba\u56fe\u5e8a\u3002</li> </ul>"},{"location":"#_9","title":"\u7248\u6743\u4e0e\u534f\u8bae","text":""},{"location":"#_10","title":"\u4ee3\u7801","text":"<ul> <li>\u8bb8\u53ef\u534f\u8bae\uff1aApache 2.0 </li> <li>\u8981\u6c42\uff1a  </li> <li>\u4fdd\u7559\u6e90\u7801\u4e2d\u7684\u7248\u6743\u58f0\u660e  </li> <li>\u4fee\u6539\u9700\u5728\u6587\u4ef6\u5934\u6807\u6ce8\u53d8\u66f4\u8bb0\u5f55  </li> </ul>"},{"location":"#_11","title":"\u6587\u6863","text":"<ul> <li>\u8bb8\u53ef\u534f\u8bae\uff1aCC BY 4.0 </li> <li>\u8981\u6c42\uff1a  </li> <li>\u5fc5\u987b\u7f72\u540d\u4f5c\u8005  </li> <li>\u53ef\u5546\u7528\uff0c\u4f46\u7981\u6b62\u7528\u4e8e\u8fdd\u6cd5\u573a\u666f  </li> </ul>"},{"location":"#_12","title":"\u514d\u8d23\u58f0\u660e","text":"<p>\u5185\u5bb9\u90e8\u5206\u6765\u81ea\u7f51\u7edc\uff0c\u5982\u6709\u4fb5\u6743\u8bf7\u8054\u7cfb\u5220\u9664\u3002 \u4f5c\u8005\u4e0d\u5bf9\u56e0\u4f7f\u7528\u672c\u4ed3\u5e93\u5185\u5bb9\u5bfc\u81f4\u7684\u4efb\u4f55\u76f4\u63a5\u6216\u95f4\u63a5\u635f\u5931\u8d1f\u8d23\u3002</p>"},{"location":"#_13","title":"\u6280\u672f\u6808","text":"<ul> <li>\u672c\u5730\u4f7f\u7528Obsidian+VSCode\u7f16\u5199\uff0c\u4f7f\u7528git\u63d0\u4ea4\u5230\u4ed3\u5e93\u3002</li> <li>\u4f7f\u7528Github Action\u5b9e\u73b0\u81ea\u52a8\u53d1\u5e03wiki\u3002</li> <li>\u4f7f\u7528mkdocs\u4f5c\u4e3a\u77e5\u8bc6\u5e93\u524d\u7aef\u7f51\u9875\u3002</li> </ul>"},{"location":"HomeLab/","title":"HomeLab","text":""},{"location":"HomeLab/#homelab_1","title":"\u4ec0\u4e48\u662fHomeLab","text":"<p>Homelab \u662f\u6307\u53ef\u5728\u5bb6\u4e2d\u642d\u5efa\u7684\u5b9e\u9a8c\uff08\u6298\u817e\uff09\u73af\u5883\uff0c\u7528\u4e8e\u8fdb\u884c\u5b9e\u9a8c\u548c\u5b66\u4e60\u3002\u901a\u5e38\u6307\u4e00\u7cfb\u5217\u786c\u4ef6\u8bbe\u5907\uff08\u5bb6\u7528\u670d\u52a1\u5668\u3001\u5c0f\u4e3b\u673a\u3001\u65e7\u7535\u8111\u624b\u673a\u3001\u6811\u8393\u6d3e\u7b49\uff09\uff0c\u4e0a\u9762\u8fd0\u884c\u7740\u64cd\u4f5c\u7cfb\u7edf\u73af\u5883\u548c\u8f6f\u4ef6\uff08Linux\u3001\u865a\u62df\u673a\u3001Docker \u7b49\uff09\u3002Homelab \u6709\u5f88\u591a\u79cd\u7528\u9014\uff0c\u6bd4\u5982\u4f5c\u4e3a\u8f6f\u8def\u7531\u3001\u8fdc\u7a0b\u4e3b\u673a\uff0c\u4e5f\u53ef\u4ee5\u90e8\u7f72\u4e00\u7cfb\u5217\u7684\u81ea\u6258\u7ba1\u670d\u52a1\uff0c\u5982\u4e2a\u4eba\u4e66\u5e93\u3001\u5f71\u89c6\u5e93\u3001\u5bc6\u7801\u7ba1\u7406\u5668\u3001\u4e2a\u4eba\u7f51\u7ad9\u3001RSS \u9605\u8bfb\u5668\u3001\u64ad\u5ba2\u670d\u52a1\u5668\u3001\u5907\u5fd8\u5f55\u7b49\u7b49\u3002\u4e0d\u4ec5\u5b9e\u7528\uff0c\u4e5f\u53ef\u4ee5\u4f5c\u4e00\u95e8\u5174\u8da3\uff0c\u4e3a\u751f\u6d3b\u589e\u6dfb\u4e50\u8da3\u3002</p>"},{"location":"HomeLab/#homelab_2","title":"\u6211\u7684Homelab\u914d\u7f6e","text":"<p>\u6839\u636e\u9700\u6c42\uff0c\u6211\u7684HomeLab\u7531 \u8f7b\u91cf\u4e91\u670d\u52a1\u5668+PVE\u865a\u62df\u673a+NAS\u6784\u6210\u3002</p> HomeLab \u4e91\u670d\u52a1\u5668 PVE NAS \u516c\u7f51ip ipv4 ipv6 ipv6 \u5185\u5b58 1G 16G 4G \u6027\u80fd \u6781\u5f31 Intel i7-10700H AMD-A4 \u5bb9\u91cf 10G 1TB 4TB \u5e26\u5bbd(Mbps) 1000/1000 100/1000 100/1000"},{"location":"HomeLab/#_1","title":"\u4e91\u670d\u52a1\u5668","text":"<p>\u6211\u7684\u4e91\u670d\u52a1\u5668\u4f7f\u7528\u4e86Akile Cloud\u7684\u5927\u5e26\u5bbd\u670d\u52a1\u5668\uff0c\u4e0a\u4e0b\u884c1000M\u3002\u670d\u52a1\u5668\u4f4d\u4e8e\u9999\u6e2f\uff0c\u8bbf\u95ee\u5ef6\u8fdf100ms\u3002\u4e3b\u8981\u4f5c\u4e3afrp\u670d\u52a1\u7aef\u4e3a\u65e0ipv6\u73af\u5883\u63d0\u4f9b\u7f51\u7edc\u8bbf\u95ee\u3002\u6b64\u5916\u4e5f\u53ef\u4ee5\u7528\u4f5c\u4e34\u65f6VPN\u79d1\u5b66\u4e0a\u7f51\u3002</p>"},{"location":"HomeLab/#pve","title":"PVE\u865a\u62df\u673a","text":"<p>\u6211\u7684PVE\u865a\u62df\u673a\u662f\u4f7f\u7528\u65e7\u6b3e\u7b14\u8bb0\u672c\u642d\u5efa\u3002\u914d\u7f6e\u4e3ai7-10700H+RTX 2060\u3002\u5185\u5b58\u4e3a16G\uff0c\u4ee5\u53ca\u4e00\u5757512GB\u7684\u56fa\u6001\u548c512GB\u7684\u673a\u68b0\u786c\u76d8\u3002\u6027\u80fd\u653e\u5728\u5f53\u4e0b\u4e5f\u5341\u5206\u5f3a\u608d\u3002RTX2060\u7684\u6027\u80fd\u4e5f\u8db3\u4ee5\u652f\u6491\u73a9\u4e00\u4e9b\u5927\u578b\u6e38\u620f\u4ee5\u53ca\u8f7b\u91cfAI\u9700\u6c42\u3002 \u7531\u4e8evGPU\u9a71\u52a8\u7b49\u62bd\u8c61\u95ee\u9898\uff0c\u672c\u65b9\u6848\u5f03\u7528vGPU\u65b9\u6848\uff0c\u91c7\u53d6\u9700\u8981\u65f6\u624b\u52a8\u5207\u6362\u7684\u65b9\u5f0f\uff0c\u907f\u514d\u9a71\u52a8\u5bfc\u81f4\u7684\u5404\u79cd\u95ee\u9898\u3002\u800c\u4e14\u672c\u6765\u6211\u4e5f\u4e0d\u4f1a\u5728\u8dd1AI\u7684\u65f6\u5019\u770b\u5f71\u89c6\u3001\u66f4\u4e0d\u4f1a\u5728\u6253\u6e38\u620f\u65f6\u8dd1AI\uff08\uff08</p> \u865a\u62df\u673a \u914d\u7f6e \u7528\u9014 \u662f\u5426\u5e38\u9a7b Docker 2\u6838+2G \u8fd0\u884c\u5927\u91cfdocker\u9879\u76ee \u662f fnOS 4\u6838+4G+RTX2060 \u7528\u4f5c\u8d44\u6e90/\u76f8\u518c\u5907\u4efd\u4ee5\u53ca\u5f71\u89c6\u5e93 \u662f iStoreOS 1\u6838+1G \u65c1\u8def\u7531 \u662f Ubuntu 2\u6838+8G+RTX2060 MC\u670d\u52a1\u5668+\u9879\u76ee\u5f00\u53d1/AI \u662f Windows 4\u6838+4G+RTX2060 \u6e38\u620f\u5e73\u53f0/\u8fdc\u7a0b\u9700\u6c42 \u5426 NOI-Linux 2\u6838+2G \u4fe1\u606f\u5b66\u7ade\u8d5b \u5426"},{"location":"HomeLab/#docker","title":"Docker","text":"<p>\u76ee\u524dDocker\u5e38\u9a7b\u7684\u9879\u76ee\u6709hitokoto-api\uff08\u81ea\u5efa\u4e00\u8a00\u63a5\u53e3\uff09\u3001code-server\uff08\u7f51\u9875\u7248VScode\uff09\u3001xiaomusic\uff08\u5c0f\u7231\u97f3\u7bb1\u64ad\u653e\u5668\uff09\u3002</p>"},{"location":"HomeLab/#fnos","title":"fnOS","text":"<p>\u975e\u4e3b\u529bNAS\uff0c\u7528\u4e8e\u76f8\u518c\u5907\u4efd\uff08\u4e3b\u8981\u662f\u56e0\u4e3a\u5b83\u7684\u76f8\u518c\u529f\u80fd\u771f\u7684\u597d\u7528\uff09\u4ee5\u53ca\u91cd\u8981\u8d44\u6599\u5907\u4efd\u3002\u6b64\u5916\u4f7f\u7528\u663e\u5361\u6765\u5b9e\u73b0\u5f71\u89c6\u5e93\u8f6c\u7801\u7b49\u9700\u6c42\u3002</p>"},{"location":"HomeLab/#istoreos","title":"iStoreOS","text":"<p>\u57fa\u4e8eOpenWrt\u7684\u8f6f\u8def\u7531\u7cfb\u7edf\uff0c\u4e3a\u4e86\u4e0d\u7978\u5bb3\u5168\u5bb6\u7684\u7f51\u7edc\u91c7\u53d6\u65c1\u8def\u7531\u6a21\u5f0f\uff0c\u5b9e\u73b0\u79d1\u5b66\u4e0a\u7f51\u4ee5\u53cafrp\u4e2d\u8f6c\u9700\u6c42\u3002</p>"},{"location":"HomeLab/#ubuntu","title":"Ubuntu","text":"<p>\u6027\u80fd\u5f3a\u608d\uff0c\u53ef\u4ee5\u5728\u4e0a\u9762\u8dd1\u5de5\u7a0b\u9879\u76ee\uff0c\u540c\u65f6\u53ef\u4ee5\u7528\u4f5cMC\u670d\u52a1\u5668\u4f7f\u7528\u3002\u6709\u663e\u5361\u7684\u52a0\u6301\u53ef\u4ee5\u5728\u4e0a\u9762\u6298\u817eAI\u9879\u76ee\u7b49\u9700\u8981\u5927\u91cfGPU\u8d44\u6e90\u7684\u9879\u76ee\u3002</p>"},{"location":"HomeLab/#nas","title":"NAS","text":"<p>\u76ee\u524d\u4e3b\u529bNAS\u4ecd\u7136\u4f7f\u7528\u9ed1\u7fa4\u6656\u7cfb\u7edf\uff0c\uff08\u6216\u8bb8\u5728\u98de\u725bOS\u6210\u719f\u4e4b\u540e\u4f1a\u8fc1\u79fb\uff1f\uff09\u672cNAS\u66fe\u7ecf\u4e3a\u5355\u4e00\u4e3b\u529b\u670d\u52a1\u5668\u4f7f\u7528\uff0c\u5728\u542f\u7528PVE\u540e\uff0c\u7fa4\u6656\u4e0a\u53ea\u7559\u4e0b\u4e86HomeAssistant\u3001Alist\u7f51\u76d8\u3001Cloudreve\u7f51\u76d8\u7b49\u8f83\u96be\u8fc1\u79fb\u7684\u9879\u76ee\u3002\u6027\u80fd\u538b\u529b\u5927\u5927\u51cf\u5c0f\u3002\u540c\u65f64TB\u7684\u7a7a\u95f4\u4e5f\u53ef\u4ee5\u7528\u6765\u5b58\u50a8\u7167\u7247\u5907\u4efd\u3001\u4f5c\u4e3a\u672c\u5730\u5f71\u89c6\u5e93\u3002\u4e5f\u53ef\u4ee5\u4f5c\u4e3aiSCSI\u670d\u52a1\u7aef\u4e3aPC\u63d0\u4f9b\u7f51\u7edc\u786c\u76d8\u529f\u80fd\u3002 \u867d\u7136\u6027\u80fd\u653e\u5728\u5f53\u4e0b\u6709\u70b9\u843d\u540e\uff0c\u4f46\u6ee1\u8db3\u8fd9\u4e9b\u9700\u6c42\u8fd8\u662f\u5f88easy\u7684\u3002</p>"},{"location":"HomeLab/#_2","title":"\u5bb6\u5ead\u7f51\u7edc\u62d3\u6251","text":""},{"location":"HomeLab/%E7%BD%91%E7%BB%9C/HomeLab%E7%9A%84%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/","title":"HomeLab\u7684\u7f51\u7edc\u914d\u7f6e","text":""},{"location":"HomeLab/%E7%BD%91%E7%BB%9C/HomeLab%E7%9A%84%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/#_1","title":"\u7f51\u7edc\u9700\u6c42","text":"<p>\u5bf9\u4e8eHomeLab\uff0c\u6700\u57fa\u672c\u7684\u9700\u6c42\u5c31\u662f\u901a\u7545\u5408\u7406\u7684\u7f51\u7edc\u72b6\u51b5\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u8fd8\u6709\u516c\u7f51\u914d\u7f6e\u4ee5\u53ca\u79d1\u5b66\u4e0a\u7f51\u7b49\u9700\u6c42\u3002</p>"},{"location":"HomeLab/%E7%BD%91%E7%BB%9C/HomeLab%E7%9A%84%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/#_2","title":"\u7f51\u7edc\u57fa\u7840","text":"<p>\u9996\u5148\u8003\u8651\u786c\u4ef6\u90e8\u5206\uff0c\u7531\u4e8e\u5355\u4e2a\u8def\u7531\u5668\u6027\u80fd\u4e0d\u8db3\u4ee5\u8986\u76d6\u4e66\u623f\u7b49\u4f4d\u7f6e\uff0c\u6240\u4ee5\u9700\u8981\u4e24\u53f0\u8def\u7531\u5668mesh\u7ec4\u7f51\u5b9e\u73b0\u5168\u5c4b\u8986\u76d6\u7684\u8981\u6c42\u3002\u56e0\u4e3a\u77ed\u671f\u6ca1\u67092.5Gps\u7684\u9700\u6c42\uff08\u9700\u8981\u66f4\u6362\u7684\u786c\u4ef6\u592a\u591a\uff09\uff0c\u6240\u4ee5\u53ea\u9009\u62e9\u4e86WiFi6\u7684\u8def\u7531\u5668\u3002\u4e2d\u5174\u7684AX3000\u5f88\u7b26\u5408\u6211\u7684\u9700\u6c42\uff0c\u5728\u6027\u80fd\u8db3\u591f\u7684\u60c5\u51b5\u4e0b\uff0c\u7a33\u5b9a\u6027\u548c\u53d1\u70ed\u72b6\u51b5\u90fd\u5f88\u597d\u3002mesh\u7ec4\u7f51\u7684\u5ef6\u8fdf\u4e5f\u5341\u5206\u53ef\u89c2\uff0c\u57fa\u672c\u4fdd\u8bc1\u4e86\u5728\u4e0d\u6298\u817e\u5176\u4ed6\u4e1c\u897f\u7684\u60c5\u51b5\u4e0b\uff0c\u5bb6\u91cc\u7684\u7f51\u7edc\u72b6\u51b5\u662f\u4f18\u79c0\u7684\u3002 \u7531\u4e8e\u6211\u9700\u8981\u5149\u732b\u4f5c\u4e3awifi\u62d3\u5c55\u70b9\u4f7f\u7528\uff0c\u6240\u4ee5\u4e0d\u4f7f\u7528\u8def\u7531\u5668\u62e8\u53f7\uff0c\u4f46\u7531\u4e8e\u516c\u7f51ipv6\u7684\u4f7f\u7528\u9700\u8981\u8def\u7531\u5668\u62e8\u53f7\u6765\u5173\u95ed\u9632\u706b\u5899\u3002\u6298\u817e\u597d\u957f\u65f6\u95f4\u540e\uff0c\u627e\u5230\u4e86\u53e6\u4e00\u79cd\u89e3\u51b3\u65b9\u6848\uff0c\u5728\u5149\u732b\u4e2d\u5173\u95edipv6\u7684\u9632\u706b\u5899\u3002\u51fa\u4e8e\u5b89\u5168\u8003\u8651\uff0c\u8def\u7531\u5668\u7684\u9632\u706b\u5899\u9664\u4e86HomeLab\u8bbe\u5907\uff0c\u5176\u4ed6\u9700\u8981\u5168\u90e8\u5f00\u542f\u3002</p>"},{"location":"HomeLab/%E7%BD%91%E7%BB%9C/HomeLab%E7%9A%84%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/#_3","title":"\u7f51\u7edc\u8fdb\u9636","text":"<p>\u5728HomeLab\u4e2d\uff0c\u9700\u6c42\u5c31\u6bd4\u8f83\u591a\u4e86\u3002\u9996\u5148\u7531\u4e8e\u79fb\u52a8\u7f51\u7edc\u65f6\u4e0d\u65f6\u62bd\u98ce\u5c4f\u853d\u5bfc\u81f4GitHub\u548cCloudflare\u65e0\u6cd5\u8bbf\u95ee\u4ee5\u53ca\u4e00\u4e9b\u4f17\u6240\u5468\u77e5\u7684\u95ee\u9898\uff0c\u79d1\u5b66\u4e0a\u7f51\u662f\u5341\u5206\u91cd\u8981\u7684\u3002\u4f46\u79d1\u5b66\u4e0a\u7f51\u5bb9\u6613\u51fa\u73b0\u5404\u79cd\u5947\u5947\u602a\u602a\u7684\u95ee\u9898\uff0c\u6240\u4ee5\u91c7\u7528\u65c1\u8def\u7531\u7684\u65b9\u5f0f\u4f5c\u4e3aHomeLab\u7684\u4e3b\u8981\u7f51\u7edc\u3002 \u6240\u8c13\u65c1\u8def\u7531\u662f\u4e00\u79cd\u7f51\u7edc\u914d\u7f6e\u65b9\u5f0f\uff0c\u901a\u8fc7\u5728\u4e3b\u8def\u7531\u4e4b\u5916\u989d\u5916\u6dfb\u52a0\u4e00\u4e2a\u8def\u7531\u8bbe\u5907\uff0c\u4e13\u95e8\u8d1f\u8d23\u7279\u5b9a\u7684\u7f51\u7edc\u4efb\u52a1\u3002\u56e0\u6b64\uff0c\u5176\u53ef\u4ee5\u5b9e\u73b0\u7f51\u7edc\u8bbe\u5907\u7684\u5206\u6d41\uff0c\u9700\u8981\u7684\u8bbe\u5907\u624b\u52a8\u63a5\u5165\u65c1\u8def\u7531\uff0c\u800c\u4e0d\u5f71\u54cd\u6574\u4f53\u7f51\u7edc\u5e03\u5c40\u3002</p>"},{"location":"HomeLab/%E7%BD%91%E7%BB%9C/HomeLab%E7%9A%84%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/#istoreos","title":"iStoreOS","text":"<p>iStoreOS\u662f\u57fa\u4e8eOpenWrt\u7cfb\u7edf\u7684\u8def\u7531\u7cfb\u7edf\u3002\u5176\u9875\u9762\u7f8e\u89c2\uff0c\u64cd\u4f5c\u7b80\u6d01\uff0c\u5341\u5206\u9002\u5408\u65b0\u624b\u4f7f\u7528\u3002\u5728iStoreOS\u4e2d\uff0c\u4e3b\u8981\u914d\u7f6e\u4e86Open\u5c0f\u732b\uff0c\u5e7f\u544a\u62e6\u622a\uff0cTailScale\u548cfrp\u5ba2\u6237\u7aef\u7b49\u670d\u52a1\u3002\u8fd9\u4e9b\u670d\u52a1\u5728\u7f51\u7edc\u4e0a\u90fd\u6709\u5341\u5206\u4e30\u5bcc\u7684\u6559\u7a0b\u6587\u6863\u3002</p>"},{"location":"HomeLab/%E7%BD%91%E7%BB%9C/HomeLab%E7%9A%84%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/#_4","title":"\u53ef\u80fd\u4f1a\u9047\u5230\u7684\u5751","text":"<p>\u4e3b\u8981\u96c6\u4e2d\u5728\u8f6f\u8def\u7531\u4e0a\uff0c\u7531\u4e8e\u8f6f\u8def\u7531\u7684\u7279\u6b8a\u6027\uff0c\u5341\u5206\u4e0d\u5efa\u8bae\u5c06\u5176\u4f5c\u4e3a\u4e3b\u8def\u7531\u4f7f\u7528\u3002\u4e00\u65e6\u51fa\u95ee\u9898\uff0c\u5168\u5bb6\u90fd\u65ad\u7f51\u3002\uff08\u5f53\u7136\u72ec\u5c45\u8001\u54e5\u5ffd\u7565\uff09\u4f5c\u4e3a\u65c1\u8def\u7531\u4f7f\u7528\u867d\u7136\u9700\u8981\u624b\u52a8\u66f4\u6539\u7f51\u5173\uff0c\u4f46\u5728\u8f6f\u8def\u7531\u5931\u6548\u540e\uff0c\u8bbe\u5907\u4ecd\u7136\u53ef\u4ee5\u6b63\u5e38\u4e0a\u7f51\uff0c\u5927\u5927\u51cf\u5c11\u7531\u4e8e\u7f51\u7edc\u95ee\u9898\u4ea7\u751f\u7684\u4e0d\u5fc5\u8981\u7684\u9ebb\u70e6\u3002</p>"},{"location":"HomeLab/%E7%BD%91%E7%BB%9C/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/","title":"\u7f51\u7edc\u57fa\u7840","text":"<p>\u5c3d\u60c5\u671f\u5f85\u3002</p>"},{"location":"OI/%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/CSP2023%E6%B8%B8%E8%AE%B0/","title":"CSP2023 \u6e38\u8bb0","text":"","tags":["\u6e38\u8bb0","CSP"]},{"location":"OI/%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/CSP2023%E6%B8%B8%E8%AE%B0/#915","title":"9.15","text":"<p>\u660e\u5929\u7b2c\u4e00\u8f6e\uff0c\u4eca\u5929\u665a\u4e0a\u53bb\u673a\u6784\u96c6\u8bad\uff0c\u51cc\u6668\u624d\u5230\u5bb6\uff0c~~\u73a9\u4e86\u4f1a\u6e38\u620f\u9893\u5e9f~~\u5c31\u7761\u4e86\u3002</p>","tags":["\u6e38\u8bb0","CSP"]},{"location":"OI/%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/CSP2023%E6%B8%B8%E8%AE%B0/#916","title":"9.16","text":"<p>\u4e00\u8fdb\u5b5d\u4e2d\u5c31\u770b\u89c1xp\u548chky\uff0c\u548c\u4ed6\u4eec\u4e00\u5757\u53bb\u4e86\u8003\u573a\u3002</p> <p>\u56e0\u4e3a\u53bb\u7684\u6bd4\u8f83\u65e9\uff0c\u5728\u8003\u573a\u6e9c\u8fbe\u4e86\u4e00\u5708\uff0c\u548c\u670b\u53cb\u804a\u4e86\u4e00\u4f1a\uff0c\u5c31\u51c6\u5907J\u7ec4\u6bd4\u8d5b\u4e86\u3002J\u7ec4\u7684\u9898\u4e0d\u96be\uff0c\u505a\u523011\uff1a30\u7684\u65f6\u5019\u53ef\u4ee5\u63d0\u524d\u4ea4\u5377\uff0c\u4f46\u6211\u53c8\u7ee7\u7eed\u505a\u4e86\u4f1a\uff0c\u548clyx\u4e00\u5757\u51fa\u7684\u8003\u573a\u3002\u8fd8\u62cd\u4e86\u4e00\u5f20\u5b5d\u4e2d\u7684CSP\u6d77\u62a5\u3002</p> <p></p> <p></p> <p>\u4e2d\u5348\u7761\u4e86\u4e00\u89c9\uff0c\u5bf9\u4ed8\u4e00\u53e3\u996d\u5c31\u53bb\u8003\u573a\u4e86\uff0c\u4e0b\u5348\u4f9d\u7136\u5f88\u778c\u7761\uff0cS\u7ec4\u9898\u76ee\u6709\u70b9\u96be\uff0c\u778e\u505a\u4e86\u4e00\u4f1a\uff0c\u80fd\u4ea4\u5377\u5c31\u51fa\u4e86\u8003\u573a\u3002</p> <p>\u7136\u540e\u4e0b\u53bb\u673a\u623f\u505a\u9898\uff0c\u628a\u4e4b\u524d\u6ca1\u505a\u7684\u771f\u9898\u8865\u4e86\u4e00\u4e0b\uff0c6\u70b9\u5c31\u56de\u5bb6\u4e86\u3002</p>","tags":["\u6e38\u8bb0","CSP"]},{"location":"OI/%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/CSP2023%E6%B8%B8%E8%AE%B0/#917929","title":"9.17~9.29","text":"<p>\u641ewhk\uff0c\u5468\u516d\u65e5\u53bb\u673a\u6784\u4e0a\u8bfe\u505a\u9898\u3002</p>","tags":["\u6e38\u8bb0","CSP"]},{"location":"OI/%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/CSP2023%E6%B8%B8%E8%AE%B0/#930101","title":"9.30~10.1","text":"<p>\u5b5d\u4e2d\u641e\u4e86\u4e2a\u96cf\u9e70\u8ba1\u5212\uff0c\u6df7\u4e86\u4e2a\u540d\u989d\u53bb\u770b\u770b\u5dee\u8ddd\uff0c\u7ed3\u679c\u5c31\u662f\u7b2c\u4e00\u8f6e\u7684\u8003\u573a\uff0c\u5c5e\u4e8e\u662f\u6545\u5730\u91cd\u6e38\u4e86\uff08\u3002</p> <p>\u8003\u5b8c\u521a\u597d\u53bb\u673a\u623f\u505a\u9898\u3002\u8003\u6570\u5b66\u7684\u65f6\u5019\u6709\u6570\u8bba\uff0c\u7adf\u7136\u8003\u51fa\u6765GCD\u4e86\uff08\u3002</p>","tags":["\u6e38\u8bb0","CSP"]},{"location":"OI/%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/CSP2023%E6%B8%B8%E8%AE%B0/#102107","title":"10.2~10.7","text":"<p>\u6708\u8003\uff0c\u6ca1\u548b\u505a\u9898\u3002</p>","tags":["\u6e38\u8bb0","CSP"]},{"location":"OI/%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/CSP2023%E6%B8%B8%E8%AE%B0/#1010","title":"10.10","text":"<p>\u7b2c\u4e00\u8f6e\u5206\u6570\u7ebf\u51fa\u6765\u4e86\uff0c\u7a33\u7a33\u8fc7\u7ebf\uff0cpj1=\uff0ctg2=\u3002</p>","tags":["\u6e38\u8bb0","CSP"]},{"location":"OI/%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/CSP2023%E6%B8%B8%E8%AE%B0/#1018","title":"10.18","text":"<p>\u62ff\u5230\u7b2c\u4e8c\u8f6e\u51c6\u8003\u8bc1\u4e86\uff0c\u6ca1\u60f3\u5230\u7684\u662f\u6211\u7684\u51c6\u8003\u8bc1\u53f7\u662f <code>SX-J520</code>\uff0c\u592a\u5e05\u4e86\u3002</p>","tags":["\u6e38\u8bb0","CSP"]},{"location":"OI/%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/CSP2023%E6%B8%B8%E8%AE%B0/#day-1","title":"Day -1","text":"<p>\u63d0\u524d\u8d70\u4e86\u4e00\u5929\uff0c\u548cxz\u7684\u4e00\u8d77\u5728\u9152\u5e97\u3002\u539f\u672c\u60f3\u7740\u590d\u4e60\uff0c\u7136\u540e\u5c31\u6ca1\u6709\u7136\u540e\u4e86\uff08</p>","tags":["\u6e38\u8bb0","CSP"]},{"location":"OI/%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/CSP2023%E6%B8%B8%E8%AE%B0/#day0","title":"Day0 \u4e0a\u5348","text":"<p>\u65e9\u4e0a\u8d77\u7684\u6709\u70b9\u8fdf\uff0c\u968f\u4fbf\u5bf9\u4ed8\u4e00\u53e3\u5c31\u51fa\u53d1\u53bb\u8003\u573a\u3002\u4eba\u5f88\u591a\uff0c\u5728\u7b7e\u540d\u5899\u4e0a\u7b7e\u4e86\u4e2a\u540d\u5c31\u8349\u8349\u7684\u8fdb\u8003\u573a\u4e86\u3002</p> <p>\u8fdb\u8003\u573a\u4e86\uff0c\u4ed6\u7adf\u7136\u4e0d\u7ed9\u5e26\u6c34\u676f\uff0c\u4e00\u70b9\u4e0d\u4eba\u6027\u5316\uff08</p> <p>\u8bd5\u673a\u7684\u65f6\u5019\u624b\u6ed1\u70b9\u5230\u4e00\u4e2a\u6587\u4ef6\uff0c\u7535\u8111\u76f4\u63a5\u6545\u969c\u91cd\u542f\uff0c\u6211\u614c\u7684\u4e0d\u884c\uff0c\u8fc7\u4e86\u4e24\u4e09\u5206\u949f\u4ed6\u53c8\u81ea\u5df1\u597d\u4e86\uff0c\u79bb\u5927\u8c31\u3002</p> <p>T1\u6bd4\u8f83\u6c34\uff0c\u5927\u69825\u5206\u949f\u60f3\u51fa log3(n) \u590d\u6742\u5ea6\u7684\u6b63\u89e3\uff0c\u53c8\u63a8\u4e86\u51e0\u7ec4\u6570\u636e\uff0c\u786e\u5b9a\u6ca1\u95ee\u9898\u5c31\u505a\u5f00T2\u3002</p> <p>T2\u6700\u5f00\u59cb\u6211\u6709\u70b9\u8ff7\uff0c\u611f\u89c9\u6709\u70b9\u50cfdp\uff0c\u4f46\u8f6c\u5ff5\u4e00\u60f3\uff0cCCF\u6709\u75c5\u624d\u4f1a\u5728T2\u653edp\uff0c\u679c\u65ad\u6253\u4e86\u4e2a\u8d2a\u5fc3\u3002\u6700\u5f00\u59cb\u6ca1\u6ce8\u610f\u5230\u5c0f\u7ec6\u8282\uff0c\u8c03\u4e86\u4e00\u4e2a\u5c0f\u65f6\uff0c\u8fc7\u4e86\u5927\u6837\u4f8b\u5c31\u4e0b\u4e00\u9898\u4e86\u3002</p> <p>T3\u4e00\u773c\u5927\u6a21\u62df\uff0c\u5c1d\u8bd5\u7406\u89e3\uff0c\u4f46\u5931\u8d25\u4e86\uff0c\u65e0\u7406\u6570\u505a\u6cd5\u6ca1\u641e\u51fa\u6765\u3002\u770b\u7740\u6d4b\u8bd5\u70b9\u6253\u4e8650\u5206\u90e8\u5206\u5206\u3002</p> <p>\u6253\u5b8c\u90e8\u5206\u5206\u8fd8\u6709\u4e0d\u5230\u4e00\u4e2a\u5c0f\u65f6\uff0c\u5c1d\u8bd5\u53bb\u770bT4\uff0c\u60f3\u5230\u540c\u4f59\u6700\u77ed\u8def\uff0c\u4f46\u5199\u6302\u4e86\uff0c\u6700\u540e\u8f93\u51fa <code>-1</code>\u8dd1\u8def\u3002</p> <p>J\u7ec4\u4f30\u5206100+100+50+10=260\u3002</p>","tags":["\u6e38\u8bb0","CSP"]},{"location":"OI/%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/CSP2023%E6%B8%B8%E8%AE%B0/#day0_1","title":"Day0 \u4e0b\u5348","text":"<p>\u4e2d\u5348\u65f6\u95f4\u7d27\u5f20\uff0c\u6ca1\u65f6\u95f4\u4f11\u606f\u5c31\u5f00\u8d5b\u4e86\u3002\u72b6\u6001\u4e0d\u662f\u5f88\u597d\u3002\u62ff\u5230\u9898\u5148\u90fd\u770b\u4e86\u4e00\u904d\uff0c\u611f\u89c91\u548c3\u53ef\u505a\u3002</p> <p>\u7136\u540e\u5c31\u662f\u6b7b\u78d5\u73af\u8282\uff0cT1\u78d5\u4e863\u4e2a\u5c0f\u65f6\uff0c\u4ee3\u7801\u6539\u4e86\u65e0\u6570\u6b21\uff0c\u90fd\u6ca1\u6539\u5bf9\u3002\u6700\u540e\u4e00\u4e2a\u534a\u5c0f\u65f6\u8f6c\u6218T3\uff0c\u5f88\u53ef\u60dc\u4f9d\u7136\u6ca1\u78d5\u51fa\u6765\u3002</p> <p>\u6700\u540eS\u7ec430+0+0+0=30\u3002\u5341\u5206\u4e0d\u7b26\u5408\u9884\u671f\uff0c\u6050\u6015\u65e0\u7f18NOIp\u3002</p> <p>\u51fa\u8003\u573a\u80fd\u67e5J\u7ec4\u4e86\uff0cxtl\u4e00\u67e5\u53d1\u73b0J\u6302\u6210160\u4e86\uff0c\u987f\u65f6\u5fc3\u54c7\u51c9\u54c7\u51c9\u7684\u3002</p> <p>\u8def\u4e0a\u53bb\u6d1b\u8c37\u6d4b\u4e86\u4e00\u4e0b\uff0c\u8fd8\u597d\u662f230\u3002\uff08xtl tssb</p>","tags":["\u6e38\u8bb0","CSP"]},{"location":"OI/%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/CSP2023%E6%B8%B8%E8%AE%B0/#day1","title":"Day1","text":"<p>\u5728\u5404\u4e2a\u5e73\u53f0\u6d4b\u4e86\u4e0bJ\u7ec4\uff0c\u57fa\u672c\u90fd\u662f220~240\uff0c\u53ea\u6709xtl160\u3002</p> <p>S\u7ec4\u7a33\u5b9a\u8d8b\u52bf\uff0ctg2=\u90fd\u6ca1\u4e86\u3002</p>","tags":["\u6e38\u8bb0","CSP"]},{"location":"OI/%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/CSP2023%E6%B8%B8%E8%AE%B0/#_1","title":"\u603b\u7ed3","text":"<p>\u600e\u4e48\u8bf4\u5462\uff0c\u8fd9\u6b21\u8003\u8bd5\u53d1\u6325\u592a\u5931\u5e38\u4e86\uff0c\u8d5b\u540e\u770bS\u7ec4\uff0c\u6b63\u5e38\u6c34\u5e73130\u5206\u6ca1\u6709\u95ee\u9898\uff0c\u4f46\u8003\u573a\u6302\u6210\u4e8630\u3002\u76f4\u63a5\u65e0\u7f18NOIp\u3002</p> <p>\u521d\u4e2d\u7684\u6700\u540e\u4e00\u6b21OI\u4e5f\u6302\u4e86\u3002NOIp\u4e5f\u6ca1\u80fd\u53bb\u6210\uff0c\u66f4\u522b\u63d0\u62ff\u5956\u3002</p> <p>\u600e\u4e48\u8bf4\u5462\uff0c\u8fd8\u662f\u633a\u65e0\u5948\u7684\u3002\u7b49\u7b2c\u4e8c\u8f6e\u6210\u7ee9\u51fa\u6765\uff0c\u5c31\u53ef\u4ee5\u56de\u5f52whk\u4e86\u3002</p>","tags":["\u6e38\u8bb0","CSP"]},{"location":"OI/%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/NOIp-2024-%E5%A4%8D%E7%9B%98-%E8%A1%A5%E9%A2%98/","title":"\u6210\u7ee9\u5206\u6790","text":"<p>\u9884\u671f\uff1a80+30=110 SX 1= \u5b9e\u9645\uff1a45+30=75 SX 2=</p>","tags":["\u603b\u7ed3","\u9898\u89e3"]},{"location":"OI/%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/NOIp-2024-%E5%A4%8D%E7%9B%98-%E8%A1%A5%E9%A2%98/#_2","title":"\u95ee\u9898\u5206\u6790","text":"<p>\u9884\u671f\u4e0e\u5b9e\u9645\u5dee\u8ddd\u8fc7\u5927\uff0c\u5b9e\u8d28\u539f\u56e0\u662f\u5728\u8003\u573a\u4e0a\u9009\u62e9\u4e86\u9519\u8bef\u7684\u505a\u9898\u601d\u8def\uff0c\u4e14\u6c11\u95f4\u6570\u636e\u8fc7\u6c34\uff0c\u5bfc\u81f4\u9884\u671f\u8fc7\u9ad8\u3002\u4e5f\u8bc1\u5b9e\u4e86\u8003\u573a\u4e0a\u4e0d\u80fd\u62fc\u8fd0\u6c14\uff0c\u800c\u5e94\u8be5\u811a\u8e0f\u5b9e\u5730\u60f3\u6b63\u786e\u7684\u89e3\u51b3\u65b9\u6848\u3002</p>","tags":["\u603b\u7ed3","\u9898\u89e3"]},{"location":"OI/%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/NOIp-2024-%E5%A4%8D%E7%9B%98-%E8%A1%A5%E9%A2%98/#_3","title":"\u8003\u573a\u590d\u76d8","text":"<p>\u8003\u8bd5\u5f00\u59cb\u540e\u611f\u89c9T1\u53ef\u505a\uff0c\u5148\u5728\u7eb8\u4e0a\u6a21\u62df\uff0c30min\u540e\u53d1\u73b0\u770b\u9519\u9898\uff0c\u8fd9\u65f6\u5019\u5fc3\u6001\u6709\u70b9\u4e0d\u592a\u7a33\u4e86\uff0c\u4f46\u4f9d\u7136\u9009\u62e9\u7ee7\u7eed\u6b7b\u78d5T1\u3002\u5148\u5199\u51fa\u51e0\u4e2a\u6b63\u786e\u6027\u65e0\u6cd5\u8bc1\u660e\u7684\u8d2a\u5fc3\uff0c\u7ed3\u679c\u6ca1\u8fc7\u5927\u6837\u4f8b\uff0c\u968f\u540e\u5728\u4e0d\u65ad\u7684\u63a8\u5012\u91cd\u60f3\u4e4b\u540e\uff0c\u9009\u62e9\u4e86\u7384\u5b66\u7684\u591a\u6b21\u91cd\u590d\u6c42\u6b63\u89e3\u65b9\u6cd5\uff0c\u968f\u540e\u51b3\u5b9a\u5f00\u59cb\u770bT2\u3002</p> <p>T2\u8003\u573a\u600e\u4e48\u60f3\u7684\u8bb0\u4e0d\u592a\u6e05\u4e86\uff0c\u5927\u4f53\u662f\u5fc3\u6001\u4e0d\u592a\u5bf9\uff0c\u6253\u5b8c\u90e8\u5206\u5206\u5c31\u5f00\u59cb\u60f3\u5c3d\u53ef\u80fd\u6c42\u6b63\u89e3\uff0c\u4f46\u611f\u89c9\u601d\u8def\u4e00\u76f4\u4e0d\u5728\u7ebf\u3002\u968f\u540e1h\u56de\u53bb\u770bT1\uff0c\u6d4b\u6837\u4f8b\uff0c\u63a8\u7ed3\u8bba\uff0c\u53ea\u5230\u8003\u8bd5\u7ed3\u675f\u4e5f\u6ca1\u60f3\u51fa\u6b63\u89e3\uff0c\u8003\u573a\u53d1\u6325\u592a\u4e0d\u7a33\u5b9a\u4e86\u3002</p>","tags":["\u603b\u7ed3","\u9898\u89e3"]},{"location":"OI/%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/NOIp-2024-%E5%A4%8D%E7%9B%98-%E8%A1%A5%E9%A2%98/#_4","title":"\u603b\u7ed3","text":"<p>\u6b64\u6b21\u5931\u5229\u4e3b\u8981\u8fd8\u662f\u5fc3\u6001\u70b8\u4e86\uff0c\u4ee5\u53ca\u57fa\u7840\u7684\u4e0d\u624e\u5b9e\uff0c\u5bfc\u81f4\u51fa\u73b0\u4e86\u8003\u573a\u65e0\u601d\u8def\uff0c\u72b6\u6001\u4e0d\u826f\u597d\u7684\u60c5\u51b5\u3002\u800c\u4e14\u8003\u573a\u7684\u7b56\u7565\u4e5f\u4e0d\u6b63\u786e\uff0c\u8fd9\u662f\u5f88\u5927\u7684\u95ee\u9898\u3002</p>","tags":["\u603b\u7ed3","\u9898\u89e3"]},{"location":"OI/%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/NOIp-2024-%E5%A4%8D%E7%9B%98-%E8%A1%A5%E9%A2%98/#_5","title":"\u8865\u9898\u8bb0\u5f55","text":"<ul> <li>2025-2-21 14:27\uff1a\u5f00\u59cb\u8865T1</li> <li>2025-2-21 15:09\uff1aT1 AC</li> <li>2025-2-21 17:14 T1\u9898\u89e3\u5b8c\u6210</li> </ul>","tags":["\u603b\u7ed3","\u9898\u89e3"]},{"location":"OI/%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/NOIp-2024-%E5%A4%8D%E7%9B%98-%E8%A1%A5%E9%A2%98/#_6","title":"\u9898\u89e3","text":"","tags":["\u603b\u7ed3","\u9898\u89e3"]},{"location":"OI/%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/NOIp-2024-%E5%A4%8D%E7%9B%98-%E8%A1%A5%E9%A2%98/#t1","title":"T1","text":"","tags":["\u603b\u7ed3","\u9898\u89e3"]},{"location":"OI/%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/NOIp-2024-%E5%A4%8D%E7%9B%98-%E8%A1%A5%E9%A2%98/#_7","title":"\u9898\u610f\u5206\u6790","text":"<p>\u6839\u636e\u9898\u610f\uff0c\u8003\u8651\u8d2a\u5fc3\u505a\u6cd5\uff0c\u5373\u6bcf\u4e00\u4f4d\u5c3d\u53ef\u80fd\u5339\u914d\u4e0a\uff0c\u8fd9\u4e2a\u7b56\u7565\u663e\u7136\u6b63\u786e\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u6bcf\u4e00\u4f4d\u6765\u8bf4\uff0c\u5f53\u524d\u4f4d\u5339\u914d\u81f3\u591a\u5bfc\u81f4\u540e\u9762\u7684\u4e00\u5bf9\u65e0\u6cd5\u5339\u914d\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c06\u5b57\u7b26\u4e32\u6309\u65e0\u6cd5\u4ea4\u6362\u7684\u5b57\u7b26\u4e3a\u754c\uff0c\u5206\u5272\u4e3a\u591a\u4e2a\u5757\uff0c\u5206\u522b\u5bf9\u4e8e\u6bcf\u4e00\u5757\u8fdb\u884c\u64cd\u4f5c\u3002</p> <p>\u4e00\u79cd\u505a\u6cd5\u4e3a\uff0c\u5148\u9884\u5904\u7406\u51fa\u6bcf\u4e00\u4f4d\u5b57\u7b26\u6240\u5728\u7684\u5757\u7684\u7f16\u53f7\uff0c\u5e76\u9884\u5904\u7406\u51fa\u6bcf\u4e00\u4e2a\u5757\u4e2d\uff0c<code>1</code>\u548c<code>0</code>\u7684\u4e2a\u6570\u3002\u7136\u540e\u904d\u5386\u5b57\u7b26\u4e32\uff0c\u5982\u679c\u5f53\u524d\u5b57\u7b26\u6240\u5728\u7684\u4e24\u4e2a\u5757\u4e2d\uff0c\u6709\u76f8\u540c\u7684\u5b57\u7b26\uff0c\u5219\u5c06\u4e24\u4e2a\u5757\u4e2d\u5bf9\u5e94\u5b57\u7b26\u7684\u4e2a\u6570\u51cf\u4e00\uff1b\u5982\u679c\u6ca1\u6709\uff0c\u5219\u5c06\u5f53\u524d\u4f4d\u7684\u4e24\u4e2a\u5b57\u7b26\u51cf\u53bb\u3002\u8fc7\u7a0b\u4e2d\u7edf\u8ba1\u7b54\u6848\u5373\u53ef\u3002</p>","tags":["\u603b\u7ed3","\u9898\u89e3"]},{"location":"OI/%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/NOIp-2024-%E5%A4%8D%E7%9B%98-%E8%A1%A5%E9%A2%98/#code","title":"Code","text":"<pre><code>// #pragma GCC optimize(1, 2, 3, \"Ofast\", \"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define ll long long\n#define int ll\n#define ONLINE_JUDGE\n#define MULTI_CASES\n#define endl '\\n'\nconst int MaxN = 2e5 + 100;\nconst int INF = 1e9;\nconst int mod = 212370440130137957ll;\nint T = 1, N, M;\n// int a[MaxN];\nint cnt1[MaxN], cnt2[MaxN];\npair&lt;int, int&gt; q1[MaxN], q2[MaxN];\ninline void Solve()\n{\n    cin &gt;&gt; N;\n    string s1, s2, a, b;\n    memset(cnt1, 0, sizeof cnt1);\n    memset(cnt2, 0, sizeof cnt2);\n    memset(q1, 0, sizeof q1);\n    memset(q2, 0, sizeof q2);\n    int pos = 1;\n    cnt1[0] = 1;\n    cin &gt;&gt; s1 &gt;&gt; s2 &gt;&gt; a &gt;&gt; b;\n    for (int i = 1; i &lt; N; i++)\n    {\n        if (a[i] == a[i - 1] &amp;&amp; a[i] == '1')\n        {\n            cnt1[i] = pos;\n        }\n        else\n        {\n            pos++;\n            cnt1[i] = pos;\n        }\n        if (s1[i] == '1')\n        {\n            q1[cnt1[i]].first++;\n        }\n        else\n        {\n            q1[cnt1[i]].second++;\n        }\n    }\n    pos = 1;\n    cnt2[0] = 1;\n    for (int i = 1; i &lt; N; i++)\n    {\n        if (b[i] == b[i - 1] &amp;&amp; b[i] == '1')\n        {\n            cnt2[i] = pos;\n        }\n        else\n        {\n            pos++;\n            cnt2[i] = pos;\n        }\n        if (s2[i] == '1')\n        {\n            q2[cnt2[i]].first++;\n        }\n        else\n        {\n            q2[cnt2[i]].second++;\n        }\n    }\n    if (s1[0] == '1')\n    {\n        q1[cnt1[0]].first++;\n    }\n    else\n    {\n        q1[cnt1[0]].second++;\n    }\n    if (s2[0] == '1')\n    {\n        q2[cnt2[0]].first++;\n    }\n    else\n    {\n        q2[cnt2[0]].second++;\n    }\n    int sum = 0;\n    for (int i = 0; i &lt; N; i++)\n    {\n        // cerr &lt;&lt; cnt1[i] &lt;&lt; \" \" &lt;&lt; cnt2[i] &lt;&lt; endl;\n\n        // cerr &lt;&lt; q1[cnt1[i]].first &lt;&lt; \" \" &lt;&lt; q2[cnt2[i]].first &lt;&lt; \" \";\n        // cerr &lt;&lt; q1[cnt1[i]].second &lt;&lt; \" \" &lt;&lt; q2[cnt2[i]].second &lt;&lt; endl;\n\n        if (q1[cnt1[i]].first &gt; 0 &amp;&amp; q2[cnt2[i]].first &gt; 0)\n        {\n            q1[cnt1[i]].first--;\n            q2[cnt2[i]].first--;\n            sum++;\n            continue;\n        }\n        if (q1[cnt1[i]].second &gt; 0 &amp;&amp; q2[cnt2[i]].second &gt; 0)\n        {\n            q1[cnt1[i]].second--;\n            q2[cnt2[i]].second--;\n            sum++;\n            continue;\n        }\n        if (q1[cnt1[i]].first)\n        {\n            q1[cnt1[i]].first--;\n            q2[cnt2[i]].second--;\n            continue;\n        }\n        if (q1[cnt1[i]].second)\n        {\n            q1[cnt1[i]].second--;\n            q2[cnt2[i]].first--;\n        }\n    }\n    cout &lt;&lt; sum &lt;&lt; endl;\n}\nsigned main()\n{\n#ifndef ONLINE_JUDGE\n    freopen(\".in\", \"r\", stdin);\n    freopen(\".out\", \"w\", stdout);\n#endif\n    ios::sync_with_stdio(0);\n    cin.tie(0), cout.tie(0);\n\n#ifdef MULTI_CASES\n    cin &gt;&gt; T;\n    while (T--)\n#endif\n        Solve();\n    // fclose(stdin);\n    // fclose(stdout);\n    return 0;\n}\n</code></pre>","tags":["\u603b\u7ed3","\u9898\u89e3"]},{"location":"OI/%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/NOIp-2024-%E5%A4%8D%E7%9B%98-%E8%A1%A5%E9%A2%98/#t2","title":"T2","text":"","tags":["\u603b\u7ed3","\u9898\u89e3"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/dp%E5%AD%A6%E4%B9%A0%E8%BF%87%E7%A8%8B%E5%8F%8A%E8%AE%B0%E5%BD%95/","title":"\u5173\u952e\u70b9","text":"<ul> <li>dp\u7684\u53c2\u6570</li> <li>dp\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b</li> <li>\u521d\u59cb\u5316</li> <li>\u7ec6\u8282\u90e8\u5206</li> </ul>","tags":["\u7b97\u6cd5","\u52a8\u6001\u89c4\u5212dp","\u5b66\u4e60\u8bb0\u5f55"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/dp%E5%AD%A6%E4%B9%A0%E8%BF%87%E7%A8%8B%E5%8F%8A%E8%AE%B0%E5%BD%95/#p1020-noip1999","title":"P1020 [NOIP1999 \u63d0\u9ad8\u7ec4] \u5bfc\u5f39\u62e6\u622a","text":"<p>Link</p>","tags":["\u7b97\u6cd5","\u52a8\u6001\u89c4\u5212dp","\u5b66\u4e60\u8bb0\u5f55"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/dp%E5%AD%A6%E4%B9%A0%E8%BF%87%E7%A8%8B%E5%8F%8A%E8%AE%B0%E5%BD%95/#_2","title":"\u89e3\u6790","text":"<p>\u8fd9\u9053\u9898\u5206\u4e3a\u4e24\u95ee\uff0c\u6d89\u53ca\u52a8\u6001\u89c4\u5212\u53ca\u8d2a\u5fc3\u601d\u60f3</p>","tags":["\u7b97\u6cd5","\u52a8\u6001\u89c4\u5212dp","\u5b66\u4e60\u8bb0\u5f55"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/dp%E5%AD%A6%E4%B9%A0%E8%BF%87%E7%A8%8B%E5%8F%8A%E8%AE%B0%E5%BD%95/#question-1","title":"Question 1.","text":"<p>\u6839\u636e\u9898\u610f\uff0c\u7b2c\u4e00\u95ee\u6c42\u7684\u5373\u4e3a\u6700\u957f\u4e0d\u4e0a\u5347\u5b50\u5e8f\u5217\u3002\u5c5e\u4e8e\u975e\u5e38\u5178\u578b\u7684dp\u3002</p>","tags":["\u7b97\u6cd5","\u52a8\u6001\u89c4\u5212dp","\u5b66\u4e60\u8bb0\u5f55"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/dp%E5%AD%A6%E4%B9%A0%E8%BF%87%E7%A8%8B%E5%8F%8A%E8%AE%B0%E5%BD%95/#on2on2","title":"O(N^2) \u505a\u6cd5","text":"<p>\u53c2\u6570\uff1a\u8bbe dp_i \u8868\u793a\u4ee5 a_i \u7ed3\u5c3e\u7684\u6700\u957f\u4e0d\u4e0a\u5347\u5b50\u5e8f\u5217\uff0c\u6700\u7ec8\u7b54\u6848\u5373\u4e3a \\max_{1\\le i \\le n}dp_i\u3002</p> <p>\u8f6c\u79fb\u65b9\u7a0b\uff1adp_i=\\max_{1\\le j&lt;i,a_j\\le a_i}(dp_i+1)</p> <p>\u590d\u6742\u5ea6\uff1aO(N^2)\u3002</p>","tags":["\u7b97\u6cd5","\u52a8\u6001\u89c4\u5212dp","\u5b66\u4e60\u8bb0\u5f55"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/dp%E5%AD%A6%E4%B9%A0%E8%BF%87%E7%A8%8B%E5%8F%8A%E8%AE%B0%E5%BD%95/#on-log-non-log-n","title":"O(n \\log n) \u505a\u6cd5","text":"<p>\u5f53 n \u7684\u8303\u56f4\u6269\u5927\u5230 n \\leq 10^5 \u65f6\uff0c\u7b2c\u4e00\u79cd\u505a\u6cd5\u5c31\u4e0d\u591f\u5feb\u4e86\uff0c\u4e0b\u9762\u7ed9\u51fa\u4e86\u4e00\u4e2a O(n \\log n) \u7684\u505a\u6cd5\u3002</p> <p>\u56de\u987e\u4e00\u4e0b\u4e4b\u524d\u7684\u72b6\u6001\uff1a(i, l)\u3002</p> <p>\u4f46\u8fd9\u6b21\uff0c\u6211\u4eec\u4e0d\u662f\u8981\u6309\u7167\u76f8\u540c\u7684 i \u5904\u7406\u72b6\u6001\uff0c\u800c\u662f\u76f4\u63a5\u5224\u65ad\u5408\u6cd5\u7684 (i, l)\u3002</p> <p>\u518d\u770b\u4e00\u4e0b\u4e4b\u524d\u7684\u8f6c\u79fb\uff1a(j, l - 1) \\rightarrow (i, l)\uff0c\u5c31\u53ef\u4ee5\u5224\u65ad\u67d0\u4e2a (i, l) \u662f\u5426\u5408\u6cd5\u3002</p> <p>\u521d\u59cb\u65f6 (1, 1) \u80af\u5b9a\u5408\u6cd5\u3002</p> <p>\u90a3\u4e48\uff0c\u53ea\u9700\u8981\u627e\u5230\u4e00\u4e2a l \u6700\u5927\u7684\u5408\u6cd5\u7684 (i, l)\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u6700\u7ec8\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u4e86\u3002</p> <p>\u6458\u81eaOI wiki \u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217</p> <p>\u6839\u636e\u6b64\u601d\u8def\uff0c\u53ef\u4ee5\u8fdb\u884c\u5982\u4e0b\u5206\u6790\uff1a</p> <p>\u53c2\u6570\uff1adp_i \u4e3a\u6240\u6709\u7684\u957f\u5ea6\u4e3a i \u7684\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u7684\u672b\u5c3e\u5143\u7d20\u7684\u6700\u5c0f\u503c\uff0clen \u4e3a\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u3002</p> <p>\u505a\u6cd5\uff1a\u5f53\u524d\u5df2\u77e5\u957f\u5ea6\u4e3a 1\uff0c\u6240\u4ee5\u53ef\u4ece 2 \u5230 n \u5faa\u73af\uff0c\u6c42\u51fa\u524d i \u4e2a\u5143\u7d20\u7684\u6700\u957f\u957f\u5ea6\uff0c\u5faa\u73af\u8fc7\u7a0b\u4e2d\u4e0d\u65ad\u66f4\u65b0\u7ef4\u62a4 dp \u6570\u7ec4\u53ca len \u7684\u957f\u5ea6\u3002</p> <p>\u5982\u4f55\u7ef4\u62a4\uff1f</p> <p>\u8003\u8651\u6bcf\u4e00\u6b65\u7684\u51b3\u7b56\uff0c</p> <p>\u5f53 a_i\\le dp_len \u65f6\uff0c\u663e\u7136 \u53ef\u4ee5\u5c06\u5176\u63d2\u5165\u5e8f\u5217\u672b\u5c3e\uff0clen+=1\u3002</p> <p>\u53cd\u4e4b\uff0c\u53ef\u4ee5\u5c06 dp \u5e8f\u5217\u4e2d\u7b2c\u4e00\u4e2a\u5927\u4e8e\u5b83\u7684\u5143\u7d20\u66f4\u65b0\u4e3a a_i\u3002\u8fd9\u4e00\u6b65\u4e2d\u53ef\u4ee5\u4f7f\u7528\u4e8c\u5206\u89e3\u51b3\u3002</p> <p>\u81f3\u6b64\uff0cQuestion 1.\u89e3\u51b3\u3002</p>","tags":["\u7b97\u6cd5","\u52a8\u6001\u89c4\u5212dp","\u5b66\u4e60\u8bb0\u5f55"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/dp%E5%AD%A6%E4%B9%A0%E8%BF%87%E7%A8%8B%E5%8F%8A%E8%AE%B0%E5%BD%95/#question-2","title":"Question 2.","text":"<p>\u7b2c\u4e8c\u95ee\u8981\u6c42\u62e6\u622a\u6240\u6709\u5bfc\u5f39\u6240\u9700\u7684\u6700\u5c0f\u6570\u91cf\u3002</p>","tags":["\u7b97\u6cd5","\u52a8\u6001\u89c4\u5212dp","\u5b66\u4e60\u8bb0\u5f55"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/dp%E5%AD%A6%E4%B9%A0%E8%BF%87%E7%A8%8B%E5%8F%8A%E8%AE%B0%E5%BD%95/#_3","title":"\u8003\u8651\u8d2a\u5fc3","text":"<p>\u4ece\u7b2c\u4e00\u95ee\u6765\u8003\u8651\uff0c\u4e00\u5957\u7cfb\u7edf\u6240\u62e6\u622a\u7684\u5373\u4e3a\u5f53\u524d\u7684\u6700\u957f\u4e0d\u4e0a\u5347\u5b50\u5e8f\u5217\uff0c\u63a8\u5e7f\u8003\u8651\uff0c\u591a\u5957\u7cfb\u7edf\u62e6\u622a\u5373\u4e3a\u6bcf\u6b21\u5220\u9664\u6700\u957f\u4e0d\u4e0a\u5347\u5b50\u5e8f\u5217\u4e4b\u540e\u91cd\u590d\u64cd\u4f5c\u3002\u6240\u4ee5\u6839\u636eDilworth\u5b9a\u7406\u53ef\u5f97\uff0c\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u5c31\u662f\u80fd\u6784\u6210\u7684\u4e0d\u4e0a\u5347\u5e8f\u5217\u7684\u4e2a\u6570\u3002</p> <p>\u6240\u4ee5\u7b2c\u4e8c\u95ee\u5b9e\u9645\u4e0a\u5373\u4e3a\u6c42\u89e3\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\uff0c\u7b97\u6cd5\u4e0eQue 1.\u57fa\u672c\u76f8\u540c\uff0c\u7a0d\u5fae\u6539\u52a8\u5373\u53ef\u3002</p>","tags":["\u7b97\u6cd5","\u52a8\u6001\u89c4\u5212dp","\u5b66\u4e60\u8bb0\u5f55"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/dp%E5%AD%A6%E4%B9%A0%E8%BF%87%E7%A8%8B%E5%8F%8A%E8%AE%B0%E5%BD%95/#code","title":"Code","text":"<pre><code>// #pragma GCC optimize(1, 2, 3, \"Ofast\", \"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define ll long long\n#define int ll\n#define ONLINE_JUDGE\n// #define MULTI_CASES\n#define endl '\\n'\nconst int MaxN = 2e5+100;\nconst int INF = 1e9;\nconst int mod=212370440130137957ll;\nint T=1, N, M;\nint a[MaxN];\nint dp[MaxN],dp2[MaxN];\n\ninline void Solve()\n{\n    int x;\n    while(cin&gt;&gt;x){\n        a[++N]=x;\n    }\n    dp[1]=a[1];\n    int len=1;\n    for(int i=2;i&lt;=N;i++){\n        if(a[i]&lt;=dp[len]){\n\n            dp[++len]=a[i];\n        }\n        else{\n            int cnt=upper_bound(dp+1,dp+len+1,a[i],greater&lt;int&gt;())-dp;\n            dp[cnt]=a[i];\n        }\n    }\n    cout&lt;&lt;len&lt;&lt;endl;\n    // return;\n    len=1;\n    dp2[1]=a[1];\n    for(int i=2;i&lt;=N;i++){\n        if(a[i]&gt;dp2[len]){\n            len++;\n            dp2[len]=a[i];\n        }\n        else{\n            int cnt=lower_bound(dp2+1,dp2+len+1,a[i])-dp2;\n            dp2[cnt]=a[i];\n        }\n    }\n    cout&lt;&lt;len&lt;&lt;endl;\n}\nsigned main()\n{\n#ifndef ONLINE_JUDGE\n    freopen(\".in\", \"r\", stdin);\n    freopen(\".out\", \"w\", stdout);\n#endif\n    ios::sync_with_stdio(0);\n    cin.tie(0),cout.tie(0);\n\n#ifdef MULTI_CASES\n    cin &gt;&gt; T;\n    while (T--)\n#endif\n       Solve();\n    //fclose(stdin);\n    //fclose(stdout);\n    return 0;\n}\n</code></pre>","tags":["\u7b97\u6cd5","\u52a8\u6001\u89c4\u5212dp","\u5b66\u4e60\u8bb0\u5f55"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/dp%E5%AD%A6%E4%B9%A0%E8%BF%87%E7%A8%8B%E5%8F%8A%E8%AE%B0%E5%BD%95/#p1026-noip2001","title":"P1026 [NOIP2001 \u63d0\u9ad8\u7ec4] \u7edf\u8ba1\u5355\u8bcd\u4e2a\u6570","text":"","tags":["\u7b97\u6cd5","\u52a8\u6001\u89c4\u5212dp","\u5b66\u4e60\u8bb0\u5f55"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/dp%E5%AD%A6%E4%B9%A0%E8%BF%87%E7%A8%8B%E5%8F%8A%E8%AE%B0%E5%BD%95/#_4","title":"\u89e3\u6790","text":"<p>\u672c\u9898\u6c42\u89e3\u5c06\u4e00\u4e2a\u5b57\u7b26\u4e32\u62c6\u5206\u6210 k \u4e2a\u90e8\u5206\uff0c\u4f7f\u5f97\u6bcf\u4efd\u4e2d\u5305\u542b\u7684\u5355\u8bcd\u4e2a\u6570\u603b\u6570\u6700\u5927\u3002</p> <p>\u6570\u636e\u5f88\u5c0f\uff0c\u8003\u8651 dp \u505a\u6cd5\u3002</p> <p>\u9996\u5148\uff0c\u9884\u5904\u7406 sum_{i,j} \u6570\u7ec4\uff0c\u8868\u793a\u4ece i \u5230 j \u7684\u5355\u8bcd\u6570\u3002\u4ece\u540e\u5f80\u524d\u63a8\uff0c\u53ef\u5f97 sum_{i,j}=sum_{i+1,j} \u5982\u679c\u5b58\u5728\u4ece a_i \u5f00\u5934\u7684\u5355\u8bcd\uff0c\u5219\u518d\u52a0\u4e00\uff08\u6ce8\u610f\u53ea\u52a0\u4e00\u6b21\uff09\u3002</p> <p>\u5173\u4e8e\u53c2\u6570\uff0c\u53ef\u4ee5\u4ece answer \u89d2\u5ea6\u9006\u5411\u53bb\u63a8\uff0c\u672c\u9898\u6240\u6c42\u4e3a\u5206\u6210 k \u4efd\u4ee5\u540e\uff0c\u5305\u542b\u5355\u8bcd\u7684\u6700\u5927\u4e2a\u6570\u3002\u901a\u8fc7\u7b80\u5355\u63a8\u7406\u53ef\u5f97\uff0c\u672c\u9898 dp \u6709\u4e09\u4e2a\u53c2\u6570\uff0c\u5373\u4e3a\uff1a</p> <ul> <li>\u6700\u5927\u4e2a\u6570</li> <li>\u5206\u4e3a k \u4efd</li> <li>\u5b57\u7b26\u4e32\u957f\u5ea6 \uff08\u8fd9\u4e2a\u6761\u4ef6\u6ca1\u6709\u660e\u663e\u6307\u51fa\uff0c\u4f46\u5341\u5206\u5173\u952e\uff0c\u4e14\u5728dp\u7c7b\u505a\u6cd5\u4e2d\u8f83\u4e3a\u5e38\u89c1\uff09</li> </ul> <p>\u4e4b\u540e\u63a8\u7406\u53ef\u5f97\uff0cdp_{i,j} \u8868\u793a\u4e00\u4e2a\u957f\u5ea6\u4e3a i \u7684\u5b57\u7b26\u4e32\u5728\u62c6\u5206\u4e3a k \u4efd\u65f6\uff0c\u6700\u591a\u7684\u5355\u8bcd\u4e2a\u6570\u3002</p> <p>\u8003\u8651\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff0c\u8bbe\u65ad\u70b9 r\\in [j,i) \u53ef\u4ee5\u5f97\u51fa\uff1a $$ dp_{i,j}=\\max_{j\\le r&lt;i}(dp_{i,j},dp_{r,j-1}+sum_{r+1,i})$$</p> <p>\u5927\u4f53\u65b9\u5411\u786e\u5b9a\u540e\uff0c\u8003\u8651\u521d\u59cb\u5316\uff0c dp_{i,j}=sum_{i,i}+dp_{i-1,i-1} dp_{i,1}=sum_{1,i}</p>","tags":["\u7b97\u6cd5","\u52a8\u6001\u89c4\u5212dp","\u5b66\u4e60\u8bb0\u5f55"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/dp%E5%AD%A6%E4%B9%A0%E8%BF%87%E7%A8%8B%E5%8F%8A%E8%AE%B0%E5%BD%95/#_5","title":"\u9519\u8bef\u6c47\u603b","text":"<p>RE on #3~#10\uff1a\u6570\u7ec4\u5927\u5c0f\u5f00\u4e3a k\uff0c\u5ffd\u7565\u4e86\u5b9e\u9645\u957f\u5ea6\u5e94\u8be5\u4e3a k\\times 20\u3002</p>","tags":["\u7b97\u6cd5","\u52a8\u6001\u89c4\u5212dp","\u5b66\u4e60\u8bb0\u5f55"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/dp%E5%AD%A6%E4%B9%A0%E8%BF%87%E7%A8%8B%E5%8F%8A%E8%AE%B0%E5%BD%95/#code_1","title":"Code","text":"<pre><code>// #pragma GCC optimize(1, 2, 3, \"Ofast\", \"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define ll long long\n#define int ll\n#define ONLINE_JUDGE\n// #define MULTI_CASES\n#define endl '\\n'\nconst int MaxN = 800;\nconst int INF = 1e9;\nconst int mod=212370440130137957ll;\nint T=1, N, M, K;\nint a[MaxN];\nstring sa[10];\nstring s={},s1;\n\nint sum[MaxN][MaxN];\nbool check(int l,int r){\n    string x=s.substr(l,r-l+1);\n    for(int i=1;i&lt;=K;i++){\n        if(x.find(sa[i])==0){\n            return true;\n        }\n    }\n    return false;\n}\nvoid init(){\n    for(int i=N;i&gt;=1;i--){\n        for(int j=i;j&gt;=1;j--){\n            sum[j][i]=sum[j+1][i];\n            if(check(j,i))sum[j][i]++;\n        }\n    }\n}\nint dp[MaxN][MaxN];\ninline void Solve()\n{\n    cin&gt;&gt;N&gt;&gt;M;\n    s+=' ';\n    for(int i=1;i&lt;=N;i++){\n        cin&gt;&gt;s1;\n        s+=s1;\n    }\n    N*=20;\n    cin&gt;&gt;K;\n    for(int i=1;i&lt;=K;i++){\n        cin&gt;&gt;sa[i];\n    }\n    init();\n    // dp[0][0]=sum[0][0];\n    dp[0][0]=0;\n    for(int i=1;i&lt;=M;i++){\n        dp[i][i]=dp[i-1][i-1]+sum[i][i];\n    }\n    for(int i=1;i&lt;=N;i++){\n        dp[i][1]=sum[1][i];\n    }\n    for(int i=1;i&lt;=N;i++){\n        for(int j=1;j&lt;=M&amp;&amp;j&lt;i;j++){\n            for(int r=j;r&lt;i;r++){\n                dp[i][j]=max(dp[i][j],dp[r][j-1]+sum[r+1][i]);\n            }\n        }\n    }\n    cout&lt;&lt;dp[N][M];  \n}\nsigned main()\n{\n#ifndef ONLINE_JUDGE\n    freopen(\".in\", \"r\", stdin);\n    freopen(\".out\", \"w\", stdout);\n#endif\n    ios::sync_with_stdio(0);\n    cin.tie(0),cout.tie(0);\n\n#ifdef MULTI_CASES\n    cin &gt;&gt; T;\n    while (T--)\n#endif\n       Solve();\n    //fclose(stdin);\n    //fclose(stdout);\n    return 0;\n}\n</code></pre>","tags":["\u7b97\u6cd5","\u52a8\u6001\u89c4\u5212dp","\u5b66\u4e60\u8bb0\u5f55"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/dp%E5%AD%A6%E4%B9%A0%E8%BF%87%E7%A8%8B%E5%8F%8A%E8%AE%B0%E5%BD%95/#p11187","title":"P11187 \u914d\u5bf9\u5e8f\u5217","text":"","tags":["\u7b97\u6cd5","\u52a8\u6001\u89c4\u5212dp","\u5b66\u4e60\u8bb0\u5f55"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/dp%E5%AD%A6%E4%B9%A0%E8%BF%87%E7%A8%8B%E5%8F%8A%E8%AE%B0%E5%BD%95/#_6","title":"\u89e3\u6790","text":"<p>\u6839\u636e\u9898\u610f\uff0c\u6b64\u9898\u8981\u6c42\u51fa\u5e8f\u5217\u4e2d\u7b26\u5408 c_1,c_1,c_2,c_2 \u8fd9\u79cd\u4e24\u4e24\u76f8\u540c\u7684\u6700\u957f\u5b50\u5e8f\u5217\u3002</p> <p>\u8981\u6c42\u5b50\u5e8f\u5217\u6700\u5927\u503c\uff0c\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 dp \u505a\u6cd5\u3002</p> <p>\u8003\u8651\u53c2\u6570\uff0c\u8bbe dp_i \u8868\u793a\u4ee5 i \u4e3a\u7ed3\u5c3e\u7684\u7b26\u5408\u6761\u4ef6\u7684\u5b50\u5e8f\u5217\u6700\u5927\u503c\u3002\u6700\u7ec8\u7684\u7b54\u6848\u5373\u4e3a \\max_{1\\le i\\le n}{dp_i}</p> <p>\u8003\u8651\u9884\u5904\u7406\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u9884\u5904\u7406\u51fa pre_i\uff0c\u8868\u793a\u5e8f\u5217\u4e2d\u4e0a\u4e00\u4e2a\u4e0e a_i \u76f8\u540c\u7684\u6570\u7684\u4f4d\u7f6e\u3002\u5177\u4f53\u5b9e\u73b0\u4e5f\u5341\u5206\u7b80\u5355\uff0c\u4f7f\u7528<code>map</code>\u5373\u53ef\u3002</p> <p>\u4e0d\u96be\u5f97\u51fa\uff0cpre_i \u5982\u679c\u4e0d\u4e3a 0\uff0c\u5219 dp_i \u624d\u4f1a\u6709\u503c\u3002\u53c8\u56e0\u4e3a\u6bcf\u4e2a\u6570\u5b57\u90fd\u662f\u6210\u5bf9\u51fa\u73b0\u7684\uff0c\u6240\u4ee5\uff0c\u53ea\u9700\u8981\u627e\u5230\u4e0e\u8fd9\u4e2a\u6570\u76f8\u540c\u7684\u4e0a\u4e00\u4e2a\u6570\u548c\u4e0a\u4e00\u4e2a\u6570\u7684\u4e0a\u4e00\u4e2a\u6570\uff0c\u6c42\u51fa\u4ece\u4e0a\u4e00\u4e2a\u6570\u7684\u4e0a\u4e00\u4e2a\u6570\u7684\u4e0b\u4e00\u4f4d\u81f3\u4e0a\u4e00\u4e2a\u6570\u7684\u524d\u4e00\u4f4d\u7684\u6700\u5927\u503c\uff0c\u8fd9\u6837\u53ef\u4ee5\u6ee1\u8db3 1\\le i&lt;k,s2_i\\ne s2_{i+1} \u7684\u6761\u4ef6\u3002\u518d\u52a0\u4e0a\u5f53\u524d\u7684 2 \u5c31\u662f dp_i \u7684\u7b54\u6848\u3002</p> <p>\u5373 dp_i=\\max_{j=pre_{pre_i}}^{pre_i-1}{dp_j+2}</p> <p>\u5173\u4e8e\u6c42 \\max \u7684\u64cd\u4f5c\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6570\u636e\u7ed3\u6784\u4f18\u5316\uff0c\u6bd4\u5982\u7ebf\u6bb5\u6811\u6216\u8005ST\u8868\u7b49\u3002</p> <p>\u6ce8\u610f\u5982\u679c pre_i=0 \u5219\u5e94\u8be5\u8df3\u8fc7\u3002</p>","tags":["\u7b97\u6cd5","\u52a8\u6001\u89c4\u5212dp","\u5b66\u4e60\u8bb0\u5f55"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/dp%E5%AD%A6%E4%B9%A0%E8%BF%87%E7%A8%8B%E5%8F%8A%E8%AE%B0%E5%BD%95/#code_2","title":"Code","text":"<pre><code>// #pragma GCC optimize(1, 2, 3, \"Ofast\", \"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define ll long long\n#define int ll\n#define ONLINE_JUDGE\n// #define MULTI_CASES\n#define endl '\\n'\nconst int MaxN = 5e5+100;\nconst int INF = 1e9;\nconst int mod=212370440130137957ll;\nint T=1, N, M;\nint a[MaxN];\nint pre[MaxN];\nstruct Segment{\n    struct Point{\n        int l,r,tag;\n        int mex;\n    };\n    vector&lt;int&gt;a;   \n    vector&lt;Point&gt;t;\n    Segment(int N){\n        a.assign(N+10,0);\n        t.assign(N&lt;&lt;4,{});\n    }\n    #define ls p&lt;&lt;1\n    #define rs p&lt;&lt;1|1\n    int midd(int p){\n        return (t[p].l+t[p].r)&gt;&gt;1;\n    }\n    void push_up(int p){\n        t[p].mex=max(t[ls].mex,t[rs].mex);\n    }\n    void change(int p,int k,int q){\n        int l=t[p].l,r=t[p].r;\n        if(l==r&amp;&amp;l==q){\n            t[p].mex+=k;\n            return;\n        }\n        int mid=midd(p);\n        if(q&lt;=mid){\n            change(ls,k,q);\n        }\n        if(mid&lt;q){\n            change(rs,k,q);\n        }\n        push_up(p);\n    }\n    void build(int p,int nl,int nr){\n        t[p].l=nl,t[p].r=nr;\n        if(nl==nr){\n            t[p].mex=a[nl];\n            return;\n        }\n        int mid=midd(p);\n        build(ls,nl,mid);\n        build(rs,mid+1,nr);\n        push_up(p);\n    }\n    int query(int p,int nl,int nr){\n        int l=t[p].l,r=t[p].r;\n        if(nl&lt;=l&amp;&amp;r&lt;=nr){\n            return t[p].mex;\n        }\n        int mid=midd(p);\n        int ans=0;\n        if(nl&lt;=mid){\n            ans=max(ans,query(ls,nl,nr));\n        }\n        if(mid&lt;nr){\n            ans=max(ans,query(rs,nl,nr));\n        }\n        return ans;\n    }\n};\ninline void Solve()\n{\n    map&lt;int,int&gt;mp;\n    cin&gt;&gt;N;\n    Segment Tree(N);\n    for(int i=1;i&lt;=N;i++){\n        cin&gt;&gt;a[i];\n        // Tree.a[i]=a[i];\n        if(mp[a[i]]==0){\n            mp[a[i]]=i;\n            pre[i]=0;\n        }\n        else{\n            pre[i]=mp[a[i]];\n            mp[a[i]]=i;\n        }\n    }\n    pre[0]=0;\n    Tree.build(1,1,N);\n    // Tree.change(1,1,1);\n    // cout&lt;&lt;1;return;\n    // vector&lt;int&gt;dp(N+1);\n    for(int i=1;i&lt;=N;i++){\n        if(pre[i]==0)\n            continue;\n        int maxn=Tree.query(1,pre[pre[i]]+1,pre[i]-1);\n        // cout&lt;&lt;maxn&lt;&lt;\" \";\n        Tree.change(1,maxn+2,i);\n    }\n\n    cout&lt;&lt;Tree.query(1,1,N);\n}\nsigned main()\n{\n#ifndef ONLINE_JUDGE\n    freopen(\".in\", \"r\", stdin);\n    freopen(\".out\", \"w\", stdout);\n#endif\n    ios::sync_with_stdio(0);\n    cin.tie(0),cout.tie(0);\n\n#ifdef MULTI_CASES\n    cin &gt;&gt; T;\n    while (T--)\n#endif\n       Solve();\n    //fclose(stdin);\n    //fclose(stdout);\n    return 0;\n}\n</code></pre>","tags":["\u7b97\u6cd5","\u52a8\u6001\u89c4\u5212dp","\u5b66\u4e60\u8bb0\u5f55"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/dp%E5%AD%A6%E4%B9%A0%E8%BF%87%E7%A8%8B%E5%8F%8A%E8%AE%B0%E5%BD%95/#p11188-kdoi-10","title":"P11188 \u300cKDOI-10\u300d\u5546\u5e97\u780d\u4ef7","text":"","tags":["\u7b97\u6cd5","\u52a8\u6001\u89c4\u5212dp","\u5b66\u4e60\u8bb0\u5f55"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/dp%E5%AD%A6%E4%B9%A0%E8%BF%87%E7%A8%8B%E5%8F%8A%E8%AE%B0%E5%BD%95/#_7","title":"\u89e3\u6790","text":"<p>\u6b64\u9898\u4e2d v_i\\le 10^5 \u4e0d\u96be\u5f97\u51fa\u5982\u679c\u8981\u82b1\u8d39 n \u7684\u4ee3\u4ef7\u5220\u9664\u5269\u4f59\u7684\u6570\uff0c\u6570\u4f4d\u4e00\u5b9a\u4e0d\u80fd\u5927\u4e8e 6\u3002</p> <p>\u7531\u6b64\u53ef\u5f97\uff0c\u8bbe dp_{i,j} \u8868\u793a\u524d i \u4f4d\u4e2d\u5df2\u7ecf\u5220\u9664 j \u4e2a\u6570\u65f6\uff0c\u5220\u9664\u6240\u6709\u6570\u4f4d\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002</p> <p>\u4e0d\u96be\u5f97\u51fa\uff0c\u6bcf\u4fdd\u7559\u5355\u72ec\u7684\u4e00\u4f4d\uff0c\u4ee3\u4ef7\u5c31\u4f1a\u589e\u52a0 10^{j-1}\\times s_i-v_i\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4ece\u540e\u5f80\u524d\u9012\u63a8\uff0c</p> <p>\u53ef\u5f97 dp_{i,j}=\\min(dp_{i,j},dp_{i,j+1}+10^{j-1}\\times s_i-v_i)</p> <p>\u663e\u7136\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6eda\u52a8\u6570\u7ec4\u6765\u4f18\u5316\u7a7a\u95f4\uff0c\u6240\u4ee5\u6700\u7ec8\u7684\u5f0f\u5b50\u4e3a\uff1a dp_j=\\min(dp_j,dp_{j+1}+10^{j-1}\\times s_i-v_i)</p>","tags":["\u7b97\u6cd5","\u52a8\u6001\u89c4\u5212dp","\u5b66\u4e60\u8bb0\u5f55"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/dp%E5%AD%A6%E4%B9%A0%E8%BF%87%E7%A8%8B%E5%8F%8A%E8%AE%B0%E5%BD%95/#code_3","title":"Code","text":"<pre><code>// #pragma GCC optimize(1, 2, 3, \"Ofast\", \"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define ll long long\n#define int ll\n#define ONLINE_JUDGE\n#define MULTI_CASES\n#define endl '\\n'\nconst int MaxN = 2e5+100;\nconst int INF = 1e18;\nconst int mod=212370440130137957ll;\nint T=1, N, M;\nint a[MaxN];\nint binpow(int a,int b){\n    if(b==0){\n        return 1;\n    }\n    int res=binpow(a,b/2);\n    if(b%2){\n        return res*res*a;\n    }\n    else{\n        return res*res;\n    }\n}\ninline void Solve()\n{\n    string s;\n    cin&gt;&gt;s;\n    for(int i=1;i&lt;=9;i++){\n        cin&gt;&gt;a[i];\n    }\n    int ans=0;\n    for(int i=0;i&lt;s.size();i++)\n    {\n        ans+=a[s[i]-'0'];\n    }\n    int sum=ans;\n    // cout&lt;&lt;ans&lt;&lt;endl;\n    for(int i=6;i&gt;=1;i--){\n        vector&lt;int&gt;dp(10);\n        dp.assign(10,INF);\n        dp[i]=sum;\n        for(int j=1;j&lt;=s.size();j++){\n            for(int ii=1;ii&lt;=i;ii++){\n                dp[ii]=min(dp[ii],dp[ii+1]+binpow(10,ii-1)*(s[j-1]-'0')-a[s[j-1]-'0']);\n            }\n        }\n        ans=min(ans,dp[1]);\n        // cout&lt;&lt;dp[1]&lt;&lt;' ';\n    }\n    cout&lt;&lt;ans&lt;&lt;endl;\n}\nsigned main()\n{\n#ifndef ONLINE_JUDGE\n    freopen(\".in\", \"r\", stdin);\n    freopen(\".out\", \"w\", stdout);\n#endif\n    ios::sync_with_stdio(0);\n    cin.tie(0),cout.tie(0);\n    cin&gt;&gt;T;\n#ifdef MULTI_CASES\n    cin &gt;&gt; T;\n    while (T--)\n#endif\n       Solve();\n    //fclose(stdin);\n    //fclose(stdout);\n    return 0;\n}\n</code></pre>","tags":["\u7b97\u6cd5","\u52a8\u6001\u89c4\u5212dp","\u5b66\u4e60\u8bb0\u5f55"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/dp%E5%AD%A6%E4%B9%A0%E8%BF%87%E7%A8%8B%E5%8F%8A%E8%AE%B0%E5%BD%95/#cf2025d-attribute-checks","title":"CF2025D Attribute Checks","text":"","tags":["\u7b97\u6cd5","\u52a8\u6001\u89c4\u5212dp","\u5b66\u4e60\u8bb0\u5f55"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/dp%E5%AD%A6%E4%B9%A0%E8%BF%87%E7%A8%8B%E5%8F%8A%E8%AE%B0%E5%BD%95/#_8","title":"\u89e3\u6790","text":"<p>\u672c\u9898\u7ed9\u5b9a\u4e86\u4e24\u79cd\u5c5e\u6027\uff0c\u5728\u8fc7\u7a0b\u4e2d\u4f1a\u83b7\u5f97 m \u4e2a\u5c5e\u6027\u70b9\uff0c\u4ee5\u53ca\u591a\u6b21check\uff0c\u6c42\u4f7f\u5f97\u901a\u8fc7\u7684check\u6570\u6700\u591a\u3002</p> <p>\u8003\u8651 dp \u505a\u6cd5\uff0c\u9996\u5148\u662f dp \u7684\u72b6\u6001\uff0c\u8bbe dp_{i,j} \u8868\u793a\u83b7\u5f97 i \u4e2a\u5c5e\u6027\u70b9\uff0c\u5e76\u5c06 j \u4e2a\u5c5e\u6027\u70b9\u52a0\u5728\u667a\u529b\uff0c\u5c06 i-j \u4e2a\u5c5e\u6027\u70b9\u52a0\u5728\u529b\u91cf\u4e0a\u65f6\uff0c\u80fd\u591f\u901a\u8fc7\u7684\u6700\u591a\u68c0\u67e5\u6570\u3002</p> <p>\u8003\u8651\u72b6\u6001\u8f6c\u79fb\uff0c\u663e\u7136\u53ef\u5f97\uff1a</p> <p>\u5bf9\u4e8e a_i(1\\le i\\le n)\uff0c\u82e5 a_i&gt;0\uff1a dp_{cnt,j}=\\max_{j=a_i}^{cnt}(dp_{cnt-1,j},dp_{cnt-1,j-1}) \u82e5 a_i&lt;0\uff1a dp_{cnt,j}=\\max_{j=cnt-\\lvert a_i\\rvert}^{0}(dp_{cnt,j}+1,dp_{cnt-1,j}+1) \u82e5 a_i=0\uff1a dp_{cnt,j}=dp_{cnt-1,j}(0\\le j&lt;cnt)</p> <p>\u8003\u8651\u4f18\u5316\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u5728<code>cnt</code>\u66f4\u65b0\u4e4b\u540e\uff0c\u53ea\u8981check\u7684\u503c\u5c0f\u4e8e\u7b49\u4e8e<code>cnt</code>\uff0c\u53ea\u9700\u8981\u5c06\u503c\u52a0\u4e00\u5373\u53ef\u3002\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u4f18\u5316\u6389\u7b2c\u4e00\u7ef4\u53ea\u4fdd\u7559\u7b2c\u4e8c\u7ef4\u3002\u5bf9\u4e8e\u533a\u95f4\u4fee\u6539\uff0c\u53ef\u4ee5\u4f7f\u7528\u7ebf\u6bb5\u6811\u6765\u5b9e\u73b0\u3002</p>","tags":["\u7b97\u6cd5","\u52a8\u6001\u89c4\u5212dp","\u5b66\u4e60\u8bb0\u5f55"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/dp%E5%AD%A6%E4%B9%A0%E8%BF%87%E7%A8%8B%E5%8F%8A%E8%AE%B0%E5%BD%95/#code_4","title":"Code","text":"","tags":["\u7b97\u6cd5","\u52a8\u6001\u89c4\u5212dp","\u5b66\u4e60\u8bb0\u5f55"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/dp%E5%AD%A6%E4%B9%A0%E8%BF%87%E7%A8%8B%E5%8F%8A%E8%AE%B0%E5%BD%95/#tle","title":"TLE","text":"<pre><code>#pragma GCC optimize(1, 2, 3, \"Ofast\", \"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define ll long long\n#define int ll\n#define ONLINE_JUDGE\n// #define MULTI_CASES\n#define endl '\\n'\nconst int MaxN = 2e6+100;\nconst int INF = 1e9;\nconst int mod=212370440130137957ll;\nint T=1, N, M;\nint a[MaxN];\nint dp[5000][5000];\ninline void Solve()\n{\n    cin&gt;&gt;N&gt;&gt;M;\n    for(int i=1;i&lt;=N;i++){\n        cin&gt;&gt;a[i];\n    }\n    int cnt=0;\n    for(int i=1;i&lt;=N;i++){\n        if(a[i]==0){\n            cnt++;\n            for(int j=0;j&lt;cnt;j++){\n                dp[cnt][j]=dp[cnt-1][j];\n            }\n        }\n        else{\n            if(a[i]&gt;0){\n                for(int j=a[i];j&lt;=cnt;j++){\n                    dp[cnt][j]=max(dp[cnt][j]+1,dp[cnt-1][j-1]+1);\n                }\n            }\n            else{\n                for(int j=cnt-abs(a[i]);j&gt;=0;j--){\n                    dp[cnt][j]=max(dp[cnt][j]+1,dp[cnt-1][j]+1);\n                }\n            }\n        }\n    }\n    int ans=0;\n    for(int i=0;i&lt;=cnt;i++){\n        ans=max(ans,dp[cnt][i]);\n    }\n    cout&lt;&lt;ans&lt;&lt;endl;\n}\nsigned main()\n{\n#ifndef ONLINE_JUDGE\n    freopen(\".in\", \"r\", stdin);\n    freopen(\".out\", \"w\", stdout);\n#endif\n    ios::sync_with_stdio(0);\n    cin.tie(0),cout.tie(0);\n\n#ifdef MULTI_CASES\n    cin &gt;&gt; T;\n    while (T--)\n#endif\n       Solve();\n    //fclose(stdin);\n    //fclose(stdout);\n    return 0;\n}\n</code></pre>","tags":["\u7b97\u6cd5","\u52a8\u6001\u89c4\u5212dp","\u5b66\u4e60\u8bb0\u5f55"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/dp%E5%AD%A6%E4%B9%A0%E8%BF%87%E7%A8%8B%E5%8F%8A%E8%AE%B0%E5%BD%95/#ac","title":"AC","text":"<pre><code>#pragma GCC optimize(1, 2, 3, \"Ofast\", \"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define ll long long\n#define int ll\n#define ONLINE_JUDGE\n// #define MULTI_CASES\n#define endl '\\n'\nconst int MaxN = 2e6+100;\nconst int INF = 1e9;\nconst int mod=212370440130137957ll;\nint T=1, N, M;\nint a[MaxN];\n// int dp[500][5000];\nstruct Segment{\n    vector&lt;int&gt;a;\n    struct Point{\n        int l,r,tag;\n        int mex;\n    };\n    vector&lt;Point&gt;t;\n    Segment(int N){\n        a.assign(N,0);\n        t.assign(N&lt;&lt;2,{});\n    }\n    #define ls p&lt;&lt;1\n    #define rs p&lt;&lt;1|1\n    int midd(int p){\n        return (t[p].l+t[p].r)&gt;&gt;1;\n    }\n    void push_up(int p){\n        t[p].mex=max(t[ls].mex,t[rs].mex);\n    }\n    void pls(int p,int k){\n        t[p].tag+=k;\n        t[p].mex+=k;\n    }\n    void push_down(int p){\n        if(t[p].tag){\n            pls(ls,t[p].tag);\n            pls(rs,t[p].tag);\n            t[p].tag=0;\n        }\n    }\n    void build(int p,int l,int r){\n        t[p].l=l,t[p].r=r;\n        if(l==r){\n            t[p].mex=a[l];\n            return;\n        }\n        build(ls,l,midd(p));\n        build(rs,midd(p)+1,r);\n        push_up(p);\n    }\n    void dfs(int p,int l,int r){\n        if(l==r){\n            a[l]=t[p].mex;\n            return;\n        }\n        int mid=midd(p);\n        push_down(p);\n        dfs(ls,l,mid);\n        dfs(rs,mid+1,r);\n        push_up(p);\n    }\n    void change(int p,int nl,int nr,int k){\n        int l=t[p].l,r=t[p].r;\n        if(nl&lt;=l&amp;&amp;r&lt;=nr){\n            pls(p,k);\n            return;\n        }\n        push_down(p);\n        int mid=midd(p);\n        if(nl&lt;=mid){\n            change(ls,nl,nr,k);\n        }\n        if(mid&lt;nr){\n            change(rs,nl,nr,k);\n        }\n        push_up(p);\n    }\n    int query_max(int p,int nl,int nr){\n        int l=t[p].l,r=t[p].r;\n        if(nl&lt;=l&amp;&amp;r&lt;=nr){\n            return t[p].mex;\n        }\n        int mid=midd(p),ans=0;\n        push_down(p);\n        if(nl&lt;=mid){\n            ans=max(ans,query_max(ls,nl,nr));\n        }\n        if(mid&lt;nr){\n            ans=max(ans,query_max(rs,nl,nr));\n        }\n        return ans;\n    }\n};\ninline void Solve()\n{\n    cin&gt;&gt;N&gt;&gt;M;\n    for(int i=1;i&lt;=N;i++){\n        cin&gt;&gt;a[i];\n    }\n    int cnt=0;\n    Segment Tree(M+10);\n    Tree.build(1,0,M);\n    for(int i=1;i&lt;=N;i++){\n        if(a[i]==0){\n            cnt++;\n            Tree.dfs(1,0,M);\n            for(int j=M;j&gt;=1;j--)\n                Tree.a[j]=max(Tree.a[j],Tree.a[j-1]);\n            Tree.build(1,0,M);\n        }\n        else{\n            if(a[i]&gt;0){\n                if(cnt&gt;=a[i])\n                    Tree.change(1,a[i],cnt,1);\n            }\n            else{\n                if(cnt&gt;=abs(a[i]))\n                    Tree.change(1,0,cnt-abs(a[i]),1);\n            }\n        }\n\n    }\n    // cerr&lt;&lt;cnt;return;\n    // cout&lt;&lt;1;return;\n    int ans=0;\n\n    cout&lt;&lt;Tree.query_max(1,0,cnt)&lt;&lt;endl;\n}\nsigned main()\n{\n#ifndef ONLINE_JUDGE\n    freopen(\".in\", \"r\", stdin);\n    freopen(\".out\", \"w\", stdout);\n#endif\n    ios::sync_with_stdio(0);\n    cin.tie(0),cout.tie(0);\n\n#ifdef MULTI_CASES\n    cin &gt;&gt; T;\n    while (T--)\n#endif\n       Solve();\n    //fclose(stdin);\n    //fclose(stdout);\n    return 0;\n}\n</code></pre>","tags":["\u7b97\u6cd5","\u52a8\u6001\u89c4\u5212dp","\u5b66\u4e60\u8bb0\u5f55"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/dp%E5%AD%A6%E4%B9%A0%E8%BF%87%E7%A8%8B%E5%8F%8A%E8%AE%B0%E5%BD%95/#p4059-daddy","title":"P4059 \u627e\u7238\u7238\uff08daddy\uff09","text":"","tags":["\u7b97\u6cd5","\u52a8\u6001\u89c4\u5212dp","\u5b66\u4e60\u8bb0\u5f55"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/dp%E5%AD%A6%E4%B9%A0%E8%BF%87%E7%A8%8B%E5%8F%8A%E8%AE%B0%E5%BD%95/#_9","title":"\u9898\u76ee\u5206\u6790","text":"<p>\u9898\u76ee\u8981\u6c42DNA\u5e8f\u5217\u7684\u6700\u5927\u76f8\u4f3c\u7a0b\u5ea6\uff0c\u8003\u8651 dp \u505a\u6cd5\uff0c\u53ef\u4ee5\u5f97\u51fa dp_{i,j,k} \u8868\u793a a\u5e8f\u5217\u957f\u5ea6\u4e3a i\uff0cb\u5e8f\u5217\u957f\u5ea6\u4e3a j \uff0c\u672b\u5c3e\u6709/\u65e0\u7a7a\u683c\uff08k=0 \u65e0\u7a7a\u683c\uff0ck=1 \u8868\u793aa\u5e8f\u5217\u6709\u7a7a\u683c\uff0ck=2 \u8868\u793ab\u5e8f\u5217\u672b\u5c3e\u6709\u7a7a\u683c\uff09\u65f6\u7684\u6700\u5927\u76f8\u4f3c\u7a0b\u5ea6\u3002</p> <p>\u5173\u4e8e\u7a7a\u683c\uff0c\u5bf9\u4e8e\u6bcf\u6bb5\u8fde\u7eed\u7a7a\u683c\uff0c\u76f8\u4f3c\u7a0b\u5ea6\u4e3a -A-B\\times (k-1) \u56e0\u4e3a A,B \u90fd\u662f\u6b63\u6574\u6570\uff0c\u6240\u4ee5\u5176\u76f8\u4f3c\u7a0b\u5ea6\u4e00\u5b9a\u4e3a\u8d1f\u6570\u3002\u5bf9\u4e8e\u4e00\u4e2a\u7a7a\u683c\uff0c\u4f1a\u51cf\u5c11 A \u70b9\u76f8\u4f3c\u5ea6\uff0c\u5982\u679c\u5728\u540e\u9762\u591a\u6dfb\u52a0\u4e00\u4e2a\u7a7a\u683c\uff0c\u5219\u4f1a\u8fdb\u4e00\u6b65\u51cf\u5c11 B \u70b9\u76f8\u4f3c\u5ea6\u3002</p> <p>\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5982\u4e0b\uff1a</p> dp_{i,j,0}=\\max(dp_{i-1,j-1,0},dp_{i-1,j-1,1},dp_{i-1,j-1,2})+a_{s1_i,s2_j} dp_{i,j,1}=\\max(dp_{i-1,j,0}-A,dp_{i-1,j,1}-B,dp_{i-1,j,2}-A) dp_{i,j,2}=\\max(dp_{i,j-1,0}-A,dp_{i,j-1,1}-A,dp_{i,j-1,2}-B)","tags":["\u7b97\u6cd5","\u52a8\u6001\u89c4\u5212dp","\u5b66\u4e60\u8bb0\u5f55"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/dp%E5%AD%A6%E4%B9%A0%E8%BF%87%E7%A8%8B%E5%8F%8A%E8%AE%B0%E5%BD%95/#code_5","title":"Code","text":"<pre><code>// #pragma GCC optimize(1, 2, 3, \"Ofast\", \"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define ll long long\n#define int ll\n// #define ONLINEJUDGE\n// #define MULTI_CASES\nconst int MaxN = 2e3 + 100;\nconst int INF = 1e18;\nint T = 1, N, M;\nint a[10][10];\nint dp[MaxN][MaxN][4];\nint A, B;\n\nint g(int k)\n{\n    return -A - B * (k - 1);\n}\ninline void Solve()\n{\n    string s1, s2;\n    cin &gt;&gt; s1 &gt;&gt; s2;\n    s1 = ' ' + s1;\n    s2 = ' ' + s2;\n    map&lt;char, int&gt; mp;\n    mp['A'] = 1;\n    mp['T'] = 2;\n    mp['G'] = 3;\n    mp['C'] = 4;\n    for (int i = 1; i &lt;= 4; i++)\n    {\n        for (int j = 1; j &lt;= 4; j++)\n        {\n            cin &gt;&gt; a[i][j];\n        }\n    }\n    cin &gt;&gt; A &gt;&gt; B;\n    for (int i = max(s1.size(), s2.size()); i &gt;= 1; i--)\n    {\n        dp[0][i][0] = dp[i][0][0] = dp[0][i][2] = dp[i][0][1] = dp[0][i][1] = dp[i][0][2] = -INF;\n        dp[0][i][1] = dp[i][0][2] = g(i);\n    }\n    for (int i = 1; i &lt; s1.size(); i++)\n    {\n        for (int j = 1; j &lt; s2.size(); j++)\n        {\n            dp[i][j][0] = max({dp[i - 1][j - 1][0], dp[i - 1][j - 1][1], dp[i - 1][j - 1][2]}) + a[mp[s1[i]]][mp[s2[j]]];\n            dp[i][j][1] = max({dp[i - 1][j][0] - A, dp[i - 1][j][1] - B, dp[i - 1][j][2] - A});\n            dp[i][j][2] = max({dp[i][j - 1][0] - A, dp[i][j - 1][1] - A, dp[i][j - 1][2] - B});\n        }\n    }\n    cout &lt;&lt; max({dp[s1.size() - 1][s2.size() - 1][0], dp[s1.size() - 1][s2.size() - 1][1], dp[s1.size() - 1][s2.size() - 1][2]}) &lt;&lt; endl;\n}\nsigned main()\n{\n#ifndef ONLINEJUDGE\n    freopen(\"daddy.in\", \"r\", stdin);\n    freopen(\"daddy.out\", \"w\", stdout);\n#endif\n    ios::sync_with_stdio(0);\n    cin.tie(0), cout.tie(0);\n\n#ifdef MULTI_CASES\n    cin &gt;&gt; T;\n    while (T--)\n#endif\n        Solve();\n    // fclose(stdin);\n    // fclose(stdout);\n    return 0;\n}\n</code></pre>","tags":["\u7b97\u6cd5","\u52a8\u6001\u89c4\u5212dp","\u5b66\u4e60\u8bb0\u5f55"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1-%E9%80%92%E5%BD%92%E5%8F%8A%E9%80%92%E6%8E%A8/","title":"\u9012\u5f52","text":"","tags":["\u5b66\u4e60\u7b14\u8bb0","CSP-J\u7ec4\u77e5\u8bc6","\u57fa\u7840"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1-%E9%80%92%E5%BD%92%E5%8F%8A%E9%80%92%E6%8E%A8/#_2","title":"\u6982\u5ff5","text":"<p>\u9012\u5f52\uff0c\u5728\u6570\u5b66\u548c\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u662f\u6307\u5728\u51fd\u6570\u7684\u5b9a\u4e49\u4e2d\u4f7f\u7528\u51fd\u6570\u81ea\u8eab\u7684\u65b9\u6cd5\uff0c\u5728\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u8fd8\u989d\u5916\u6307\u4e00\u79cd\u901a\u8fc7\u91cd\u590d\u5c06\u95ee\u9898\u5206\u89e3\u4e3a\u540c\u7c7b\u7684\u5b50\u95ee\u9898\u800c\u89e3\u51b3\u95ee\u9898\u7684\u65b9\u6cd5\u3002</p>","tags":["\u5b66\u4e60\u7b14\u8bb0","CSP-J\u7ec4\u77e5\u8bc6","\u57fa\u7840"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1-%E9%80%92%E5%BD%92%E5%8F%8A%E9%80%92%E6%8E%A8/#_3","title":"\u672c\u8d28","text":"<p>\u9012\u5f52\u7684\u5b9e\u8d28\u5c31\u662f\u76f4\u63a5\u6216\u95f4\u63a5\u8c03\u7528\u81ea\u8eab\u51fd\u6570\uff0c\u5c06\u539f\u95ee\u9898\u8f6c\u5316\u4e3a\u6027\u8d28\u76f8\u540c\u89c4\u6a21\u4e0d\u540c\u7684\u5b50\u95ee\u9898\u3002</p> <p>\u9012\u5f52\u4ee3\u7801\u6700\u91cd\u8981\u7684\u4e24\u4e2a\u7279\u5f81\uff1a\u7ed3\u675f\u6761\u4ef6\u548c\u81ea\u6211\u8c03\u7528\u3002\u81ea\u6211\u8c03\u7528\u662f\u5728\u89e3\u51b3\u5b50\u95ee\u9898\uff0c\u800c\u7ed3\u675f\u6761\u4ef6\u5b9a\u4e49\u4e86\u6700\u7b80\u5b50\u95ee\u9898\u7684\u7b54\u6848\u3002</p>","tags":["\u5b66\u4e60\u7b14\u8bb0","CSP-J\u7ec4\u77e5\u8bc6","\u57fa\u7840"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1-%E9%80%92%E5%BD%92%E5%8F%8A%E9%80%92%E6%8E%A8/#_4","title":"\u4e3b\u8981\u683c\u5f0f","text":"<pre><code>int func(\u4f20\u5165\u6570\u503c) {\n  if (\u7ec8\u6b62\u6761\u4ef6) return \u6700\u5c0f\u5b50\u95ee\u9898\u89e3;\n  return func(\u7f29\u5c0f\u89c4\u6a21);\n}\n</code></pre>","tags":["\u5b66\u4e60\u7b14\u8bb0","CSP-J\u7ec4\u77e5\u8bc6","\u57fa\u7840"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1-%E9%80%92%E5%BD%92%E5%8F%8A%E9%80%92%E6%8E%A8/#_5","title":"\u8981\u70b9","text":"","tags":["\u5b66\u4e60\u7b14\u8bb0","CSP-J\u7ec4\u77e5\u8bc6","\u57fa\u7840"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1-%E9%80%92%E5%BD%92%E5%8F%8A%E9%80%92%E6%8E%A8/#_6","title":"\u4ec0\u4e48\u60c5\u51b5\u5e94\u8be5\u4f7f\u7528\u9012\u5f52\uff1f","text":"<p>\u5f53\u95ee\u9898\u53ef\u4ee5\u88ab\u5206\u89e3\u4e3a\u6210\u76f8\u540c\u7ed3\u6784\u7684\u5c0f\u95ee\u9898\u65f6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u9012\u5f52\u6765\u6c42\u89e3\u3002</p>","tags":["\u5b66\u4e60\u7b14\u8bb0","CSP-J\u7ec4\u77e5\u8bc6","\u57fa\u7840"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1-%E9%80%92%E5%BD%92%E5%8F%8A%E9%80%92%E6%8E%A8/#_7","title":"\u7f3a\u70b9","text":"<p>1.\u5bb9\u6613\u6808\u6ea2\u51fa</p> <p>2.\u53ef\u80fd\u4f1a\u8d85\u65f6\uff0c\u8017\u65f6\u95f4\uff0c\u9700\u8981\u4f18\u5316\u3002</p>","tags":["\u5b66\u4e60\u7b14\u8bb0","CSP-J\u7ec4\u77e5\u8bc6","\u57fa\u7840"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1-%E9%80%92%E5%BD%92%E5%8F%8A%E9%80%92%E6%8E%A8/#_8","title":"\u6ce8\u610f","text":"<p>\u5199\u9012\u5f52\u7a0b\u5e8f\u65f6\uff0c\u660e\u767d\u4e00\u4e2a\u51fd\u6570\u7684\u4f5c\u7528\u5e76\u76f8\u4fe1\u5b83\u80fd\u5b8c\u6210\u8fd9\u4e2a\u4efb\u52a1\uff0c\u5343\u4e07\u4e0d\u8981\u8df3\u8fdb\u8fd9\u4e2a\u51fd\u6570\u91cc\u9762\u4f01\u56fe\u63a2\u7a76\u66f4\u591a\u7ec6\u8282\u3002\u5426\u5219\u53ef\u80fd\u9677\u5165\u65e0\u9650\u7684\u7ec6\u8282\u4e2d\u65e0\u6cd5\u81ea\u62d4\uff08\u5f15\u7528\u81eaOi Wiki\uff09</p>","tags":["\u5b66\u4e60\u7b14\u8bb0","CSP-J\u7ec4\u77e5\u8bc6","\u57fa\u7840"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1-%E9%80%92%E5%BD%92%E5%8F%8A%E9%80%92%E6%8E%A8/#_9","title":"\u5206\u6cbb","text":"","tags":["\u5b66\u4e60\u7b14\u8bb0","CSP-J\u7ec4\u77e5\u8bc6","\u57fa\u7840"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1-%E9%80%92%E5%BD%92%E5%8F%8A%E9%80%92%E6%8E%A8/#_10","title":"\u6982\u5ff5","text":"<p>\u5206\u6cbb\uff08\u82f1\u8bed\uff1aDivide and Conquer\uff09\uff0c\u5b57\u9762\u4e0a\u7684\u89e3\u91ca\u662f\u300c\u5206\u800c\u6cbb\u4e4b\u300d\uff0c\u5c31\u662f\u628a\u4e00\u4e2a\u590d\u6742\u7684\u95ee\u9898\u5206\u6210\u4e24\u4e2a\u6216\u66f4\u591a\u7684\u76f8\u540c\u6216\u76f8\u4f3c\u7684\u5b50\u95ee\u9898\uff0c\u76f4\u5230\u6700\u540e\u5b50\u95ee\u9898\u53ef\u4ee5\u7b80\u5355\u7684\u76f4\u63a5\u6c42\u89e3\uff0c\u539f\u95ee\u9898\u7684\u89e3\u5373\u5b50\u95ee\u9898\u7684\u89e3\u7684\u5408\u5e76\u3002</p>","tags":["\u5b66\u4e60\u7b14\u8bb0","CSP-J\u7ec4\u77e5\u8bc6","\u57fa\u7840"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1-%E9%80%92%E5%BD%92%E5%8F%8A%E9%80%92%E6%8E%A8/#_11","title":"\u8fc7\u7a0b","text":"<p>\u6838\u5fc3\u601d\u60f3\uff1a\u300c\u5206\u800c\u6cbb\u4e4b\u300d \u5927\u81f4\u5206\u4e3a\u4e09\u6b65\uff1a\u5206\u89e3 -&gt; \u89e3\u51b3 -&gt; \u5408\u5e76\u3002</p> <ol> <li>\u5206\u89e3\u539f\u95ee\u9898\u4e3a\u7ed3\u6784\u76f8\u540c\u7684\u5b50\u95ee\u9898\u3002</li> <li>\u5206\u89e3\u539f\u95ee\u9898\u4e3a\u7ed3\u6784\u76f8\u540c\u7684\u5b50\u95ee\u9898\u3002</li> <li>\u5c06\u5b50\u95ee\u9898\u7684\u89e3\u5408\u5e76\u6210\u539f\u95ee\u9898\u7684\u89e3\u3002</li> </ol>","tags":["\u5b66\u4e60\u7b14\u8bb0","CSP-J\u7ec4\u77e5\u8bc6","\u57fa\u7840"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1-%E9%80%92%E5%BD%92%E5%8F%8A%E9%80%92%E6%8E%A8/#_12","title":"\u7279\u5f81","text":"<ul> <li>\u5206\u89e3\u539f\u95ee\u9898\u4e3a\u7ed3\u6784\u76f8\u540c\u7684\u5b50\u95ee\u9898\u3002</li> <li>\u8be5\u95ee\u9898\u53ef\u4ee5\u5206\u89e3\u4e3a\u82e5\u5e72\u4e2a\u89c4\u6a21\u8f83\u5c0f\u7684\u76f8\u540c\u95ee\u9898\uff0c\u5373\u8be5\u95ee\u9898\u5177\u6709\u6700\u4f18\u5b50\u7ed3\u6784\u6027\u8d28\uff0c\u5229\u7528\u8be5\u95ee\u9898\u5206\u89e3\u51fa\u7684\u5b50\u95ee\u9898\u7684\u89e3\u53ef\u4ee5\u5408\u5e76\u4e3a\u8be5\u95ee\u9898\u7684\u89e3\u3002</li> <li>\u8be5\u95ee\u9898\u6240\u5206\u89e3\u51fa\u7684\u5404\u4e2a\u5b50\u95ee\u9898\u662f\u76f8\u4e92\u72ec\u7acb\u7684\uff0c\u5373\u5b50\u95ee\u9898\u4e4b\u95f4\u4e0d\u5305\u542b\u516c\u5171\u7684\u5b50\u95ee\u9898\u3002   \u6ce8\u610f \u5982\u679c\u5b50\u95ee\u9898\u4e0d\u72ec\u7acb\uff0c\u5206\u6cbb\u6cd5\u8981\u91cd\u590d\u591a\u6b21\u6765\u6c42\u89e3\u516c\u5171\u7684\u5b50\u95ee\u9898\uff0c\u505a\u4e86\u8bb8\u591a\u4e0d\u5fc5\u8981\u7684\u5de5\u4f5c\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e00\u822c\u4f7f\u7528\u52a8\u6001\u89c4\u5212\uff08\u8fd9\u91cc\u5e94\u8be5\u6709\u4e2a\u94fe\u63a5\uff09\u8f83\u597d\u3002</li> </ul>","tags":["\u5b66\u4e60\u7b14\u8bb0","CSP-J\u7ec4\u77e5\u8bc6","\u57fa\u7840"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1-%E9%80%92%E5%BD%92%E5%8F%8A%E9%80%92%E6%8E%A8/#_13","title":"\u533a\u522b","text":"<p>\u9012\u5f52\u548c\u679a\u4e3e\u7684\u533a\u522b\u5728\u4e8e\uff1a\u679a\u4e3e\u662f\u6a2a\u5411\u5730\u628a\u95ee\u9898\u5212\u5206\uff0c\u7136\u540e\u4f9d\u6b21\u6c42\u89e3\u5b50\u95ee\u9898\uff1b\u800c\u9012\u5f52\u662f\u628a\u95ee\u9898\u9010\u7ea7\u5206\u89e3\uff0c\u662f\u7eb5\u5411\u7684\u62c6\u5206\u3002</p>","tags":["\u5b66\u4e60\u7b14\u8bb0","CSP-J\u7ec4\u77e5\u8bc6","\u57fa\u7840"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1-%E9%80%92%E5%BD%92%E5%8F%8A%E9%80%92%E6%8E%A8/#_14","title":"\u9012\u5f52\u4e0e\u5206\u6cbb\u7684\u533a\u522b","text":"<p>\u9012\u5f52\u662f\u4e00\u79cd\u7f16\u7a0b\u6280\u5de7\uff0c\u4e00\u79cd\u89e3\u51b3\u95ee\u9898\u7684\u601d\u7ef4\u65b9\u5f0f\uff1b\u5206\u6cbb\u7b97\u6cd5\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u57fa\u4e8e\u9012\u5f52\u7684\uff0c\u89e3\u51b3\u66f4\u5177\u4f53\u95ee\u9898\u7684\u7b97\u6cd5\u601d\u60f3\u3002</p>","tags":["\u5b66\u4e60\u7b14\u8bb0","CSP-J\u7ec4\u77e5\u8bc6","\u57fa\u7840"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1-%E9%80%92%E5%BD%92%E5%8F%8A%E9%80%92%E6%8E%A8/#_15","title":"\u4e60\u9898","text":"<ul> <li>P1028 \u6570\u7684\u8ba1\u7b97</li> </ul> <ul> <li>P1036 \u9009\u6570</li> </ul> <ul> <li>P1025 \u6570\u7684\u5212\u5206</li> </ul>","tags":["\u5b66\u4e60\u7b14\u8bb0","CSP-J\u7ec4\u77e5\u8bc6","\u57fa\u7840"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-2-DFS-BFS%E7%AE%97%E6%B3%95/","title":"\u641c\u7d22","text":"<p>\u641c\u7d22\u5c31\u662f\u5bf9\u72b6\u6001\u7a7a\u95f4\u8fdb\u884c\u679a\u4e3e\u6765\u67e5\u627e\u6240\u6709\u79cd\u53ef\u80fd\u6765\u627e\u5230\u95ee\u9898\u7684\u6700\u4f18\u89e3\u6216\u53ef\u884c\u89e3\u7684\u4e2a\u6570\u3002\u641c\u7d22\u4e00\u822c\u65f6\u95f4\u6216\u7a7a\u95f4\u590d\u6742\u5ea6\u5f88\u9ad8\uff0c\u6240\u4ee5\u6709\u5f88\u591a\u4f18\u5316\u65b9\u6cd5,\u5982\u8bb0\u5fc6\u5316\u3001\u51cf\u679d\u7b49\u3002</p>","tags":["\u7b97\u6cd5","\u5b66\u4e60\u7b14\u8bb0","\u641c\u7d22"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-2-DFS-BFS%E7%AE%97%E6%B3%95/#_2","title":"\u6ce8\u610f","text":"<p>\u4e0d\u540c\u7684\u641c\u7d22\u9898\u76ee\u5927\u90fd\u4e0d\u76f8\u540c\uff0cDFS/BFS\u4e24\u79cd\u7b97\u6cd5\u66f4\u50cf\u662f\u65b9\u6cd5\uff0c\u8981\u7406\u89e3\u5b83\u7684\u601d\u60f3\u5e76\u7075\u6d3b\u8fd0\u7528\uff0c\u6b7b\u5957\u6a21\u677f\u662f\u6ca1\u6709\u7528\u7684\u3002\u8981\u6839\u636e\u4e0d\u540c\u7684\u95ee\u9898\u6765\u9009\u62e9\u66f4\u597d\u7684\u65b9\u6cd5\u6765\u89e3\u51b3\u3002</p>","tags":["\u7b97\u6cd5","\u5b66\u4e60\u7b14\u8bb0","\u641c\u7d22"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-2-DFS-BFS%E7%AE%97%E6%B3%95/#dfs","title":"\u4e00.DFS \u6df1\u5ea6\u4f18\u5148\u641c\u7d22","text":"","tags":["\u7b97\u6cd5","\u5b66\u4e60\u7b14\u8bb0","\u641c\u7d22"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-2-DFS-BFS%E7%AE%97%E6%B3%95/#_3","title":"\u5b9a\u4e49","text":"<p>\u4e00\u79cd\u7528\u4e8e\u904d\u5386\u6216\u641c\u7d22\u6811\u6216\u56fe\u7684\u7b97\u6cd5\uff08\u4fd7\u79f0 ~~\u4e0d\u649e\u5357\u5899\u4e0d\u56de\u5934\u7b97\u6cd5~~ \uff09  \u3002 \u6cbf\u7740\u6811\u7684\u6df1\u5ea6\u904d\u5386\u6811\u7684\u8282\u70b9\uff0c\u5c3d\u53ef\u80fd\u6df1\u5730\u641c\u7d22\u6811\u7684\u5206\u652f\u3002\u5f53\u8282\u70b9v\u7684\u6240\u5728\u8fb9\u90fd\u5df1\u88ab\u63a2\u5bfb\u8fc7\u6216\u8005\u5728\u641c\u5bfb\u65f6\u7ed3\u70b9\u4e0d\u6ee1\u8db3\u6761\u4ef6\uff0c\u641c\u7d22\u5c06\u56de\u6eaf\u5230\u53d1\u73b0\u8282\u70b9v\u7684\u90a3\u6761\u8fb9\u7684\u8d77\u59cb\u8282\u70b9\u3002\u6574\u4e2a\u8fdb\u7a0b\u53cd\u590d\u8fdb\u884c\u76f4\u5230\u6240\u6709\u8282\u70b9\u90fd\u88ab\u8bbf\u95ee\u4e3a\u6b62\u3002\u5c5e\u4e8e\u76f2\u76ee\u641c\u7d22,\u6700\u7cdf\u7cd5\u7684\u60c5\u51b5\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(!n)\u3002</p>","tags":["\u7b97\u6cd5","\u5b66\u4e60\u7b14\u8bb0","\u641c\u7d22"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-2-DFS-BFS%E7%AE%97%E6%B3%95/#_4","title":"\u9002\u7528","text":"<p>\u4e3b\u8981\u7528\u4e8e\u641c\u7d22\u6574\u4e2a\u6811\u6216\u56fe\uff0c\u5373\u6c42\u89e3\u6240\u6709\u89e3\u4f7f\u7528dfs\u8f83\u4e3a\u5408\u9002\u3002 \u4f46\u662fdfs\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5f88\u9ad8\uff0c\u8d39\u65f6\uff0c\u7701\u7a7a\u95f4\u3002\u4e00\u822c\u53ef\u4ee5\u5bf9dfs\u7b97\u6cd5\u8fdb\u884c\u526a\u679d\u6765\u964d\u4f4e\u65f6\u95f4\u590d\u6742\u5ea6\u3002</p>","tags":["\u7b97\u6cd5","\u5b66\u4e60\u7b14\u8bb0","\u641c\u7d22"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-2-DFS-BFS%E7%AE%97%E6%B3%95/#_5","title":"\u57fa\u672c\u601d\u60f3","text":"<p>1.\u627e\u5230\u4e00\u79cd\u53ef\u80fd\u7684\u60c5\u51b5\u8fdb\u884c\u5411\u524d\u641c\u7d22\u3002</p> <p>2.\u5982\u679c\u641c\u7d22\u9014\u4e2d\u53d1\u73b0\u4e0d\u53ef\u884c\uff0c\u5219\u56de\u9000\u4e00\u6b65\uff0c\u9009\u62e9\u53e6\u5916\u4e00\u79cd\u60c5\u51b5\u7ee7\u7eed\u641c\u7d22\u3002</p> <p>3.\u91cd\u590d\u4ee5\u4e0a\u6b65\u9aa4\uff0c\u76f4\u5230\u641c\u5b8c\u6216\u627e\u5230\u6700\u4f18\u89e3\u3002</p>","tags":["\u7b97\u6cd5","\u5b66\u4e60\u7b14\u8bb0","\u641c\u7d22"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-2-DFS-BFS%E7%AE%97%E6%B3%95/#_6","title":"\u5b9e\u73b0","text":"<p>\u5bf9\u4e8eDFS\u7684\u5199\u6cd5\u6709\u5f88\u591a\u79cd\uff0c\u6700\u5e38\u89c1\u4e5f\u662f\u6700\u597d\u7528\u7684\u5b9e\u73b0\u65b9\u5f0f\u4e3a\u9012\u5f52\u7b97\u6cd5\u3002\uff08\u9012\u5f52\u76f8\u5173\u77e5\u8bc6link\uff09</p> <p>\u8be6\u7ec6\u5199\u6cd5\u770b\u6a21\u677f\u4ee3\u7801\u6ce8\u91ca\u3002</p>","tags":["\u7b97\u6cd5","\u5b66\u4e60\u7b14\u8bb0","\u641c\u7d22"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-2-DFS-BFS%E7%AE%97%E6%B3%95/#_7","title":"\u6a21\u677f","text":"<pre><code>bool visit[maxn];//\u6807\u8bb0\u6570\u7ec4\uff0c\u7528\u6765\u5224\u65ad\u662f\u5426\u8bbf\u95ee\u8fc7\nint a[maxn];\n\nvoid dfs(int k) {\n    if () {//\u9012\u5f52\u51fa\u53e3\n        print();//\u5df2\u7ecf\u8dd1\u5b8c\u90a3\u5c31\u8f93\u51fa\u5427(^_^)\n        return;//\u8bb0\u5f97\u7ed3\u675f\u5faa\u73af\uff0c\u5c0f\u5fc3\u6b7b\u5faa\u73af\n    } else {\n        for (i in range(n)) {//\u904d\u5386\u5728\u8fd9\u4e2a\u4f4d\u7f6e\u53ef\u4ee5\u641c\u7d22\u7684\u6240\u6709\u60c5\u51b5\n            if (!visit[i]) {//\u5224\u65ad\u662f\u5426\u5df2\u7ecf\u8bbf\u95ee\u8fc7\uff0c\u5982\u679c\u7c7b\u4f3c\u8ff7\u5bab\u7684\u9898\u76ee\u5efa\u8bae\u5355\u72ec\u5199\u4e00\u4e2acheck\n                visit[i] = 1;//\u5148\u628a\u5f53\u524d\u70b9\u6807\u8bb0\n                a[k + 1] = i;\n                dfs(k + 1);//\u641c\u7d22\u4e0b\u4e00\u79cd\u60c5\u51b5\n                visit[i] = 0;//\u56de\u6eaf\u540e\u6e05\u9664\u6807\u8bb0\uff08\u5982\u679c\u4e0d\u9700\u8981\u56de\u6eaf\u53ef\u4ee5\u4e0d\u5199\uff09\n            }\n        }\n    }\n}\n</code></pre>","tags":["\u7b97\u6cd5","\u5b66\u4e60\u7b14\u8bb0","\u641c\u7d22"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-2-DFS-BFS%E7%AE%97%E6%B3%95/#bfs","title":"\u4e8c.BFS\u5bbd\u5ea6\u4f18\u5148\u641c\u7d22","text":"","tags":["\u7b97\u6cd5","\u5b66\u4e60\u7b14\u8bb0","\u641c\u7d22"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-2-DFS-BFS%E7%AE%97%E6%B3%95/#_8","title":"\u5b9a\u4e49","text":"<p>\u662f\u56fe\u4e0a\u6700\u57fa\u7840\u3001\u6700\u91cd\u8981\u7684\u641c\u7d22\u7b97\u6cd5\u4e4b\u4e00\u3002</p> <p>\u6240\u8c13\u5bbd\u5ea6\u4f18\u5148\u3002\u5c31\u662f\u6bcf\u6b21\u90fd\u5c1d\u8bd5\u8bbf\u95ee\u540c\u4e00\u5c42\u7684\u8282\u70b9\u3002 \u5982\u679c\u540c\u4e00\u5c42\u90fd\u8bbf\u95ee\u5b8c\u4e86\uff0c\u518d\u8bbf\u95ee\u4e0b\u4e00\u5c42\u3002</p> <p>\u8fd9\u6837\u505a\u7684\u7ed3\u679c\u662f\uff0cBFS \u7b97\u6cd5\u627e\u5230\u7684\u8def\u5f84\u662f\u4ece\u8d77\u70b9\u5f00\u59cb\u7684 \u6700\u77ed \u5408\u6cd5\u8def\u5f84\u3002\u6362\u8a00\u4e4b\uff0c\u8fd9\u6761\u8def\u5f84\u6240\u5305\u542b\u7684\u8fb9\u6570\u6700\u5c0f\u3002</p> <p>\u5728 BFS \u7ed3\u675f\u65f6\uff0c\u6bcf\u4e2a\u8282\u70b9\u90fd\u662f\u901a\u8fc7\u4ece\u8d77\u70b9\u5230\u8be5\u70b9\u7684\u6700\u77ed\u8def\u5f84\u8bbf\u95ee\u7684\u3002</p>","tags":["\u7b97\u6cd5","\u5b66\u4e60\u7b14\u8bb0","\u641c\u7d22"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-2-DFS-BFS%E7%AE%97%E6%B3%95/#_9","title":"\u57fa\u672c\u601d\u60f3","text":"<p>\u7528\u961f\u5217\u6765\u5b58\u50a8\u6bcf\u4e00\u4e2a\u70b9\uff0c\u7136\u540e\u6bcf\u4e2a\u70b9\u90fd\u5411\u4e0b\u6269\u5c55N\u4e2a\u70b9\uff0c\u4e0d\u65ad\u641c\u7d22\uff0c\u76f4\u5230\u627e\u5230\u7b54\u6848\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u6709\u70b9\u50cf\"\u4e00\u751f\u4e8c\uff0c\u4e8c\u751f\u56db\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\"\u3002 \u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\u53ef\u4ee5\u5f88\u5feb\u627e\u5230\u6700\u77ed\u7684\u5408\u6cd5\u8def\u5f84\u3002 \u8fd9\u79cd\u65b9\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u8f83\u4f4e\uff0c\u4f46\u662f\uff0cbfs\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u76f8\u8f83\u6765\u8bf4\u8f83\u9ad8\u3002</p>","tags":["\u7b97\u6cd5","\u5b66\u4e60\u7b14\u8bb0","\u641c\u7d22"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-2-DFS-BFS%E7%AE%97%E6%B3%95/#code","title":"Code","text":"<pre><code>void bfs() {\n    queue&lt;int&gt; q1, q2;\n    q1.push(1);\n    q2.push(1);\n    sum[1][1] = 1;\n    while (!q1.empty()) {\n        int x = q1.front();\n        q1.pop();\n        int y = q2.front();\n        q2.pop();\n        vis[x][y] = 1;\n        for (int i = 0; i &lt; 4; i++) {//\u904d\u5386\u56db\u4e2a\u65b9\u5411\n            if (check(x + dx[i], y + dy[i])) {//pd\n                sum[x + dx[i]][y + dy[i]] = sum[x][y] + 1;\n                q1.push(x + dx[i]);\n                q2.push(y + dy[i]);\n                vis[x + dx[i]][y + dy[i]] = 1;\n                if (x + dx[i] == R &amp;&amp; y + dy[i] == C) {//bfs\u51fa\u53e3\n                    return;\n                }\n            }\n        }\n    }\n}\n</code></pre>","tags":["\u7b97\u6cd5","\u5b66\u4e60\u7b14\u8bb0","\u641c\u7d22"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-2-DFS-BFS%E7%AE%97%E6%B3%95/#_10","title":"\u4f18\u5316","text":"<p>\u5728\u5e26\u6743\u6709\u5411\u56fe/\u5e26\u6743\u6811\u4e2d\uff0c\u6700\u5c0f\u4ee3\u4ef7\u4e0d\u4e00\u5b9a\u662f\u6700\u77ed\u7684\u8def\u5f84\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4f18\u5148\u961f\u5217/\u53cc\u7aef\u961f\u5217\u6765\u4f18\u5316\u3002</p>","tags":["\u7b97\u6cd5","\u5b66\u4e60\u7b14\u8bb0","\u641c\u7d22"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-3-%E4%BA%8C%E5%88%86/","title":"\u4e8c\u5206\u67e5\u627e","text":"<p>\u5177\u4f53\u601d\u8def\u4e3a\u6bcf\u6b21\u67e5\u627e\u65f6\uff0c\u5c06\u8303\u56f4\u6298\u534a\uff0c\u5224\u65ad\u67e5\u627e\u6570\u7684\u4f4d\u7f6e\u5e76\u5c06\u5176\u6298\u534a\uff0c\u91cd\u590d\u4ee5\u4e0a\u64cd\u4f5c\u5c31\u53ef\u5feb\u901f\u5f97\u51fa\u7b54\u6848\u3002\u6ce8\u610f\u64cd\u4f5c\u65f6\u5fc5\u987b\u4fdd\u8bc1\u6570\u7ec4\u662f\u6709\u5e8f\u7684\uff01\uff01</p>","tags":["\u5b66\u4e60\u7b14\u8bb0","\u4e8c\u5206","\u7b97\u6cd5"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-3-%E4%BA%8C%E5%88%86/#_2","title":"\u65f6\u95f4\u590d\u6742\u5ea6","text":"<p>\u4e8c\u5206\u7684\u6700\u574f\u590d\u6742\u5ea6\u4e3a O(log N)</p>","tags":["\u5b66\u4e60\u7b14\u8bb0","\u4e8c\u5206","\u7b97\u6cd5"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-3-%E4%BA%8C%E5%88%86/#_3","title":"\u5b9e\u73b0","text":"","tags":["\u5b66\u4e60\u7b14\u8bb0","\u4e8c\u5206","\u7b97\u6cd5"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-3-%E4%BA%8C%E5%88%86/#_4","title":"\u624b\u5199","text":"","tags":["\u5b66\u4e60\u7b14\u8bb0","\u4e8c\u5206","\u7b97\u6cd5"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-3-%E4%BA%8C%E5%88%86/#1","title":"\u6a21\u677f1","text":"<pre><code>//\u5f80\u5de6\u627e\u7b54\u6848\nwhile(l&lt;r){\n    int mid=l+r&gt;&gt;1;//(l+r)/2\n    if(check(mid)){\n        r=mid;\n    }\n    else{\n        l=mid+1;\n    }\n}\n</code></pre>","tags":["\u5b66\u4e60\u7b14\u8bb0","\u4e8c\u5206","\u7b97\u6cd5"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-3-%E4%BA%8C%E5%88%86/#2","title":"\u6a21\u677f2","text":"<pre><code>//\u5f80\u53f3\u627e\u7b54\u6848\nwhile(l&lt;r){\n    int mid=l+r+1&gt;&gt;1;//(l+r+1)/2\n    if(check(mid)){\n        l=mid;\n    }\n    else{\n        r=mid-1;\n    }\n}\n</code></pre>","tags":["\u5b66\u4e60\u7b14\u8bb0","\u4e8c\u5206","\u7b97\u6cd5"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-3-%E4%BA%8C%E5%88%86/#3","title":"\u6a21\u677f3\uff08\u6d6e\u70b9\uff09","text":"<pre><code>while(r-l&lt;1e-5){//\u6ce8\u610f\u6240\u6709\u7c7b\u578b\u90fd\u4e3adouble\n    double mid=(l+r)/2;\n    if(check(mid)){\n        l=mid;\n    }\n    else{\n        r=mid;\n    }\n}\n</code></pre>","tags":["\u5b66\u4e60\u7b14\u8bb0","\u4e8c\u5206","\u7b97\u6cd5"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-3-%E4%BA%8C%E5%88%86/#stl","title":"STL\u51fd\u6570","text":"<p>\u67e5\u627e\u9996\u4e2a\u4e0d\u5c0f\u4e8e\u7ed9\u5b9a\u503c\u7684\u5143\u7d20\uff1a<code>lower_bound</code>\uff1a</p> <p>\u4f7f\u7528\u65f6\u76f4\u63a5\u8c03\u7528<code>lower_bound( ForwardIt first, ForwardIt last, const T&amp; value );</code>\uff0c\u4f7f\u7528\u65f6\u5fc5\u987b\u4fdd\u8bc1\u6570\u7ec4\u6709\u5e8f\u3002</p> <p>\u5982\u679c\u6ca1\u6709\u627e\u5230\uff0c\u8fd4\u56de<code>last</code></p> <p>\u67e5\u627e\u9996\u4e2a\u5927\u4e8e\u7ed9\u5b9a\u503c\u7684\u5143\u7d20\uff1a <code>upper_bound</code>\uff1a</p> <p>\u4f7f\u7528\u65f6\u76f4\u63a5\u8c03\u7528<code>upper_bound( ForwardIt first, ForwardIt last, const T&amp; value );</code>\uff0c\u4f7f\u7528\u65f6\u5fc5\u987b\u4fdd\u8bc1\u6570\u7ec4\u6709\u5e8f\u3002</p> <p>\u5982\u679c\u6ca1\u6709\u627e\u5230\uff0c\u8fd4\u56de<code>last</code></p>","tags":["\u5b66\u4e60\u7b14\u8bb0","\u4e8c\u5206","\u7b97\u6cd5"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-3-%E4%BA%8C%E5%88%86/#_5","title":"\u4f8b\u9898","text":"<p>P2249</p> <p>P1102</p> <p>P1163//\u6d6e\u70b9\u4e8c\u5206</p>","tags":["\u5b66\u4e60\u7b14\u8bb0","\u4e8c\u5206","\u7b97\u6cd5"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-3-%E4%BA%8C%E5%88%86/#_6","title":"\u4e8c\u5206\u7b54\u6848","text":"<p>\u5728\u9898\u76ee\u7684\u7b54\u6848\u6709\u4e00\u4e2a\u5f88\u5927\u7684\u533a\u95f4\uff0c\u4e14\u4fdd\u8bc1\u8fd9\u4e2a\u533a\u95f4\u5bf9\u9898\u76ee\u4e2d\u7684\u67d0\u4e00\u4e2a\u91cf\u5177\u6709\u5355\u8c03\u6027\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e8c\u5206\u7b54\u6848\u6765\u89e3\u51b3\u95ee\u9898\u3002</p> <p>\u5f62\u5f0f\u5316\u7684\u6765\u8bf4\uff0c\u4e00\u9053\u9898\u76ee\u5982\u679c\u7b26\u5408\u4ee5\u4e0b\u6761\u4ef6\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e8c\u5206\u7b54\u6848\u6765\u6c42\u89e3\u3002 - \u7b54\u6848\u5728\u4e00\u4e2a\u533a\u95f4\u3002 - \u76f4\u63a5\u641c\u7d22\u4e0d\u5bb9\u6613\uff0c\u4f46\u662f\u53ef\u4ee5\u5bb9\u6613\u5224\u65ad\u4e00\u4e2a\u7b54\u6848\u662f\u5426\u7b26\u5408\u6761\u4ef6\u3002 - \u8fd9\u4e2a\u533a\u95f4\u5177\u6709\u5355\u8c03\u6027\uff0c\u4f1a\u968f\u7740\u4e00\u4e2a\u6761\u4ef6\u7684\u6539\u53d8\u800c\u53d8\u5316\u3002 - \u53ef\u80fd\u4f1a\u6709\u6700\u5927\u503c\u6700\u5c0f\u5316\uff08\u6216\u8005\u6700\u5c0f\u503c\u6700\u5927\u5316\uff09\uff0c\u7b49\u5178\u578b\u7279\u5f81\u3002 - check()\u51fd\u6570\u8981\u5199\u6b63\u786e\uff0c\u4e00\u822c\u53ef\u4ee5\u7528\u7b54\u6848\u5e26\u8fdb\u53bb\u8bd5\u3002 - \u6ce8\u610f\u4e00\u4e9b\u7279\u6b8a\u7684\u60c5\u51b5\uff0c\u5199\u597d\u7279\u5224\u3002</p>","tags":["\u5b66\u4e60\u7b14\u8bb0","\u4e8c\u5206","\u7b97\u6cd5"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-3-%E4%BA%8C%E5%88%86/#_7","title":"\u4f8b\u9898","text":"<p>P1873</p> <p>P1024</p> <p>P2240</p> <p>P2678</p> <p>P1182</p> <p>P1824</p> <p>P3853</p> <p>P3743</p>","tags":["\u5b66\u4e60\u7b14\u8bb0","\u4e8c\u5206","\u7b97\u6cd5"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-4-%E5%89%8D%E7%BC%80%E5%92%8C-%E5%B7%AE%E5%88%86/","title":"\u524d\u7f00\u548c","text":"","tags":["\u5b66\u4e60\u7b14\u8bb0","\u524d\u7f00\u548c&\u5dee\u5206","\u7b97\u6cd5","OI\u5b66\u4e60\u7b14\u8bb0"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-4-%E5%89%8D%E7%BC%80%E5%92%8C-%E5%B7%AE%E5%88%86/#_2","title":"\u5b9a\u4e49","text":"<p>\u5b9a\u4e49\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u4e00\u4e2a\u6570\u5217\u4e2d\u524dn\u9879\u7684\u548c\u3002\u867d\u7136\u7b80\u5355\uff0c\u5374\u662f\u4e00\u79cd\u975e\u5e38\u597d\u7528\u7684\u51cf\u5c11\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u4f18\u5316\u65b9\u6cd5\u3002</p>","tags":["\u5b66\u4e60\u7b14\u8bb0","\u524d\u7f00\u548c&\u5dee\u5206","\u7b97\u6cd5","OI\u5b66\u4e60\u7b14\u8bb0"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-4-%E5%89%8D%E7%BC%80%E5%92%8C-%E5%B7%AE%E5%88%86/#_3","title":"\u4e00\u7ef4","text":"","tags":["\u5b66\u4e60\u7b14\u8bb0","\u524d\u7f00\u548c&\u5dee\u5206","\u7b97\u6cd5","OI\u5b66\u4e60\u7b14\u8bb0"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-4-%E5%89%8D%E7%BC%80%E5%92%8C-%E5%B7%AE%E5%88%86/#_4","title":"\u539f\u7406","text":"<p>sum_r=a_1+a_2+......+a_r</p> <p>sum_{l-1}=a_1+a_2+......+a_{l-1}</p> <p>sum_r-sum_{l-1}=a_l+a_l+1+...a_r</p>","tags":["\u5b66\u4e60\u7b14\u8bb0","\u524d\u7f00\u548c&\u5dee\u5206","\u7b97\u6cd5","OI\u5b66\u4e60\u7b14\u8bb0"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-4-%E5%89%8D%E7%BC%80%E5%92%8C-%E5%B7%AE%E5%88%86/#_5","title":"\u5b9e\u73b0","text":"","tags":["\u5b66\u4e60\u7b14\u8bb0","\u524d\u7f00\u548c&\u5dee\u5206","\u7b97\u6cd5","OI\u5b66\u4e60\u7b14\u8bb0"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-4-%E5%89%8D%E7%BC%80%E5%92%8C-%E5%B7%AE%E5%88%86/#_6","title":"\u5b9a\u4e49","text":"<pre><code>int sum[N];\nsum[0]=a[0];\nfor(int i=;i&lt;N;i++){\n    sum[i]=sum[i-1]+a[i];\n}\n</code></pre>","tags":["\u5b66\u4e60\u7b14\u8bb0","\u524d\u7f00\u548c&\u5dee\u5206","\u7b97\u6cd5","OI\u5b66\u4e60\u7b14\u8bb0"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-4-%E5%89%8D%E7%BC%80%E5%92%8C-%E5%B7%AE%E5%88%86/#_7","title":"\u67e5\u8be2","text":"<pre><code>//l\u5230r\u533a\u95f4\u4e4b\u548c\ncout&lt;&lt;sum[r]-sum[l-1];\n</code></pre>","tags":["\u5b66\u4e60\u7b14\u8bb0","\u524d\u7f00\u548c&\u5dee\u5206","\u7b97\u6cd5","OI\u5b66\u4e60\u7b14\u8bb0"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-4-%E5%89%8D%E7%BC%80%E5%92%8C-%E5%B7%AE%E5%88%86/#_8","title":"\u4e8c\u7ef4","text":"<p>\u901a\u8fc7\u56fe\u7247\u53ef\u77e5\uff0c<code>sum[i][j]=sum[i-1][j]+sum[i][j-1]-sum[i-1][j-1]+a[i][j]</code> </p> <p>\u4e0d\u96be\u63a8\u51fa\uff0c<code>s[x2, y2] - s[x1 - 1, y2] - s[x2, y1 - 1] + s[x1 - 1, y1 - 1]</code></p>","tags":["\u5b66\u4e60\u7b14\u8bb0","\u524d\u7f00\u548c&\u5dee\u5206","\u7b97\u6cd5","OI\u5b66\u4e60\u7b14\u8bb0"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-4-%E5%89%8D%E7%BC%80%E5%92%8C-%E5%B7%AE%E5%88%86/#_9","title":"\u5dee\u5206","text":"<p>\u5dee\u5206\u53ef\u4ee5\u7406\u89e3\u4e3a\u524d\u7f00\u548c\u7684\u9006\u8fd0\u7b97\uff0c\u5373\u5982\u679c\u4e00\u4e2a\u6570\u7ec4a\u7684\u524d\u7f00\u548c\u6570\u7ec4\u4e3ab\uff0c\u5219\u6570\u7ec4a\u662f\u6570\u7ec4b\u7684\u5dee\u5206\u6570\u7ec4\u3002</p>","tags":["\u5b66\u4e60\u7b14\u8bb0","\u524d\u7f00\u548c&\u5dee\u5206","\u7b97\u6cd5","OI\u5b66\u4e60\u7b14\u8bb0"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-4-%E5%89%8D%E7%BC%80%E5%92%8C-%E5%B7%AE%E5%88%86/#_10","title":"\u6784\u9020\u5dee\u5206","text":"<p>\u6700\u7b80\u5355\u7684\u6784\u9020\u65b9\u6cd5\uff1a <pre><code>int a[n],[n];\nb[0]=a[0];\nfor(int i=1;i&lt;n;i++)\n{\n    b[i]=a[i]-a[i-1];\n}\n</code></pre></p>","tags":["\u5b66\u4e60\u7b14\u8bb0","\u524d\u7f00\u548c&\u5dee\u5206","\u7b97\u6cd5","OI\u5b66\u4e60\u7b14\u8bb0"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-4-%E5%89%8D%E7%BC%80%E5%92%8C-%E5%B7%AE%E5%88%86/#_11","title":"\u4e00\u7ef4","text":"<p>\u4e00\u7ef4\u5dee\u5206\u662f\u6307\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3an\u7684\u5e8f\u5217a\uff0c\u8981\u6c42\u652f\u6301\u64cd\u4f5cfuc(l,r,c)\u8868\u793a\u5bf9a[l]~a[r]\u533a\u95f4\u4e0a\u7684\u6bcf\u4e00\u4e2a\u503c\u90fd\u52a0\u4e0a\u6216\u51cf\u53bb\u5e38\u6570c\uff0c\u5e76\u6c42\u4fee\u6539\u540e\u7684\u5e8f\u5217a\u3002 <pre><code>//\u533a\u95f4[l,r]\u4e2d\u7684\u6240\u6709\u503c\u90fd\u52a0\u4e0a\u5e38\u6570c\nb[l] += c;\nb[r+1] -= c;\n\n//\u4e0a\u8fb9\u8bed\u53e5\u5b9e\u73b0\u539f\u7406 b\u76f8\u5f53\u4e8ea\u7684\u8f85\u52a9\u6570\u7ec4\n//\u628aa\u5e8f\u5217\u5206\u4e3a[1,l-1],[l,r],[r+1,n]\u4e09\u90e8\u5206,\u7531\u5dee\u5206\u5b9a\u4e49\u548c\u4e0e\u524d\u7f00\u548c\u5173\u7cfb\u53ef\u5f97\na[l-1] = b[1]+b[2]+...+b[l-1]; //b[1]~b[l-1]\u4e2d\u6240\u6709\u503c\u90fd\u672a\u6539\u53d8\uff0ca[l-1]\u4e5f\u4e0d\u53d8\na[l] = b[1]+b[2]+...+b[l-1]+b[l]; //b[1] += c,\u6240\u4ee5a[l] += c\na[l+1] = b[1]+b[2]+...+b[l-1]+b[l]+b[l+1]; //b[1] += c,\u6240\u4ee5a[l+1] += c\n... //\u4e00\u76f4\u5230\na[r] = b[1]+b[2]+...b[l]+...+b[r];  //b[1] += c,\u6240\u4ee5a[l+1] += c\na[r+1] = b[1]+b[2]+...b[l]+...+b[r]+b[r+1]; //b[l] += c,b[r+1] -= c;\u6240\u4ee5a[r+1]\u4e0d\u53d8\n\n//\u6240\u4ee5\u7531\u6b64\u53ef\u77e5\u4e0a\u9762\u7684\u4e24\u4e2a\u8bed\u53e5\uff08b[l] += c;b[r+1] -= c\uff09\u53ef\u4ee5\u5b9e\u73b0a\u6570\u7ec4\u5728\u533a\u95f4[l,r]\u5185\u7684\u6240\u6709\u503c\u90fd\u52a0\u4e0a\u4e86\u5e38\u6570c\n\n ```\n\n## \u4e8c\u7ef4\n\u5982\u679c\u6269\u5c55\u5230\u4e8c\u7ef4\uff0c\u6211\u4eec\u9700\u8981\u8ba9\u4e8c\u7ef4\u6570\u7ec4\u88ab\u9009\u4e2d\u7684\u5b50\u77e9\u9635\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u7684\u503c\u52a0\u4e0ac,\u662f\u5426\u4e5f\u53ef\u4ee5\u8fbe\u5230O(1)\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u7b54\u6848\u662f\u53ef\u4ee5\u7684\uff0c\u8003\u8651\u4e8c\u7ef4\u5dee\u5206\u3002\n![](https://img-blog.csdnimg.cn/20210718012458309.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0Nvb3Blcmlh,size_16,color_FFFFFF,t_70)\n### \u64cd\u4f5c\n```cpp\nvoid insert(int x1,int y1,int x2,int y2,int c)\n{\n    b[x1][y1] += c;\n    b[x2+1][y1] -= c;\n    b[x1][y2+1] -= c;\n    b[x2+1][y2+1] += c;\n}\n</code></pre> \u521d\u59cb\u5316 <pre><code>for(int i = 1; i &lt;= n; i++)\n{\n    for(int j = 1; j &lt;= m; j++)\n    {\n       insert(i,j,i,j,a[i][j]);\n    }\n}\n</code></pre></p>","tags":["\u5b66\u4e60\u7b14\u8bb0","\u524d\u7f00\u548c&\u5dee\u5206","\u7b97\u6cd5","OI\u5b66\u4e60\u7b14\u8bb0"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-4-%E5%89%8D%E7%BC%80%E5%92%8C-%E5%B7%AE%E5%88%86/#_12","title":"\u533a\u95f4\u4fee\u6539","text":"<p>\u5bf9\u4e8e\u533a\u95f4 [l,r]\uff0c\u6240\u6709\u5143\u7d20\u90fd\u52a0\u4e0a\u4e00\u4e2a\u503c c\uff0c\u7b49\u4ef7\u4e8e\u5728\u5dee\u5206\u6570\u7ec4\u4e2d cha_i+=c,cha_{r+1}-=c\u3002 \u7136\u540e\u5bf9\u8fd9\u4e2a\u5dee\u5206\u6570\u7ec4\u6c42\u524d\u7f00\u548c\u5373\u53ef\u627e\u5230\u7b54\u6848\u3002</p> <p>\u6b64\u6587\u7ae0\u53c2\u8003\u4e86\u524d\u7f00\u548c\u4e0e\u5dee\u5206 \u56fe\u6587\u5e76\u8302 \u8d85\u8be6\u7ec6\u6574\u7406\uff08\u5168\u7f51\u6700\u901a\u4fd7\u6613\u61c2\uff09 \u548c\u7b97\u6cd5\u7b14\u8bb0\uff08\u516d\uff09\uff1a\u5dee\u5206\u6cd5\u7684\u76f8\u5173\u5185\u5bb9\uff0c\u5728\u6b64\u8868\u793a\u611f\u8c22\u3002</p>","tags":["\u5b66\u4e60\u7b14\u8bb0","\u524d\u7f00\u548c&\u5dee\u5206","\u7b97\u6cd5","OI\u5b66\u4e60\u7b14\u8bb0"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95-%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/","title":"\u8d2a\u5fc3","text":"<p>\u8d2a\u5fc3\u7b97\u6cd5\u662f\u6307\u5728\u5bf9\u95ee\u9898\u6c42\u89e3\u65f6\uff0c\u603b\u662f\u505a\u51fa\u5f53\u524d\u7684\u6700\u4f18\u89e3\uff0c\u4ece\u800c\u5b9e\u73b0\u6574\u4f53\u6700\u4f18\u7684\u8fc7\u7a0b\u3002</p> <p>\u4e00\u822c\u800c\u8a00\uff0c\u8d2a\u5fc3\u662f\u5c06\u4e00\u4e2a\u95ee\u9898\u62c6\u5206\u6210\u82e5\u5e72\u4e2a\u5b50\u95ee\u9898\uff0c\u7136\u540e\u5bf9\u6bcf\u4e2a\u5b50\u95ee\u9898\u6c42\u89e3\u5f97\u51fa\u5c40\u90e8\u6700\u4f18\u89e3\uff0c\u4e4b\u540e\u5408\u5e76\u5f97\u51fa\u6574\u4f53\u6700\u4f18\u89e3\u3002</p> <p>\u7531\u4e8e\u5176\u5c40\u90e8\u6700\u4f18\u7684\u7279\u6027\uff0c\u5e76\u4e0d\u662f\u6240\u6709\u65f6\u5019\u8d2a\u5fc3\u90fd\u53ef\u4ee5\u83b7\u5f97\u6700\u4f18\u89e3\uff0c\u5728\u4f7f\u7528\u65f6\u8981\u8003\u8651\u8bc1\u660e\u5176\u6b63\u786e\u6027\u3002</p>","tags":["\u7b97\u6cd5","\u8d2a\u5fc3\u7b97\u6cd5","\u5b66\u4e60\u8bb0\u5f55"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95-%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#_2","title":"\u8bc1\u660e","text":"<p>\u8d2a\u5fc3\u7b97\u6cd5\u4e3b\u8981\u6709\u4e24\u79cd\u8bc1\u660e\u65b9\u6cd5\uff1a\u53cd\u8bc1\u6cd5\u548c\u5f52\u7eb3\u6cd5\u3002</p> <ul> <li>\u53cd\u8bc1\u6cd5\uff1a\u4ece\u6700\u4f18\u89e3\u51fa\u53d1\uff0c\u5728\u4fdd\u8bc1\u5168\u5c40\u6700\u4f18\u4e0d\u53d8\u7684\u524d\u63d0\u4e0b\uff0c\u5982\u679c\u4ea4\u6362\u65b9\u6848\u4e2d\u4efb\u610f\u4e24\u4e2a\u5143\u7d20 / \u76f8\u90bb\u7684\u4e24\u4e2a\u5143\u7d20\u540e\uff0c\u7b54\u6848\u4e0d\u4f1a\u53d8\u5f97\u66f4\u597d\uff0c\u5219\u53ef\u4ee5\u63a8\u5b9a\u76ee\u524d\u7684\u89e3\u662f\u6700\u4f18\u89e3\u3002</li> <li>\u5f52\u7eb3\u6cd5\uff1a\u5148\u7b97\u5f97\u51fa\u8fb9\u754c\uff08n=1\uff09\u7684\u6700\u4f18\u89e3 F_1\uff0c\u7136\u540e\u518d\u8bc1\u660e\uff1a\u5bf9\u4e8e\u6bcf\u4e2a n\uff0cF_{n+1} \u90fd\u53ef\u4ee5\u7531 F_n \u63a8\u5bfc\u51fa\u7ed3\u679c\u3002</li> </ul> <p>\u4e00\u822c\u5728\u505a\u9898\u8fc7\u7a0b\u4e2d\uff0c\u53ef\u4ee5\u4f18\u5148\u6839\u636e\u76f4\u89c9\u63a8\u51fa\u8d2a\u5fc3\u505a\u6cd5\uff0c\u4e4b\u540e\u518d\u901a\u8fc7\u4e3e\u53cd\u4f8b\u9a8c\u8bc1\u662f\u5426\u662f\u6700\u4f18\u89e3\u3002</p>","tags":["\u7b97\u6cd5","\u8d2a\u5fc3\u7b97\u6cd5","\u5b66\u4e60\u8bb0\u5f55"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95-%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#_3","title":"\u6d3b\u52a8\u5b89\u6392","text":"","tags":["\u7b97\u6cd5","\u8d2a\u5fc3\u7b97\u6cd5","\u5b66\u4e60\u8bb0\u5f55"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95-%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#_4","title":"\u9898\u76ee\u7b80\u8ff0","text":"<p>\u7ed9\u5b9a N \u4e2a\u533a\u95f4 [s_i,f_i)\uff0c\u9009\u62e9\u5c3d\u53ef\u80fd\u591a\u7684\u533a\u95f4\uff0c\u4f7f\u5f97\u8fd9\u4e9b\u533a\u95f4\u4e24\u4e24\u6ca1\u6709\u516c\u5171\u70b9\u3002</p>","tags":["\u7b97\u6cd5","\u8d2a\u5fc3\u7b97\u6cd5","\u5b66\u4e60\u8bb0\u5f55"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95-%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#_5","title":"\u9898\u76ee\u89e3\u6790","text":"<p>\u5178\u578b\u7684\u9009\u62e9\u4e0d\u76f8\u4ea4\u533a\u95f4\u95ee\u9898\uff0c\u53ef\u4ee5\u91c7\u7528\u8d2a\u5fc3\u7b56\u7565\uff0c\u6309\u7167\u7ed3\u675f\u65f6\u95f4\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u6bcf\u6b21\u5c3d\u53ef\u80fd\u53d6\u5f00\u59cb\u65f6\u95f4\u6700\u5c0f\u4e14\u4e0e\u524d\u4e00\u4e2a\u533a\u95f4\u4e0d\u91cd\u53e0\u7684\u533a\u95f4\u3002</p>","tags":["\u7b97\u6cd5","\u8d2a\u5fc3\u7b97\u6cd5","\u5b66\u4e60\u8bb0\u5f55"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95-%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#_6","title":"\u601d\u8def","text":"<p>\u9898\u76ee\u8981\u6c42\u53d6\u5c3d\u53ef\u80fd\u591a\u7684\u533a\u95f4\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u533a\u95f4\u800c\u8a00\uff0c\u6bcf\u6b21\u53d6\u533a\u95f4\u7ed3\u675f\u65f6\u95f4\u6700\u5c0f\u7684\u533a\u95f4\uff0c\u53ef\u4ee5\u4f7f\u5f97\u6bcf\u4e2a\u533a\u95f4\u957f\u5ea6\u5c3d\u53ef\u80fd\u5c0f\uff0c\u8fdb\u800c\u4f7f\u5f97\u533a\u95f4\u6570\u91cf\u5c3d\u53ef\u80fd\u591a\u3002</p>","tags":["\u7b97\u6cd5","\u8d2a\u5fc3\u7b97\u6cd5","\u5b66\u4e60\u8bb0\u5f55"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95-%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#code","title":"Code","text":"<pre><code>// #pragma GCC optimize(1, 2, 3, \"Ofast\", \"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define ll long long\n#define int ll\n#define ONLINE_JUDGE\n// #define MULTI_CASES\n#define endl '\\n'\nconst int MaxN = 2e5+100;\nconst int INF = 1e9;\nconst int mod=212370440130137957ll;\nint T=1, N, M;\n// int a[MaxN];\nstruct node{\n    int a,b;\n}a[MaxN];\nbool cmp(node a,node b){\n    return a.b&lt;b.b;\n}\ninline void Solve()\n{\n    cin&gt;&gt;N;\n    for(int i=1;i&lt;=N;i++){\n        cin&gt;&gt;a[i].a&gt;&gt;a[i].b;\n    }\n    sort(a+1,a+N+1,cmp);\n    int cnt=a[1].b;\n    int sum=1;\n    for(int i=2;i&lt;=N;i++){\n        if(a[i].a&gt;=cnt){\n            cnt=a[i].b;\n            sum++;\n        }\n    }\n    cout&lt;&lt;sum&lt;&lt;endl;\n}\nsigned main()\n{\n#ifndef ONLINE_JUDGE\n    freopen(\".in\", \"r\", stdin);\n    freopen(\".out\", \"w\", stdout);\n#endif\n    ios::sync_with_stdio(0);\n    cin.tie(0),cout.tie(0);\n\n#ifdef MULTI_CASES\n    cin &gt;&gt; T;\n    while (T--)\n#endif\n       Solve();\n    //fclose(stdin);\n    //fclose(stdout);\n    return 0;\n}\n</code></pre>","tags":["\u7b97\u6cd5","\u8d2a\u5fc3\u7b97\u6cd5","\u5b66\u4e60\u8bb0\u5f55"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95-%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#_7","title":"\u79cd\u6811","text":"","tags":["\u7b97\u6cd5","\u8d2a\u5fc3\u7b97\u6cd5","\u5b66\u4e60\u8bb0\u5f55"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95-%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#_8","title":"\u9898\u610f\u7b80\u8ff0","text":"<p>\u7ed9\u5b9a\u957f\u5ea6\u4e3a N \u7684\u6570\u7ec4\uff0c\u521d\u59cb\u503c\u4e3a 0\uff0c\u7ed9\u5b9a M \u7ec4\u64cd\u4f5c (b,e,t)\uff0c\u8981\u6c42\u533a\u95f4 [b,e] \u4e2d\u5fc5\u987b\u8981\u6709 t \u4e2a\u6570\u4e3a 1\u3002\u6c42\u6700\u5c11\u9700\u8981\u51e0\u4e2a\u6570\u66f4\u6539\u4e3a 1\u3002</p>","tags":["\u7b97\u6cd5","\u8d2a\u5fc3\u7b97\u6cd5","\u5b66\u4e60\u8bb0\u5f55"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95-%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#_9","title":"\u9898\u76ee\u89e3\u6790","text":"<p>\u8003\u8651\u8d2a\u5fc3\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u533a\u95f4\u6309\u7167\u53f3\u8fb9\u754c\u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u6392\u5e8f\uff0c\u6bcf\u6b21\u64cd\u4f5c\u5982\u679c\u6570\u91cf\u4e0d\u591f\uff0c\u5c31\u4ece\u53f3\u5f00\u59cb\u586b\u5145\u76f4\u5230\u6570\u91cf\u8fbe\u5230\u8981\u6c42\u3002\u904d\u5386\u6c42\u548c\u5373\u53ef\u3002</p>","tags":["\u7b97\u6cd5","\u8d2a\u5fc3\u7b97\u6cd5","\u5b66\u4e60\u8bb0\u5f55"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95-%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#_10","title":"\u601d\u8def","text":"<p>\u533a\u95f4\u6309\u7167\u53f3\u8fb9\u754c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u7531\u4e8e\u6309\u7167\u53f3\u8fb9\u754c\u6392\u5e8f\uff0c\u8bf4\u660e\u4e4b\u524d\u7684\u9650\u5236\u5df2\u7ecf\u6ee1\u8db3\uff0c\u6240\u4ee5\u5c3d\u53ef\u80fd\u9760\u53f3\u7684\u65b9\u6848\u662f\u6700\u4f18\u7684\u3002</p>","tags":["\u7b97\u6cd5","\u8d2a\u5fc3\u7b97\u6cd5","\u5b66\u4e60\u8bb0\u5f55"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95-%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#code_1","title":"Code","text":"<pre><code>// #pragma GCC optimize(1, 2, 3, \"Ofast\", \"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define ll long long\n#define int ll\n#define ONLINE_JUDGE\n// #define MULTI_CASES\n#define endl '\\n'\nconst int MaxN = 2e5 + 100;\nconst int INF = 1e9;\nconst int mod = 212370440130137957ll;\nint T = 1, N, M;\n// int a[MaxN];\nstruct node\n{\n    int l, r, k;\n} a[MaxN];\nbool cmp(node a, node b)\n{\n    return a.r &lt; b.r;\n}\nbool vis[MaxN];\ninline void Solve()\n{\n    cin &gt;&gt; N &gt;&gt; M;\n    for (int i = 1; i &lt;= M; i++)\n    {\n        cin &gt;&gt; a[i].l &gt;&gt; a[i].r &gt;&gt; a[i].k;\n    }\n    sort(a + 1, a + M + 1, cmp);\n    for (int i = 1; i &lt;= M; i++)\n    {\n        int cnt = 0;\n        int sum = 0;\n        for (int j = a[i].r; j &gt;= a[i].l; j--)\n        {\n            if (vis[j])\n            {\n                cnt++;\n            }\n        }\n        if (cnt &gt;= a[i].k)\n        {\n            continue;\n        }\n        for (int j = a[i].r; j &gt;= a[i].l; j--)\n        {\n            if (vis[j] == 0)\n            {\n                vis[j] = 1;\n                sum++;\n            }\n\n            if (sum + cnt == a[i].k)\n            {\n                break;\n            }\n        }\n    }\n    int sum = 0;\n    for (int i = 1; i &lt;= N; i++)\n    {\n        if (vis[i])\n        {\n            // cout&lt;&lt;i&lt;&lt;\" \";\n            sum++;\n        }\n    }\n    cout &lt;&lt; sum &lt;&lt; endl;\n}\nsigned main()\n{\n#ifndef ONLINE_JUDGE\n    freopen(\".in\", \"r\", stdin);\n    freopen(\".out\", \"w\", stdout);\n#endif\n    ios::sync_with_stdio(0);\n    cin.tie(0), cout.tie(0);\n\n#ifdef MULTI_CASES\n    cin &gt;&gt; T;\n    while (T--)\n#endif\n        Solve();\n    // fclose(stdin);\n    // fclose(stdout);\n    return 0;\n}\n</code></pre>","tags":["\u7b97\u6cd5","\u8d2a\u5fc3\u7b97\u6cd5","\u5b66\u4e60\u8bb0\u5f55"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95-%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#_11","title":"\u55b7\u6c34\u88c5\u7f6e","text":"","tags":["\u7b97\u6cd5","\u8d2a\u5fc3\u7b97\u6cd5","\u5b66\u4e60\u8bb0\u5f55"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95-%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#_12","title":"\u9898\u610f\u7b80\u8ff0","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a L\\times W \u7684\u957f\u65b9\u5f62\u8349\u576a\uff0c\u8349\u576a\u4e0a\u6709 N \u4e2a\u55b7\u5934\uff0c\u4f4d\u4e8e\u8349\u576a\u4e2d\u5fc3\u7ebf\u4e0a\u3002\u7ed9\u5b9a\u6bcf\u4e2a\u55b7\u5934\u7684\u4f4d\u7f6e x \u548c\u704c\u6e89\u534a\u5f84 y\uff0c\u6c42\u6700\u5c11\u9700\u8981\u6253\u5f00\u591a\u5c11\u55b7\u5934\u624d\u80fd\u8986\u76d6\u6574\u4e2a\u8349\u576a\u3002</p>","tags":["\u7b97\u6cd5","\u8d2a\u5fc3\u7b97\u6cd5","\u5b66\u4e60\u8bb0\u5f55"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95-%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#_13","title":"\u9898\u610f\u5206\u6790","text":"<p>\u5bf9\u4e8e\u6bcf\u4e2a\u55b7\u5934\uff0c\u663e\u7136\u5f53\u5176\u534a\u5f84 y\\leq \\frac{W}{2} \u65f6\uff0c\u5176\u8986\u76d6\u7684\u8303\u56f4\u662f\u65e0\u610f\u4e49\u7684\u3002\uff08\u56e0\u4e3a\u8303\u56f4\u662f\u5706\u5f62\uff0c\u65e0\u6cd5\u8986\u76d6\u5230\u56db\u4e2a\u8fb9\u89d2\u3002\uff09</p> <p>\u800c\u5bf9\u4e8e\u7b26\u5408\u6761\u4ef6\u7684\u55b7\u5934\uff0c\u5176\u5b9e\u9645\u8986\u76d6\u8303\u56f4\u662f\u4e00\u4e2a\u5bbd\u4e3a W \uff0c\u957f\u4e3a \\sqrt{y^2-(\\frac{W}{2})^2} \u7684\u957f\u65b9\u5f62\u3002\u7531\u4e8e\u5bbd\u4e00\u81f4\uff0c\u9898\u76ee\u53ef\u4ee5\u7b80\u5316\u4e3a\u533a\u95f4\u5168\u8986\u76d6\u95ee\u9898\u3002</p> <p>\u8003\u8651\u8d2a\u5fc3\u89e3\u51b3\uff0c\u7b56\u7565\u4e3a\u5c06\u533a\u95f4\u6309\u7167\u5de6\u8fb9\u754c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u6bcf\u6b21\u5c3d\u53ef\u80fd\u9009\u62e9\u6700\u9760\u53f3\u7684\u53f3\u8fb9\u754c\u3002</p> <p>\u601d\u8def\u5f88\u7b80\u5355\uff0c\u4f46\u662f\u5751\u70b9\u5f88\u591a\u3002\u8ba1\u7b97\u7ed3\u679c\u8981\u6ce8\u610f\u4f7f\u7528\u6d6e\u70b9\u6570\uff0c\u5212\u5b9a\u533a\u95f4\u8981\u6ce8\u610f\u4e0d\u80fd\u8d8a\u754c\u7b49\u95ee\u9898\u3002</p>","tags":["\u7b97\u6cd5","\u8d2a\u5fc3\u7b97\u6cd5","\u5b66\u4e60\u8bb0\u5f55"]},{"location":"OI/%E7%AE%97%E6%B3%95%E6%96%87%E7%AB%A0/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95-%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/#code_2","title":"Code","text":"<pre><code>#pragma GCC optimize(1, 2, 3, \"Ofast\", \"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define ll long long\n#define int ll\n#define ONLINE_JUDGE\n#define MULTI_CASES\n#define endl '\\n'\nconst int MaxN = 2e5+100;\nconst int INF = 1e9;\nconst int mod=212370440130137957ll;\nint T=1, N, M;\n// int a[MaxN];\nstruct node{\n    double l,r;\n}a[MaxN];\nbool cmp(node a,node b){\n    return a.l&lt;b.l;\n}\ninline void Solve()\n{\n    int L,W;\n    cin&gt;&gt;N&gt;&gt;L&gt;&gt;W;\n    M=0;\n    for(int i=1;i&lt;=N;i++){\n        int x,y;\n        cin&gt;&gt;x&gt;&gt;y;\n        if(y&lt;=W/2.0){\n            continue;\n        }\n        double len = sqrt(y*y-(W/2.0)*(W/2.0));\n        a[++M].l=max((double)0,x-len);\n        a[M].r=min((double)L,x+len);\n    }\n    sort(a+1,a+M+1,cmp);\n    for(int i=1;i&lt;=M;i++){\n        // cout&lt;&lt;a[i].l&lt;&lt;\" \"&lt;&lt;a[i].r&lt;&lt;endl;\n    }\n    // return;\n\n    double cnt=0;\n    int ans=0;\n    int pos=1;\n    if(a[1].l!=0){\n        cout&lt;&lt;-1&lt;&lt;endl;\n        return;\n    }\n    while(cnt&lt;L){\n        // cerr&lt;&lt;cnt&lt;&lt;endl;\n        ans++;\n        double q=cnt;\n        while(a[pos].l&lt;=q&amp;&amp;pos&lt;=M){\n            if(cnt&lt;a[pos].r)cnt=a[pos].r;\n            // cerr&lt;&lt;cnt&lt;&lt;endl;\n            pos++;\n        }\n        // cout&lt;&lt;\"test\"&lt;&lt;endl;return ;\n\n        if(cnt==q&amp;&amp;cnt&lt;L){\n            cout&lt;&lt;-1&lt;&lt;endl;\n            return ;\n        }\n    }\n    cout&lt;&lt;ans&lt;&lt;endl;\n}\nsigned main()\n{\n#ifndef ONLINE_JUDGE\n    freopen(\".in\", \"r\", stdin);\n    freopen(\".out\", \"w\", stdout);\n#endif\n    ios::sync_with_stdio(0);\n    cin.tie(0),cout.tie(0);\n\n#ifdef MULTI_CASES\n    cin &gt;&gt; T;\n    while (T--)\n#endif\n       Solve();\n    //fclose(stdin);\n    //fclose(stdout);\n    return 0;\n}\n</code></pre>","tags":["\u7b97\u6cd5","\u8d2a\u5fc3\u7b97\u6cd5","\u5b66\u4e60\u8bb0\u5f55"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/11-25-NOIP-%E6%A8%A1%E6%8B%9F%E8%B5%9B-%E9%A2%98%E8%A7%A3/","title":"11.25 NOIP\u6a21\u62df\u8d5b2 \u9898\u89e3","text":"","tags":["\u9898\u89e3","\u6a21\u62df\u8d5b"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/11-25-NOIP-%E6%A8%A1%E6%8B%9F%E8%B5%9B-%E9%A2%98%E8%A7%A3/#t1-pair","title":"T1 \u6570\u5bf9\uff08pair\uff09","text":"<p>\u7ed9\u5b9a n \u4e2a\u6b63\u6574\u6570\uff0c\u6c42\u6ee1\u8db3 a_i \u662f a_j \u500d\u6570\u7684\u6570\u5bf9\u6570\u91cf\u3002</p>","tags":["\u9898\u89e3","\u6a21\u62df\u8d5b"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/11-25-NOIP-%E6%A8%A1%E6%8B%9F%E8%B5%9B-%E9%A2%98%E8%A7%A3/#_1","title":"\u9898\u76ee\u5206\u6790","text":"","tags":["\u9898\u89e3","\u6a21\u62df\u8d5b"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/11-25-NOIP-%E6%A8%A1%E6%8B%9F%E8%B5%9B-%E9%A2%98%E8%A7%A3/#onsqrt-nonsqrt-n","title":"(O(n\\sqrt n)) \u505a\u6cd5","text":"<p>\u5bf9\u4e8e\u6bcf\u4e2a\u6570 a_i \u6c42\u51fa\u5b83\u7684\u56e0\u6570\uff0c\u7528\u6876\u6765\u5b58\u50a8\u6bcf\u4e2a\u6570\u4f5c\u4e3a\u56e0\u6570\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u5faa\u73af\u7edf\u8ba1\u7b54\u6848\u5373\u53ef\u3002</p>","tags":["\u9898\u89e3","\u6a21\u62df\u8d5b"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/11-25-NOIP-%E6%A8%A1%E6%8B%9F%E8%B5%9B-%E9%A2%98%E8%A7%A3/#onlog-nonlog-n","title":"O(n\\log n)\u505a\u6cd5","text":"<p>\u5bf9\u4e8e\u6bcf\u4e2a\u6570 a_i \u6c42\u51fa\u5176\u4e0d\u5927\u4e8e \\max_{i=1}^{n}a_i \u7684\u6240\u6709\u500d\u6570\uff0c\u540c\u6837\u7528\u6876\u5b58\u50a8\u6bcf\u4e2a\u6570\u4f5c\u4e3a\u5176\u4f59\u6570\u500d\u6570\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u7edf\u8ba1\u7b54\u6848\u5373\u53ef\u3002\u590d\u6742\u5ea6\u4e3a\u8c03\u548c O(n\\log n)\u3002</p>","tags":["\u9898\u89e3","\u6a21\u62df\u8d5b"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/11-25-NOIP-%E6%A8%A1%E6%8B%9F%E8%B5%9B-%E9%A2%98%E8%A7%A3/#code","title":"Code","text":"<pre><code>// #pragma GCC optimize(1, 2, 3, \"Ofast\", \"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define ll long long\n#define int ll\n// #define ONLINEJUDGE\n// #define MULTI_CASES\nconst int MaxN = 2e5 + 100;\nconst int MaXN = 5e5 + 100;\nconst int INF = 1e9;\nint T = 1, N, M;\nint a[MaxN];\nint vis[MaXN];\nint ans[MaXN];\ninline void Solve()\n{\n    cin &gt;&gt; N;\n    int maxn = 0;\n    for (int i = 1; i &lt;= N; i++)\n    {\n        cin &gt;&gt; a[i];\n        // vis[a[i]]=1;\n        vis[a[i]]++;\n        maxn = max(maxn, a[i]);\n    }\n    for (int i = 1; i &lt;= N; i++)\n    {\n        if (ans[a[i]])\n        {\n            // ans[a[i]]++;\n            continue;\n        }\n        for (int j = 1; j * a[i] &lt;= maxn; j++)\n        {\n            ans[a[i]] += vis[a[i] * j];\n            if (j == 1)\n            {\n                ans[a[i]]--;\n            }\n        }\n    }\n    int sum = 0;\n    for (int i = 1; i &lt;= N; i++)\n    {\n        sum += ans[a[i]];\n    }\n    cout &lt;&lt; sum &lt;&lt; endl;\n}\nsigned main()\n{\n#ifndef ONLINEJUDGE\n    freopen(\"pair.in\", \"r\", stdin);\n    freopen(\"pair.out\", \"w\", stdout);\n#endif\n    ios::sync_with_stdio(0);\n    cin.tie(0), cout.tie(0);\n\n#ifdef MULTI_CASES\n    cin &gt;&gt; T;\n    while (T--)\n#endif\n        Solve();\n    // fclose(stdin);\n    // fclose(stdout);\n    return 0;\n}\n</code></pre>","tags":["\u9898\u89e3","\u6a21\u62df\u8d5b"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/11-25-NOIP-%E6%A8%A1%E6%8B%9F%E8%B5%9B-%E9%A2%98%E8%A7%A3/#t2-transport","title":"T2 \u8fd0\u8d27\uff08transport\uff09","text":"","tags":["\u9898\u89e3","\u6a21\u62df\u8d5b"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/11-25-NOIP-%E6%A8%A1%E6%8B%9F%E8%B5%9B-%E9%A2%98%E8%A7%A3/#_2","title":"\u9898\u76ee\u5206\u6790","text":"<p>\u9996\u5148\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8d27\u7269\uff0c\u6700\u4f18\u7684\u5c0f\u8f66\u51fa\u53d1\u65f6\u95f4\u5e94\u4e3a\u5176\u5230\u8fbe\u5378\u8d27\u53e3\u7684\u65f6\u95f4\u51cf\u53bb\u5c0f\u8f66\u5230\u8d27\u67b6\u7684\u65f6\u95f4\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c06\u6240\u6709\u7684\u5c0f\u8f66\u51fa\u53d1\u65f6\u95f4\u5b58\u50a8\u4e0b\u6765\uff0c\u5bf9\u5176\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u5e8f\u5217 a_i\u3002\u663e\u7136\u901a\u8fc7\u8d2a\u5fc3\u7684\u601d\u60f3\uff0c\u6bcf\u8f86\u5c0f\u8f66\u5728\u8fd9\u4e2a\u5e8f\u5217\u4e2d\u7684\u65f6\u95f4\u51fa\u53d1\u624d\u662f\u6700\u4f18\u7684\u3002</p> <p>\u9898\u76ee\u8981\u6c42\u6700\u5c11\u82b1\u8d39\u7684\u65f6\u95f4\uff0c\u90a3\u4e48\u663e\u7136\u53ef\u4ee5\u53d1\u73b0\uff0c\u6240\u6709\u5c0f\u8f66\u8d70\u4e86\u6700\u8fdc\u7684\u90a3\u8f86\u8f66\u6240\u82b1\u8d39\u7684\u65f6\u95f4\u5c31\u662f\u6700\u77ed\u65f6\u95f4\u3002\u6211\u4eec\u5bf9\u4e8e a_i\uff0c\u8fd0\u9001\u5b83\u7684\u5c0f\u8f66\u7f16\u53f7\u5e94\u4e3a i\\mod  M\uff0c\u8fd9\u8f86\u5c0f\u8f66\u8fd0\u8f93\u5b8c  a_i \u540e\u7684\u82b1\u8d39\u65f6\u95f4\u5e94\u8be5\u4e3a \\max(max_{i\\mod M},a_i)\uff0c\u90a3\u4e48\u5bf9\u4e8e M \u4e2a\u5c0f\u8f66\u5206\u522b\u6c42\u51fa\u5176\u6700\u591a\u82b1\u8d39\u7684\u65f6\u95f4\uff0c\u7edf\u8ba1\u7b54\u6848\u5373\u53ef\u3002</p>","tags":["\u9898\u89e3","\u6a21\u62df\u8d5b"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/11-25-NOIP-%E6%A8%A1%E6%8B%9F%E8%B5%9B-%E9%A2%98%E8%A7%A3/#code_1","title":"Code","text":"<pre><code>// #pragma GCC optimize(1, 2, 3, \"Ofast\", \"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define ll long long\n#define int ll\n// #define ONLINEJUDGE\n// #define MULTI_CASES\nconst int MaxN = 2e5 + 100;\nconst int INF = 1e9;\nint T = 1, N, M;\nint a[MaxN];\nint ans[2010];\ninline void Solve()\n{\n    cin &gt;&gt; N &gt;&gt; M;\n    // for (int i = 1; i &lt;= M; i++)\n    // {\n    //     q.push(0);\n    // }\n    // int ans = 0;\n    vector&lt;int&gt; f;\n    for (int i = 0; i &lt; N; i++)\n    {\n        int len;\n        cin &gt;&gt; len;\n        for (int j = 1; j &lt;= len; j++)\n        {\n            int x;\n            cin &gt;&gt; x;\n            f.push_back(x - i - 1);\n        }\n    }\n    sort(f.begin(), f.end());\n    for (int i = 0; i &lt; (int)f.size(); i++)\n    {\n        ans[i % M] = max(ans[i % M], f[i]) + N + 1;\n    }\n    int sum = 0;\n    for (int i = 0; i &lt; M; i++)\n    {\n        sum = max(sum, ans[i]);\n    }\n    cout &lt;&lt; sum &lt;&lt; endl;\n}\nsigned main()\n{\n#ifndef ONLINEJUDGE\n    freopen(\"transport.in\", \"r\", stdin);\n    freopen(\"transport.out\", \"w\", stdout);\n#endif\n    ios::sync_with_stdio(0);\n    cin.tie(0), cout.tie(0);\n\n#ifdef MULTI_CASES\n    cin &gt;&gt; T;\n    while (T--)\n#endif\n        Solve();\n    // fclose(stdin);\n    // fclose(stdout);\n    return 0;\n}\n</code></pre>","tags":["\u9898\u89e3","\u6a21\u62df\u8d5b"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/11-25-NOIP-%E6%A8%A1%E6%8B%9F%E8%B5%9B-%E9%A2%98%E8%A7%A3/#t3-daddy","title":"T3 \u627e\u7238\u7238\uff08daddy\uff09","text":"","tags":["\u9898\u89e3","\u6a21\u62df\u8d5b"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/11-25-NOIP-%E6%A8%A1%E6%8B%9F%E8%B5%9B-%E9%A2%98%E8%A7%A3/#_3","title":"\u9898\u76ee\u5206\u6790","text":"<p>\u9898\u76ee\u8981\u6c42DNA\u5e8f\u5217\u7684\u6700\u5927\u76f8\u4f3c\u7a0b\u5ea6\uff0c\u8003\u8651 dp \u505a\u6cd5\uff0c\u53ef\u4ee5\u5f97\u51fa dp_{i,j,k} \u8868\u793a a\u5e8f\u5217\u957f\u5ea6\u4e3a i\uff0cb\u5e8f\u5217\u957f\u5ea6\u4e3a j \uff0c\u672b\u5c3e\u6709/\u65e0\u7a7a\u683c\uff08k=0 \u65e0\u7a7a\u683c\uff0ck=1 \u8868\u793aa\u5e8f\u5217\u6709\u7a7a\u683c\uff0ck=2 \u8868\u793ab\u5e8f\u5217\u672b\u5c3e\u6709\u7a7a\u683c\uff09\u65f6\u7684\u6700\u5927\u76f8\u4f3c\u7a0b\u5ea6\u3002</p> <p>\u5173\u4e8e\u7a7a\u683c\uff0c\u5bf9\u4e8e\u6bcf\u6bb5\u8fde\u7eed\u7a7a\u683c\uff0c\u76f8\u4f3c\u7a0b\u5ea6\u4e3a -A-B\\times (k-1) \u56e0\u4e3a A,B \u90fd\u662f\u6b63\u6574\u6570\uff0c\u6240\u4ee5\u5176\u76f8\u4f3c\u7a0b\u5ea6\u4e00\u5b9a\u4e3a\u8d1f\u6570\u3002\u5bf9\u4e8e\u4e00\u4e2a\u7a7a\u683c\uff0c\u4f1a\u51cf\u5c11 A \u70b9\u76f8\u4f3c\u5ea6\uff0c\u5982\u679c\u5728\u540e\u9762\u591a\u6dfb\u52a0\u4e00\u4e2a\u7a7a\u683c\uff0c\u5219\u4f1a\u8fdb\u4e00\u6b65\u51cf\u5c11 B \u70b9\u76f8\u4f3c\u5ea6\u3002</p> <p>\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5982\u4e0b\uff1a</p> dp_{i,j,0}=\\max(dp_{i-1,j-1,0},dp_{i-1,j-1,1},dp_{i-1,j-1,2})+a_{s1_i,s2_j} dp_{i,j,1}=\\max(dp_{i-1,j,0}-A,dp_{i-1,j,1}-B,dp_{i-1,j,2}-A) dp_{i,j,2}=\\max(dp_{i,j-1,0}-A,dp_{i,j-1,1}-A,dp_{i,j-1,2}-B)","tags":["\u9898\u89e3","\u6a21\u62df\u8d5b"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/11-25-NOIP-%E6%A8%A1%E6%8B%9F%E8%B5%9B-%E9%A2%98%E8%A7%A3/#code_2","title":"Code","text":"<pre><code>// #pragma GCC optimize(1, 2, 3, \"Ofast\", \"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define ll long long\n#define int ll\n// #define ONLINEJUDGE\n// #define MULTI_CASES\nconst int MaxN = 2e3 + 100;\nconst int INF = 1e18;\nint T = 1, N, M;\nint a[10][10];\nint dp[MaxN][MaxN][4];\nint A, B;\n\nint g(int k)\n{\n    return -A - B * (k - 1);\n}\ninline void Solve()\n{\n    string s1, s2;\n    cin &gt;&gt; s1 &gt;&gt; s2;\n    s1 = ' ' + s1;\n    s2 = ' ' + s2;\n    map&lt;char, int&gt; mp;\n    mp['A'] = 1;\n    mp['T'] = 2;\n    mp['G'] = 3;\n    mp['C'] = 4;\n    for (int i = 1; i &lt;= 4; i++)\n    {\n        for (int j = 1; j &lt;= 4; j++)\n        {\n            cin &gt;&gt; a[i][j];\n        }\n    }\n    cin &gt;&gt; A &gt;&gt; B;\n    for (int i = max(s1.size(), s2.size()); i &gt;= 1; i--)\n    {\n        dp[0][i][0] = dp[i][0][0] = dp[0][i][2] = dp[i][0][1] = dp[0][i][1] = dp[i][0][2] = -INF;\n        dp[0][i][1] = dp[i][0][2] = g(i);\n    }\n    for (int i = 1; i &lt; s1.size(); i++)\n    {\n        for (int j = 1; j &lt; s2.size(); j++)\n        {\n            dp[i][j][0] = max({dp[i - 1][j - 1][0], dp[i - 1][j - 1][1], dp[i - 1][j - 1][2]}) + a[mp[s1[i]]][mp[s2[j]]];\n            dp[i][j][1] = max({dp[i - 1][j][0] - A, dp[i - 1][j][1] - B, dp[i - 1][j][2] - A});\n            dp[i][j][2] = max({dp[i][j - 1][0] - A, dp[i][j - 1][1] - A, dp[i][j - 1][2] - B});\n        }\n    }\n    cout &lt;&lt; max({dp[s1.size() - 1][s2.size() - 1][0], dp[s1.size() - 1][s2.size() - 1][1], dp[s1.size() - 1][s2.size() - 1][2]}) &lt;&lt; endl;\n}\nsigned main()\n{\n#ifndef ONLINEJUDGE\n    freopen(\"daddy.in\", \"r\", stdin);\n    freopen(\"daddy.out\", \"w\", stdout);\n#endif\n    ios::sync_with_stdio(0);\n    cin.tie(0), cout.tie(0);\n\n#ifdef MULTI_CASES\n    cin &gt;&gt; T;\n    while (T--)\n#endif\n        Solve();\n    // fclose(stdin);\n    // fclose(stdout);\n    return 0;\n}\n</code></pre>","tags":["\u9898\u89e3","\u6a21\u62df\u8d5b"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/CF1833B-Restore-the-Weather-%E9%A2%98%E8%A7%A3/","title":"CF1833B Restore the Weather \u9898\u89e3","text":"","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/CF1833B-Restore-the-Weather-%E9%A2%98%E8%A7%A3/#_1","title":"\u9898\u610f\u7b80\u8ff0","text":"<ul> <li>\u7ed9\u5b9a\u4e24\u4e2a\u957f\u5ea6\u4e3a n \u7684\u6570\u7ec4 a,b\u3002</li> <li>\u91cd\u6392\u6570\u7ec4 b\uff0c\u4f7f\u5f97 |a_i-b_i| \u7684\u503c\u5c3d\u53ef\u80fd\u5c0f\u4e14 |a_i - b_i|\\le k\u3002</li> <li>\u4fdd\u8bc1\u6709\u89e3\u3002</li> </ul>","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/CF1833B-Restore-the-Weather-%E9%A2%98%E8%A7%A3/#_2","title":"\u5206\u6790","text":"<p>\u56e0\u4e3a\u8fd9\u9053\u9898\u662f\u4fdd\u8bc1\u6709\u89e3\u7684\uff0c\u6240\u4ee5\u5728 |a_i - b_i| \u7684\u503c\u6700\u5c0f\u7684\u60c5\u51b5\u4e0b\uff0c|a_i - b_i|\\le k \u8fd9\u4e2a\u6761\u4ef6\u662f\u4e0d\u5fc5\u8981\u7684\u3002\u53ef\u5f97\u672c\u9898\u505a\u6cd5\u4e3a\u600e\u6837\u91cd\u6392 b \u6570\u7ec4\uff0c\u4fdd\u8bc1 |a_i - b_i| \u7684\u503c\u5c3d\u53ef\u80fd\u5c0f\u3002\u663e\u7136\uff0c\u901a\u8fc7\u7b80\u8981\u7684\u8f6c\u5316\u53ef\u5f97\uff0c\u5f53 a,b \u6309\u7167\u5347\u5e8f\u6216\u964d\u5e8f\u6392\u5217\u7684\u65f6\u5019\uff0c|a_i-b_i| \u7684\u503c\u5c3d\u53ef\u80fd\u5c0f\u3002\u6ce8\u610f\u4e00\u70b9\uff0c\u5728\u9898\u76ee\u4e2d\uff0c\u8981\u6c42\u4ee5 a \u6570\u7ec4\u7684\u539f\u987a\u5e8f\u6765\u8f93\u51fa\u91cd\u6392\u540e\u7684 b \u6570\u7ec4\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u7ed3\u6784\u4f53\u5b58\u50a8 a_i \u7684\u539f\u7f16\u53f7\uff0c\u5bf9\u7ed3\u6784\u4f53\u6392\u5e8f\u4e4b\u540e\u6309\u7167\u8fd9\u4e2a\u987a\u5e8f\u8fdb\u884c\u8f93\u51fa\u5373\u53ef\u3002</p>","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/CF1833B-Restore-the-Weather-%E9%A2%98%E8%A7%A3/#_3","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define ll long long\n#define int ll\nconst int MaxN = 1e5 + 100;\nconst int INF = 1e9;\nint T=1, N, M;\ntemplate&lt;class T&gt;\ninline void qread(T &amp;sum)\n{\n    sum=0;int boo=1;\n    char x=getchar();\n    while(x&lt;'0'||x&gt;'9'){if(x=='-')boo=-1;x=getchar();}\n    while(x&gt;='0'&amp;&amp;x&lt;='9'){sum=(sum&lt;&lt;1)+(sum&lt;&lt;3)+x-'0';x=getchar();}\n    sum*=boo;\n}\ntemplate&lt;class T&gt;\nvoid qput(T x)\n{\n    if(x&lt;0){\n        x=-x;\n        putchar('-');}\n    if(x&gt;9)\n        qput(x/10);\n   putchar(x%10+48);\n}\nstruct f{\n    int id ,a;\n}a[MaxN];//\u7ed3\u6784\u4f53\uff0cid\u4e3a\u539f\u7f16\u53f7\uff0ca\u4e3a\u503c\u3002\n\nbool cmp(f a,f b){\n    return a.a&lt;b.a;//\u5bf9\u7ed3\u6784\u4f53\u6309\u7167a\u7684\u5927\u5c0f\u8fdb\u884c\u6392\u5e8f\u3002\n}\ninline void Solve()\n{\n    int n,k;//\u5176\u5b9e\u4e0ek\u7684\u503c\u662f\u65e0\u5173\u7684\u3002\n    int b[MaxN],ans[MaxN];\n    qread(n),qread(k);\n    for(int i=0;i&lt;n;i++){\n        qread(a[i].a);\n        a[i].id=i;//\u5728\u8f93\u5165a\u6570\u7ec4\u65f6\u8bb0\u5f55a_i\u7684\u7f16\u53f7\u3002\n    }\n    for(int i=0;i&lt;n;i++){\n        qread(b[i]);\n    }\n    sort(b,b+n);\n    sort(a,a+n,cmp);\n    for(int i=0;i&lt;n;i++){\n        ans[a[i].id]=b[i];//\u5b58\u50a8\u91cd\u6392\u4e4b\u540e\u7684b\u6570\u7ec4\n    }\n    for(int i=0;i&lt;n;i++){\n        cout&lt;&lt;ans[i]&lt;&lt;\" \";\n    }\n    cout&lt;&lt;endl;\n}\nsigned main()\n{\n    cin &gt;&gt; T;\n    while (T--)\n       Solve();\n    return 0;\n}\n</code></pre>","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/CF1846B-Rudolph-and-Tic-Tac-Toe-%E9%A2%98%E8%A7%A3/","title":"CF1846B Rudolph and Tic-Tac-Toe \u9898\u89e3","text":"<p>\u5176\u5b9e\u5c31\u662f\u4e2a\u6a21\u62df\u9898\uff0c\u6309\u9898\u610f\u6a21\u62df\u5373\u53ef</p>","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/CF1846B-Rudolph-and-Tic-Tac-Toe-%E9%A2%98%E8%A7%A3/#_1","title":"\u9898\u610f\u7b80\u8ff0","text":"<p>\u9898\u610f\u53ef\u4ee5\u7406\u89e3\u4e3a\u6709\u4e09\u4e2a\u4eba\u4e2a\u4eba\u5728 3\\times3 \u7684\u65b9\u683c\u4e2d\u4e0b\u4e95\u5b57\u68cb\uff0c\u5982\u679c\u4e09\u4e2a\u76f8\u540c\u7684\u68cb\u5b50\u8fde\u6210\u4e00\u6761\u7ebf\uff0c\u5c31\u53ef\u4ee5\u5224\u5b9a\u8f93\u8d62\u3002\u5982\u679c\u6ca1\u6709\u4eba\u8d62\u5219\u8f93\u51fa <code>DRAW</code> \u3002</p>","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/CF1846B-Rudolph-and-Tic-Tac-Toe-%E9%A2%98%E8%A7%A3/#_2","title":"\u5206\u6790","text":"<p>\u8fde\u63a5\u7684\u65b9\u5f0f\u53ef\u5206\u4e3a\u4e09\u7c7b\uff1a\u6a2a\u884c\u3001\u7ad6\u5217\u3001\u5bf9\u89d2\u7ebf\u3002\u5171\u516b\u79cd\u60c5\u51b5\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u5224\u65ad\u662f\u5426\u6ee1\u8db3\u8fd9\u516b\u79cd\u60c5\u51b5\u7136\u540e\u8f93\u51fa\u5373\u53ef\u3002\u6ce8\u610f\u5728\u5224\u65ad\u7684\u65f6\u5019\u8981\u6392\u53bb <code>.</code> \uff0c\u4e0d\u80fd\u628a\u7a7a\u884c\u4e5f\u7b97\u4f5c\u4e00\u79cd\u3002\u5177\u4f53\u53ef\u770b\u4ee3\u7801\u3002</p>","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/CF1846B-Rudolph-and-Tic-Tac-Toe-%E9%A2%98%E8%A7%A3/#_3","title":"\u4ee3\u7801","text":"<pre><code>inline void Solve()\n{\n     string a[3];//\u5b58\u50a8\u5730\u56fe\uff0c\u6ce8\u610fstring\u662f\u4ece\u96f6\u5f00\u59cb\u7684\n     cin &gt;&gt; a[0];\n     cin &gt;&gt; a[1];\n     cin &gt;&gt; a[2];\n     //cout &lt;&lt; T&lt;&lt;endl;\n     //cout &lt;&lt; a[0][2]&lt;&lt;endl;\n     //\u6ce8\u610f\u6392\u9664\u7a7a\u884c\n     if (a[0][0] == a[1][0]&amp;&amp;a[0][0] == a[2][0]&amp;&amp;a[0][0]!='.'){//\u5224\u65ad\u7b2c\u4e00\u5217\n          cout &lt;&lt; a[0][0] &lt;&lt; endl;\n          return;\n     }\n     if(a[0][1]==a[1][1]&amp;&amp;a[0][1]==a[2][1]&amp;&amp;a[0][1]!='.'){//\u7b2c\u4e8c\u5217\n          cout &lt;&lt; a[0][1] &lt;&lt; endl;//cout &lt;&lt; 1;\n           return;\n     }\n     if(a[0][2]==a[1][2]&amp;&amp;a[0][2]==a[2][2]&amp;&amp;a[0][2]!='.'){//\u7b2c\u4e09\u5217\n          cout &lt;&lt; a[0][2] &lt;&lt; endl;\n          return;\n     }\n     if (a[0][0] == a[0][1]&amp;&amp;a[0][0] == a[0][2]&amp;&amp;a[0][0]!='.'){//\u7b2c\u4e00\u884c\n          cout &lt;&lt; a[0][0] &lt;&lt; endl;\n          return;\n     }\n     if(a[1][0]==a[1][1]&amp;&amp;a[1][0]==a[1][2]&amp;&amp;a[1][0]!='.'){//\u7b2c\u4e8c\u884c\n             cout &lt;&lt; a[1][0] &lt;&lt; endl;\n             return;\n     }\n     if(a[2][0]==a[2][1]&amp;&amp;a[2][0]==a[2][2]&amp;&amp;a[2][0]!='.'){//\u7b2c\u4e09\u884c\n             cout &lt;&lt; a[2][0] &lt;&lt; endl;\n             return;\n     }\n     if(a[0][0]==a[1][1]&amp;&amp;a[0][0]==a[2][2]&amp;&amp;a[0][0]!='.'){//\u5bf9\u89d2\u7ebf1\n             cout &lt;&lt; a[0][0] &lt;&lt; endl;\n             return;\n     }\n     if(a[0][2]==a[1][1]&amp;&amp;a[0][2]==a[2][0]&amp;&amp;a[0][2]!='.'){//\u5bf9\u89d2\u7ebf2\n             cout &lt;&lt; a[0][2] &lt;&lt; endl;\n             return;\n     }\n     cout &lt;&lt; \"DRAW\" &lt;&lt; endl;//\u5982\u679c\u90fd\u4e0d\u7b26\u5408\n}\n</code></pre>","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/CF1850B-Ten-Words-of-Wisdom%E9%A2%98%E8%A7%A3/","title":"CF1850B Ten Words of Wisdom\u9898\u89e3","text":"","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/CF1850B-Ten-Words-of-Wisdom%E9%A2%98%E8%A7%A3/#_1","title":"\u9898\u76ee\u7b80\u8ff0","text":"<p>\u5728 n \u4e2a\u56de\u7b54\u4e2d\u627e\u5230\u957f\u5ea6\u4e0d\u8d85\u8fc7 10 \u4e14\u8d28\u91cf\u6700\u9ad8\u7684\u56de\u7b54\u3002</p>","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/CF1850B-Ten-Words-of-Wisdom%E9%A2%98%E8%A7%A3/#_2","title":"\u9898\u76ee\u5206\u6790","text":"<p>\u5c31\u662f\u4e2a\u666e\u901a\u6a21\u62df\uff0c\u5982\u679c a_i\\le 10\uff0c\u5c31\u6253\u64c2\u53f0\u627e\u6700\u5927\u8d28\u91cf\uff0c\u66f4\u65b0\u5e8f\u53f7\u3002</p>","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/CF1850B-Ten-Words-of-Wisdom%E9%A2%98%E8%A7%A3/#code","title":"Code","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define ll long long\n#define int ll\nconst int MaxN = 1e6 + 100;\nconst int INF = 1e9;\nint T=1, N, M;\ntemplate&lt;class T&gt;\ninline void qread(T &amp;sum)\n{\n    sum=0;int boo=1;\n    char x=getchar();\n    while(x&lt;'0'||x&gt;'9'){if(x=='-')boo=-1;x=getchar();}\n    while(x&gt;='0'&amp;&amp;x&lt;='9'){sum=(sum&lt;&lt;1)+(sum&lt;&lt;3)+x-'0';x=getchar();}\n    sum*=boo;\n}\ntemplate&lt;class T&gt;\nvoid qput(T x)\n{\n    if(x&lt;0){\n        x=-x;\n        putchar('-');}\n    if(x&gt;9)\n        qput(x/10);\n    putchar(x%10+48);\n}\ninline void Solve()\n{\n    int n;\n    cin&gt;&gt;n;\n    int maxn=-1,ans=0;\\\\\u8bb0\u5f97\u521d\u59cb\u5316\n    for(int i=0;i&lt;n;i++){\n        int a,b;\n        cin&gt;&gt;a&gt;&gt;b;\n        if(a&gt;10){\n            continue;\n        }\n        if(b&gt;maxn){\n            maxn=b;\n            ans=i+1;\\\\\u56e0\u4e3a\u6211\u7684\u4e60\u60ef\u662f\u4ece\u96f6\u5f00\u59cb\uff0c\u8fd9\u91cc\u7684ans\u66f4\u65b0\u65f6\u9700\u8981+1.\n        }\n    }\n    cout&lt;&lt;ans&lt;&lt;endl;\n}\nsigned main()\n{\n    //freopen(\".in\", \"r\", stdin);\n    //freopen(\".out\", \"w\", stdout);\n    ios::sync_with_stdio(0);\n    //cin.tie(0);\n    cin &gt;&gt; T;\n    while (T--)\n        Solve();\n    //fclose(stdin);\n    //fclose(stdout);\n    return 0;\n}\n</code></pre>","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/CF1850C-Word-on-the-Paper%E9%A2%98%E8%A7%A3/","title":"CF1850C Word on the Paper\u9898\u89e3","text":"","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/CF1850C-Word-on-the-Paper%E9%A2%98%E8%A7%A3/#_1","title":"\u9898\u76ee\u7b80\u8ff0","text":"<p>\u5728 8 \\times 8 \u7684\u70b9\u7f51\u683c\u4e0a\uff0c\u4e00\u4e2a\u7531\u5c0f\u5199\u62c9\u4e01\u5b57\u6bcd\u7ec4\u6210\u7684\u5355\u8bcd\u4ece\u4e0a\u5230\u4e0b\u5782\u76f4\u5730\u5199\u5728\u4e00\u5217\u4e2d\u3002\u4f60\u9700\u8981\u627e\u5230\u4ed6\u5e76\u8f93\u51fa</p>","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/CF1850C-Word-on-the-Paper%E9%A2%98%E8%A7%A3/#_2","title":"\u9898\u76ee\u5206\u6790","text":"<p>\u7531\u9898\u610f\u53ef\u5f97\uff0c\u7f51\u683c\u4e2d\u53ea\u4f1a\u6709\u4e00\u4e2a\u5355\u8bcd\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u81ea\u4e0a\u800c\u4e0b\u904d\u5386\u7f51\u683c\uff0c\u5982\u679c\u662f\u5b57\u6bcd\u5c31\u8f93\u51fa\u5373\u53ef\u3002</p>","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/CF1850C-Word-on-the-Paper%E9%A2%98%E8%A7%A3/#code","title":"Code","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define ll long long\n#define int ll\nconst int MaxN = 1e6 + 100;\nconst int INF = 1e9;\nint T=1, N, M;\ntemplate&lt;class T&gt;\ninline void qread(T &amp;sum)\n{\n    sum=0;int boo=1;\n    char x=getchar();\n    while(x&lt;'0'||x&gt;'9'){if(x=='-')boo=-1;x=getchar();}\n    while(x&gt;='0'&amp;&amp;x&lt;='9'){sum=(sum&lt;&lt;1)+(sum&lt;&lt;3)+x-'0';x=getchar();}\n    sum*=boo;\n}\ntemplate&lt;class T&gt;\nvoid qput(T x)\n{\n    if(x&lt;0){\n        x=-x;\n        putchar('-');}\n    if(x&gt;9)\n        qput(x/10);\n   putchar(x%10+48);\n}\ninline void Solve()\n{\n   string a[10];\\\\\u907f\u514d\u7206\u7a7a\u95f4\u53ef\u4ee5\u5f00\u5927\u70b9\n   for (int i = 0; i &lt; 8;i++){\n        cin &gt;&gt; a[i];\n   }\n   for (int i = 0; i &lt; 8;i++){\n        for (int j = 0; j &lt; a[i].size();j++){\n            if(a[i][j]!='.'){\n                cout &lt;&lt; a[i][j];\n            }\n        }\n   }\n   cout &lt;&lt; endl;\n}\nsigned main()\n{\n    //freopen(\".in\", \"r\", stdin);\n    //freopen(\".out\", \"w\", stdout);\n    ios::sync_with_stdio(0);\n    //cin.tie(0);\n    cin &gt;&gt; T;\n    while (T--)\n       Solve();\n    //fclose(stdin);\n    //fclose(stdout);\n    return 0;\n}\n</code></pre>","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/CF1862B-Sequence-Game-%E9%A2%98%E8%A7%A3/","title":"CF1862B Sequence Game \u9898\u89e3","text":"","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/CF1862B-Sequence-Game-%E9%A2%98%E8%A7%A3/#_1","title":"\u5206\u6790","text":"<p>\u5f88\u7b80\u5355\u7684\u4e00\u9053\u6784\u9020\u9898\u3002</p> <p>\u56e0\u4e3a\u7b2c\u4e00\u4e2a\u6570\u662f\u5fc5\u53d6\u7684\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u4ece\u7b2c\u4e8c\u4e2a\u6570\u5f00\u59cb\u5224\u65ad\uff0c\u5373\u5982\u679c b_{i-1}\\le b_i\uff0c\u5c31\u4e0d\u9700\u8981\u5728\u8fd9\u4e24\u4e2a\u6570\u4e4b\u95f4\u6dfb\u52a0\u522b\u7684\u6570\u3002</p> <p>\u53cd\u4e4b\uff0c\u5982\u679c\u4e0d\u6ee1\u8db3\uff0c\u6211\u4eec\u5c31\u9700\u8981\u5728\u8fd9\u4e24\u4e2a\u6570\u4e4b\u95f4\u6dfb\u52a0\u4e00\u4e2a b_i\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u5b83\u6ee1\u8db3 b_{i-1}\\le b_i \u7684\u6761\u4ef6\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u5148\u8dd1\u4e00\u6b21\u5faa\u73af\u8ba1\u7b97\u51fa m \u7684\u503c\uff0c\u5c06 m \u548c a_1 \u63d0\u524d\u8f93\u51fa\uff0c\u7136\u540e\u5faa\u73af\u8f93\u51fa\u5269\u4e0b\u7684\u6570\u5373\u53ef\u3002</p>","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/CF1862B-Sequence-Game-%E9%A2%98%E8%A7%A3/#code","title":"Code","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define ll long long\n#define int ll\nconst int MaxN = 1e6 + 100;\nconst int INF = 1e9;\nint T=1, N, M;\ntemplate&lt;class T&gt;\ninline void qread(T &amp;sum)\n{\n    sum=0;int boo=1;\n    char x=getchar();\n    while(x&lt;'0'||x&gt;'9'){if(x=='-')boo=-1;x=getchar();}\n    while(x&gt;='0'&amp;&amp;x&lt;='9'){sum=(sum&lt;&lt;1)+(sum&lt;&lt;3)+x-'0';x=getchar();}\n    sum*=boo;\n}\ntemplate&lt;class T&gt;\nvoid qput(T x)\n{\n    if(x&lt;0){\n        x=-x;\n        putchar('-');}\n    if(x&gt;9)\n        qput(x/10);\n   putchar(x%10+48);\n}\ninline void Solve()\n{\n    int n;\n    cin&gt;&gt;n;\n    int a[2000010];\n    for(int i=1;i&lt;=n;i++){\n        cin&gt;&gt;a[i];\n    }\n    int m=1;\n    //cout&lt;&lt;a[1]&lt;&lt;\" \";\n    for(int i=2;i&lt;=n;i++){\n        m++;\n        if(a[i]&gt;=a[i-1]){//\u5982\u679c\u4e0d\u6ee1\u8db3\u6761\u4ef6\u957f\u5ea6\u5c31\u9700\u8981\u52a0\u4e00\n            //m++;\n            continue;\n        }  \n        m++;\n    }\n    cout&lt;&lt;m&lt;&lt;endl&lt;&lt;a[1]&lt;&lt;\" \";//a1\u76f4\u63a5\u8f93\u51fa\u5373\u53ef\uff0c\u5faa\u73af\u4ece2\u5f00\u59cb\n    for(int i=2;i&lt;=n;i++){\n        if(a[i]&gt;=a[i-1]){\n            cout&lt;&lt;a[i]&lt;&lt;\" \";\n        }\n        else{\n            cout&lt;&lt;a[i]&lt;&lt;\" \"&lt;&lt;a[i]&lt;&lt;\" \";\n        }\n    }\n    cout&lt;&lt;endl;\n}\nsigned main()\n{\n    //freopen(\".in\", \"r\", stdin);\n    //freopen(\".out\", \"w\", stdout);\n    ios::sync_with_stdio(0);\n    //cin.tie(0);\n    cin &gt;&gt; T;\n    while (T--)\n       Solve();\n    //fclose(stdin);\n    //fclose(stdout);\n    return 0;\n}\n</code></pre>","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/CF1890B%20Qingshan%20Loves%20Strings%E9%A2%98%E8%A7%A3/","title":"CF1890B Qingshan Loves Strings\u9898\u89e3","text":"","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/CF1890B%20Qingshan%20Loves%20Strings%E9%A2%98%E8%A7%A3/#_1","title":"\u9898\u610f\u7b80\u8ff0","text":"<p>\u7ed9\u5b9a\u4e24\u4e2a01\u5b57\u7b26\u4e32 s,t\uff0c\u4f60\u9700\u8981\u5728 s \u4e4b\u4e2d\u63d2\u5165\u4efb\u610f\u4e2a\u5b57\u7b26\u4e32 t\uff0c\u4f7f\u5f97\u65b0\u7684\u5b57\u7b26\u4e32 s \u4e2d\u76f8\u90bb\u7684\u4e24\u4e2a\u6570\u90fd\u4e0d\u540c\u3002</p>","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/CF1890B%20Qingshan%20Loves%20Strings%E9%A2%98%E8%A7%A3/#_2","title":"\u9898\u610f\u5206\u6790","text":"<p>\u7531\u4e8e\u5b57\u7b26\u4e32\u53ea\u6709 0 \u548c 1\uff0c\u6240\u4ee5\u6700\u7ec8\u7684\u5b57\u7b26\u4e32\u4e00\u5b9a\u662f <code>01010101</code> \u6216 <code>10101010</code> \u7684\u5f62\u5f0f\u3002\u800c\u63d2\u5165\u7684\u5b57\u7b26\u4e32\u662f\u56fa\u5b9a\u7684\uff0c\u6240\u4ee5\u9996\u5148\u8003\u8651\u5b57\u7b26\u4e32 s\uff0c\u5982\u679c\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u540c\u65f6\u51fa\u73b0 <code>11</code> \u548c <code>00</code> \u65f6\uff0c\u5b57\u7b26\u4e32\u4e00\u5b9a\u4e0d\u80fd\u201c\u53d8\u597d\u201d\u3002</p> <p>\u7136\u540e\u6211\u4eec\u8003\u8651\u5b57\u7b26\u4e32 t \u7684\u5f62\u5f0f\uff0c\u5982\u679c\u5b57\u7b26\u4e32 t \u672c\u8eab\u5c31\u4e0d\u7b26\u5408 t_i \\ne t_{i+1} \u7684\u8bdd\uff0c\u4e5f\u662f\u4e0d\u53ef\u4ee5\u7684\u3002</p> <p>\u5982\u679c\u90fd\u5b57\u7b26\u4e32\u90fd\u7b26\u5408\u7684\u60c5\u51b5\u4e0b\uff0c\u4e0d\u96be\u53d1\u73b0\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8bb0\u5f55\u5b57\u7b26\u4e32 s \u4e2d\u5305\u62ec <code>00</code> \u8fd8\u662f <code>11</code>\uff0c\u7136\u540e\u4e0e\u5b57\u7b26\u4e32 t \u7684\u4e24\u8fb9\u5224\u65ad\uff0c\u5982\u679c\u4e0d\u540c\uff0c\u5c31\u53ef\u4ee5\u6784\u6210\u3002\u5177\u4f53\u5224\u65ad\u89c1\u4ee3\u7801\u3002</p>","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/CF1890B%20Qingshan%20Loves%20Strings%E9%A2%98%E8%A7%A3/#code","title":"Code","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define ll long long\n#define int ll\nconst int MaxN = 1e6 + 100;\nconst int INF = 1e9;\nint T=1, N, M;\ntemplate&lt;class T&gt;\ninline void qread(T &amp;sum)\n{\n    sum=0;int boo=1;\n    char x=getchar();\n    while(x&lt;'0'||x&gt;'9'){if(x=='-')boo=-1;x=getchar();}\n    while(x&gt;='0'&amp;&amp;x&lt;='9'){sum=(sum&lt;&lt;1)+(sum&lt;&lt;3)+x-'0';x=getchar();}\n    sum*=boo;\n}\ntemplate&lt;class T&gt;\nvoid qput(T x)\n{\n    if(x&lt;0){\n        x=-x;\n        putchar('-');}\n    if(x&gt;9)\n        qput(x/10);\n    putchar(x%10+48);\n}\ninline void Solve()\n{\n    int n,m;\n    cin&gt;&gt;n&gt;&gt;m;\n\n    string s,t;\n    cin&gt;&gt;s&gt;&gt;t;\n\n    bool flag=0;\n    int cnt=-1;\n    for(int i=0;i&lt;n;i++){\n        if(s[i]==s[i+1]){\n            if(s[i]-'0'!=cnt&amp;&amp;cnt!=-1){\n                puts(\"No\");//\u5b57\u7b26\u4e32s\n                //cout&lt;&lt;cnt;\n                return;\n            }\n            cnt=s[i]-'0';\n            flag=1;\n\n        }\n    }\n\n    if(flag==0){\n        puts(\"Yes\");\n        return;\n    }\n    for(int i=0;i&lt;t.size();i++){\n        if(t[i]==t[i+1]){\n            puts(\"No\");//\u5b57\u7b26\u4e32t\n            return;\n        }\n    }\n    if(t[0]-'0'!=cnt&amp;&amp;t[m-1]-'0'!=cnt){\n        puts(\"Yes\");//\u5b57\u7b26\u4e32s\u548ct\u5224\u65ad\n        //cout&lt;&lt;cnt\n    }\n    else{\n        puts(\"No\");\n    }\n}\nsigned main()\n{\n    //freopen(\".in\", \"r\", stdin);\n    //freopen(\".out\", \"w\", stdout);\n    ios::sync_with_stdio(0);\n    //cin.tie(0);\n    cin &gt;&gt; T;\n    while (T--)\n        Solve();\n    //fclose(stdin);\n    //fclose(stdout);\n    return 0;\n}\n</code></pre>","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/CF1988A-Split-the-Multiset-%E9%A2%98%E8%A7%A3/","title":"CF1988A","text":"","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/CF1988A-Split-the-Multiset-%E9%A2%98%E8%A7%A3/#_1","title":"\u9898\u610f\u7b80\u8ff0","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570 n\uff0c\u6bcf\u6b21\u53ef\u4ee5\u5c06\u5176\u62c6\u5206\u6210 k \u4e2a\u6570\uff0c\u6c42\u5c06 n \u53d8\u4e3a n \u4e2a 1 \u7684\u6700\u5c11\u64cd\u4f5c\u6b21\u6570\u3002</p>","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/CF1988A-Split-the-Multiset-%E9%A2%98%E8%A7%A3/#_2","title":"\u9898\u76ee\u5206\u6790","text":"<p>\u5bf9\u4e8e\u4e00\u4e2a\u6570 n\uff0c\u6211\u4eec\u6bcf\u6b21\u53ef\u4ee5\u5c06\u5176\u62c6\u5206\u4e3a (k-1) \u4e2a 1\uff0c\u548c 1 \u4e2a (n-k)\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u66b4\u529b\u679a\u4e3e n \u80fd\u88ab\u62c6\u5206\u51e0\u6b21\uff0c\u5c31\u53ef\u4ee5\u5f97\u51fa\u7b54\u6848\uff0c\u5177\u4f53\u89c1\u4e0b\uff1a</p> <p>\u5f53 n=5,k=2\u65f6\uff1a - 5 - 1,4 - 1,1,3 - 1,1,1,2 - 1,1,1,1,1</p> <p>\u4e0d\u96be\u53d1\u73b0\u53ea\u9700\u8981\u6bcf\u6b21\u5c06 n \u51cf\u53bb k-1\uff0c\u4e00\u76f4\u51cf\u5230 n&lt;=1\uff0c\u6b64\u65f6\u7684\u64cd\u4f5c\u6b21\u6570\u5373\u4e3a\u7b54\u6848\u3002</p>","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/CF1988A-Split-the-Multiset-%E9%A2%98%E8%A7%A3/#code","title":"Code","text":"<pre><code>#pragma GCC optimize(1, 2, 3, \"Ofast\", \"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define ll long long\n#define int ll\n#define ONLINE_JUDGE\n#define MULTI_CASES\nconst int MaxN = 2e5+100;\nconst int INF = 1e9;\nint T=1, N, M;\nint a[MaxN];\nint ans=0;\ninline void Solve()\n{\n    cin&gt;&gt;N&gt;&gt;M;\n    if(N==1){\n        cout&lt;&lt;0&lt;&lt;endl;\n        return ;\n    }\n    ans=0;\n    for(int i=1;;i++){\n        N-=M-1;\n//      cout&lt;&lt;N&lt;&lt;endl;\n        ans++;\n        if(N&lt;=1){\n            break;\n        }\n    }\n    cout&lt;&lt;ans&lt;&lt;endl;\n}\nsigned main()\n{\n#ifndef ONLINE_JUDGE\n    freopen(\".in\", \"r\", stdin);\n    freopen(\".out\", \"w\", stdout);\n#endif\n    ios::sync_with_stdio(0);\n    cin.tie(0),cout.tie(0);\n\n#ifdef MULTI_CASES\n    cin &gt;&gt; T;\n    while (T--)\n#endif\n        Solve();\n    //fclose(stdin);\n    //fclose(stdout);\n    return 0;\n}\n</code></pre>","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/CF1988B-Make-Majority-%E9%A2%98%E8%A7%A3/","title":"CF1988B","text":"","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/CF1988B-Make-Majority-%E9%A2%98%E8%A7%A3/#_1","title":"\u9898\u76ee\u5206\u6790","text":"<p>\u6839\u636e\u9898\u610f\uff0c\u6bcf\u6b21\u64cd\u4f5c\u53ef\u4ee5\u5c06 [l,r] \u533a\u95f4\u7684\u6570\u53d8\u4e3a 1 \u4e2a\u591a\u6570\uff0c\u8981\u6c42\u80fd\u5426\u8f6c\u5316\u4e3a a=[1]\u3002\u4e0d\u96be\u60f3\u51fa\uff0c\u6211\u4eec\u5e94\u8be5\u5c06\u5e8f\u5217\u4e2d 0 \u7684\u4e2a\u6570\u964d\u4e3a\u6700\u4f4e\uff0c\u6240\u4ee5\u53ef\u4ee5\u5c06\u6bcf\u4e00\u6bb5\u8fde\u7eed\u7684 0 \u90fd\u8fdb\u884c\u64cd\u4f5c\u4f7f\u5f97\u6700\u540e\u7684\u65f6\u5019\u5e8f\u5217\u4e2d\u6240\u5305\u542b\u7684 0 \u6700\u5c11\uff0c\u7136\u540e\u53ea\u9700\u8981\u904d\u5386\u5e8f\u5217\u7edf\u8ba1 c_0 \u548c c_1 \u7684\u4e2a\u6570\uff0c\u6bd4\u8f83\u4e24\u6570\uff0c\u5982\u679c c_1&gt;c_0 \u5219\u4e3a<code>Yes</code>\u3002</p>","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/CF1988B-Make-Majority-%E9%A2%98%E8%A7%A3/#code","title":"Code","text":"<pre><code>//#pragma GCC optimize(1, 2, 3, \"Ofast\", \"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define ll long long\n#define int ll\n#define ONLINE_JUDGE\n#define MULTI_CASES\nconst int MaxN = 2e5+100;\nconst int INF = 1e9;\nint T=1, N, M;\nint a[MaxN];\ninline void Solve()\n{\n    int N;\n    cin&gt;&gt;N;\n    string s;\n    cin&gt;&gt;s;\n    int xx[MaxN],n=0;\n//  memset(xx,0,sizeof xx);\n    bool f=0;\n    for(int i=0;i&lt;N;i++){\n//      cout&lt;&lt;f&lt;&lt;endl;\n//      cout&lt;&lt;s[i];\n        if(s[i]=='0'&amp;&amp;!f){\n            xx[n++]=0;//\u5c3d\u53ef\u80fd\u51cf\u5c110\u7684\u6570\u91cf\n            f=1;\n        }\n        else{\n            if(s[i]!='1'){\n                continue;\n            }\n            f=0;\n            xx[n++]=1;\n        }\n//      cout&lt;&lt;xx[n-1];\n    }\n    int sum0=0,sum1=0;\n    for(int i=0;i&lt;n;i++){\n        if(xx[i]==1){\n            sum1++;\n        }\n        else{\n            sum0++;\n        }\n    }\n//  cout&lt;&lt;sum0&lt;&lt;\" \"&lt;&lt;sum1&lt;&lt;endl;\n    if(sum0&gt;=sum1){\n        puts(\"No\");\n    }\n    else{\n        puts(\"Yes\");\n    }\n}\nsigned main()\n{\n#ifndef ONLINE_JUDGE\n    freopen(\".in\", \"r\", stdin);\n    freopen(\".out\", \"w\", stdout);\n#endif\n    ios::sync_with_stdio(0);\n    cin.tie(0),cout.tie(0);\n\n#ifdef MULTI_CASES\n    cin &gt;&gt; T;\n    while (T--)\n#endif\n        Solve();\n    //fclose(stdin);\n    //fclose(stdout);\n    return 0;\n}\n</code></pre>","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/CF1988C-Increasing-Sequence-with-Fixed-OR-%E9%A2%98%E8%A7%A3/","title":"CF1988C","text":"","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/CF1988C-Increasing-Sequence-with-Fixed-OR-%E9%A2%98%E8%A7%A3/#_1","title":"\u9898\u610f\u7b80\u8ff0","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570 n\uff0c\u8981\u6784\u9020\u51fa\u4e00\u4e2a\u957f\u5ea6\u4e3a k \u7684\u4e25\u683c\u9012\u589e\u5e8f\u5217 a\uff0c\u4e14\u6bcf\u4e00\u9879 a_i\\le n\u3002\u8981\u6ee1\u8db3 a_i|a_{i-1}=n\u3002</p>","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/CF1988C-Increasing-Sequence-with-Fixed-OR-%E9%A2%98%E8%A7%A3/#_2","title":"\u9898\u76ee\u5206\u6790","text":"<p>\u8981\u4f7f\u5f97 a_i|a_{i-1}=n\uff0c\u6211\u4eec\u4e0d\u59a8\u5148\u627e\u627e\u89c4\u5f8b\uff1a</p> <p>\u5f53 n=14 \u65f6\uff0c\u53ef\u4ee5\u6784\u9020\u51fa\u4ee5\u4e0b\u6570\u636e\uff1a</p> <p>a_1=6</p> <p>a_2=10</p> <p>a_3=12</p> <p>a_4=14</p> <p>\u5c06\u5176\u8f6c\u5316\u4e3a \u4e8c\u8fdb\u5236\uff1a</p> <p>0110\\ 1010\\ 1100\\ 1110</p> <p>\u901a\u8fc7\u89c2\u5bdf\u6b64\u6570\u636e\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u6784\u9020\u51fa\u7684\u6570\u5b57\u7684\u4e8c\u8fdb\u5236\u5b58\u5728\u89c4\u5f8b\uff0c\u5373\u5c06 n \u4ece\u672b\u4f4d\u5f00\u59cb\u5c06\u6bcf\u4e2a 1 \u90fd\u53bb\u9664\u4e00\u6b21\uff0c\u8fd9\u6837\u53ef\u4ee5\u4f7f\u5f97\u76f8\u90bb\u4e24\u4e2a\u6570\u7684\u5f02\u6216\u503c\u90fd\u4e3a n\u3002</p>","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/CF1988C-Increasing-Sequence-with-Fixed-OR-%E9%A2%98%E8%A7%A3/#code","title":"Code","text":"<pre><code>#pragma GCC optimize(1, 2, 3, \"Ofast\", \"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define ll long long\n#define int ll\n#define ONLINE_JUDGE\n #define MULTI_CASES\nconst int MaxN = 2e5+100;\nconst int INF = 1e9;\nint T=1, N, M;\nint a[MaxN];\nint Atoi(string s,int radix)    //s\u662f\u7ed9\u5b9a\u7684radix\u8fdb\u5236\u5b57\u7b26\u4e32\n{\n    int ans=0;\n    for(int i=0;i&lt;s.size();i++)\n    {\n        char t=s[i];\n        if(t&gt;='0'&amp;&amp;t&lt;='9') ans=ans*radix+t-'0';\n        else ans=ans*radix+t-'a'+10;\n    }\n    return ans;\n}\n//n\u662f\u5f85\u8f6c\u6362\u7684\u5341\u8fdb\u5236\u6570\uff0cm\u662f\u5f85\u8f6c\u6362\u6210\u7684\u8fdb\u5236\u6570 \nstring intToA(int n,int m){\n    string ans=\"\";\n    do{      //\u4f7f\u7528do{}while()\u5faa\u73af\u7c7b\u578b\u4ee5\u9632\u6b62\u8f93\u5165\u4e3a0\u7684\u60c5\u51b5\n        int t=n%m;\n        if(t&gt;=0&amp;&amp;t&lt;=9)    \n            ans+=(t+'0');\n        else \n            ans+=(t+'a'-10);\n        n/=m;\n    }while(n);   \n    reverse(ans.begin(),ans.end());\n    return ans;    \n}\n\ninline void Solve()\n{\n    cin&gt;&gt;N;\n//  char s1[MaxN];\n    string s;\n    s=intToA(N,2);\n\n    M=1;\n//  cout&lt;&lt;s&lt;&lt;endl;\n    for(int i=0;i&lt;s.size();i++){\n        if(s[i]=='1'){\n            M++;\n        }\n    }\n    if(M==2){\n        cout&lt;&lt;1&lt;&lt;endl&lt;&lt;N&lt;&lt;endl;\n        return;\n    }\n    cout&lt;&lt;M&lt;&lt;endl;\n    for(int i=0;i&lt;s.size();i++){\n        if(s[i]=='1'){\n            string str=s;\n            str[i]='0';\n            cout&lt;&lt;Atoi(str,2)&lt;&lt;\" \";\n        }\n    }\n    cout&lt;&lt;N&lt;&lt;endl;\n//  cout&lt;&lt;endl;\n//  cout&lt;&lt;s&lt;&lt;endl;\n}\nsigned main()\n{\n#ifndef ONLINE_JUDGE\n    freopen(\".in\", \"r\", stdin);\n    freopen(\".out\", \"w\", stdout);\n#endif\n    ios::sync_with_stdio(0);\n    cin.tie(0),cout.tie(0);\n\n#ifdef MULTI_CASES\n    cin &gt;&gt; T;\n    while (T--)\n#endif\n        Solve();\n    //fclose(stdin);\n    //fclose(stdout);\n    return 0;\n}\n</code></pre>","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/CF2023B-CF2024D-Skipping-%E9%A2%98%E8%A7%A3/","title":"CF2023B/CF2024D","text":"","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/CF2023B-CF2024D-Skipping-%E9%A2%98%E8%A7%A3/#_1","title":"\u9898\u610f\u5206\u6790","text":"<p>\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5728\u7b2c i \u4e2a\u70b9\u4e0a\u65f6\uff0c\u6240\u5f97\u7684\u5f97\u5206\u4e3a\u4ece 1 \u5230 i \u4e4b\u548c\u51cf\u53bb\u8df3\u8fc7\u7684\u95ee\u9898\u3002\u6240\u4ee5\u6b64\u9898\u53ef\u4ee5\u8f6c\u5316\u4e3a\u6c42\u8df3\u8fc7\u7684\u9898\u76ee\u7684\u6700\u5c0f\u503c\u3002\u6240\u4ee5\u7b54\u6848\u5c31\u662f</p> ans=\\max_{i=1}^{n}(sum_i-dis_i) <p>\u5176\u4e2d\u7684 sum_i \u8868\u793a\u4ece 1 \u5230 i \u7684\u524d\u7f00\u548c\uff0cdis_i \u8868\u793a\u4ece 1 \u5230 i \u7684\u4ee3\u4ef7\u6700\u5c0f\u503c\u3002</p> <p>\u5173\u4e8e\u5982\u4f55\u6c42 dis_i\uff0c\u6211\u4eec\u53ef\u4ee5\u5efa\u56fe\u8dd1\u6700\u77ed\u8def\uff0c\u5bf9 i\\rightarrow i-1 \u5efa\u8fb9\uff0c\u6743\u503c\u4e3a 0\uff0c\u5bf9 i\\rightarrow b_i \u5efa\u8fb9\uff0c\u6743\u503c\u4e3a a_i\u3002\u4e4b\u540e\u901a\u8fc7\u6700\u77ed\u8def\u6c42\u51fa dis_i\uff0c\u7136\u540e\u679a\u4e3e\u7b54\u6848\u5373\u53ef\u3002</p>","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/CF2023B-CF2024D-Skipping-%E9%A2%98%E8%A7%A3/#code","title":"Code","text":"<pre><code>#pragma GCC optimize(1, 2, 3, \"Ofast\", \"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define ll long long\n#define int ll\n#define ONLINE_JUDGE\n#define MULTI_CASES\n#define endl '\\n'\nconst int MaxN = 4e5+100;\nconst int INF = 1e15;\nconst int mod=212370440130137957ll;\nint T=1, N, M;\n// int dis[MaxN];\nvector&lt;pair&lt;int,int&gt;&gt;G1[MaxN];\nstruct Dijkstra{\n    int d[MaxN], vis[MaxN];\n    struct Point {\n        int id, x;\n        inline bool operator&lt;(const Point &amp;aa)const {\n            return x &gt; aa.x;\n        }\n    };\n    priority_queue&lt;Point&gt;q;\n    inline void solve(int S) {\n        for(int i = 1; i &lt;= N; i++) d[i] = INF, vis[i] = 0;\n\n        d[S] = 0;\n        q.push((Point){ S, 0 });\n        while(!q.empty()) {\n            auto [x, w] = q.top(); q.pop();\n            if (vis[x]) continue;\n            vis[x] = 1;\n            for(auto it : G1[x]) {\n                int y = it.first;\n                int z = it.second;\n                if(d[x] + z &lt; d[y]) {\n                    d[y] = d[x] + z;\n                    if(!vis[y])  q.push((Point){ y, d[y] });\n                }\n            }\n        }\n    }\n};\ninline void Solve()\n{\n    cin&gt;&gt;N;\n    // vector&lt;pair&lt;int,int&gt;&gt; G1[MaxN];\n    vector&lt;int&gt;sum(N+1);\n    vector&lt;int&gt;a(N+1);\n    for(int i=1;i&lt;=N;i++){\n        cin&gt;&gt;a[i];\n        sum[i]=sum[i-1]+a[i];\n        if(i!=1)\n            G1[i+1].push_back(make_pair(i,0));\n    }\n    for(int i=1;i&lt;=N;i++){\n        int x;\n        cin&gt;&gt;x;\n        G1[i].push_back(make_pair(x,a[i]));\n    }\n    Dijkstra dij;\n    dij.solve(1);\n    int ans=0;\n    for(int i=1;i&lt;=N;i++){\n        // cout&lt;&lt;dij.d[i]&lt;&lt;\" \";\n        ans=max(ans,sum[i]-dij.d[i]);\n        G1[i].resize(0);\n    }\n    cout&lt;&lt;ans&lt;&lt;endl;\n}\nsigned main()\n{\n#ifndef ONLINE_JUDGE\n    freopen(\".in\", \"r\", stdin);\n    freopen(\".out\", \"w\", stdout);\n#endif\n    ios::sync_with_stdio(0);\n    cin.tie(0),cout.tie(0);\n\n#ifdef MULTI_CASES\n    cin &gt;&gt; T;\n    while (T--)\n#endif\n       Solve();\n    //fclose(stdin);\n    //fclose(stdout);\n    return 0;\n}\n</code></pre>","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/CF2024A-Profitable-Interest-Rate-%E9%A2%98%E8%A7%A3/","title":"CF2024A","text":"","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/CF2024A-Profitable-Interest-Rate-%E9%A2%98%E8%A7%A3/#_1","title":"\u9898\u610f\u7b80\u8ff0","text":"<p>Alice\u6709 a \u679a\u786c\u5e01\uff0c\u5979\u60f3\u8981\u5c06\u786c\u5e01\u5b58\u5165\u94f6\u884c\uff0c\u4f46\u662f\u5f00\u7acb\u5b58\u6b3e\u7684\u6700\u4f4e\u91d1\u989d\u4e3a b\uff0c\u5982\u679c\u91d1\u989d\u4e0d\u8db3\uff0c\u53ef\u4ee5\u82b1\u8d39 x \u4e2a\u786c\u5e01\u4f7f\u5f97\u5b58\u6b3e\u7684\u6700\u4f4e\u91d1\u989d\u51cf\u5c11 2x\u3002\u6c42\u5b58\u5165\u94f6\u884c\u7684\u6700\u5927\u786c\u5e01\u6570\u91cf\u3002</p>","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/CF2024A-Profitable-Interest-Rate-%E9%A2%98%E8%A7%A3/#_2","title":"\u9898\u610f\u5206\u6790","text":"<p>\u663e\u7136\uff0c\u5f53 b\\le a \u65f6\uff0c\u53ef\u4ee5\u76f4\u63a5\u5c06 a \u679a\u786c\u5e01\u5168\u90e8\u5b58\u5165\uff0c\u6240\u4ee5\u76f4\u63a5\u8f93\u51fa a \u5373\u53ef\u3002</p> <p>\u53cd\u4e4b\uff0c\u5f53 b&gt;a \u65f6\uff0c\u6211\u4eec\u9700\u8981\u82b1\u8d39\u786c\u5e01\u964d\u4f4e\u6700\u4f4e\u91d1\u989d\u3002\u4e0d\u96be\u53d1\u73b0\uff0c\u9898\u76ee\u8981\u6c42\u6700\u5927\u503c\uff0c\u4e14\u540c\u65f6\u7b26\u5408\u5355\u8c03\u6027\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e8c\u5206\u7b54\u6848\u6765\u76f4\u63a5\u8ba1\u7b97\u3002\u7b54\u6848\u533a\u95f4\u8868\u793a\u5b58\u5165\u94f6\u884c\u7684\u786c\u5e01\u6570\u91cf ans\uff0c\u901a\u8fc7<code>check</code>\u5224\u65ad ans \u4e0e b-(a-ans)\\times 2 \u7684\u5927\u5c0f\u5173\u7cfb\uff0c\u5982\u679c ans\\ge b-(a-ans)\\times 2\uff0c<code>check</code>\u5224\u65ad\u4e3a<code>true</code>\uff0c\u5c06\u5de6\u8fb9\u754c\u66f4\u65b0\u5373\u53ef\u3002</p>","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/CF2024A-Profitable-Interest-Rate-%E9%A2%98%E8%A7%A3/#code","title":"Code","text":"<pre><code>#pragma GCC optimize(1, 2, 3, \"Ofast\", \"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define ll long long\n#define int ll\n#define ONLINE_JUDGE\n#define MULTI_CASES\n#define endl '\\n'\nconst int MaxN = 2e5+100;\nconst int INF = 1e9;\nconst int mod=212370440130137957ll;\nint T=1, N, M;\nint a[MaxN];\nbool check(int x)\n{\n    if(x&gt;=M-(N-x)*2){\n        return 1;\n    }\n    return 0;\n}\ninline void Solve()\n{\n    cin&gt;&gt;N&gt;&gt;M;\n    if(N&gt;=M){\n        cout&lt;&lt;N&lt;&lt;endl;\n    }\n    else{\n        int l=0,r=N;\n        while(l&lt;r){\n            int mid=(l+r+1)&gt;&gt;1;\n            if(check(mid)){\n                l=mid;\n            }\n            else{\n                r=mid-1;\n            }\n        }\n        cout&lt;&lt;l&lt;&lt;endl;\n    }\n}\nsigned main()\n{\n#ifndef ONLINE_JUDGE\n    freopen(\".in\", \"r\", stdin);\n    freopen(\".out\", \"w\", stdout);\n#endif\n    ios::sync_with_stdio(0);\n    cin.tie(0),cout.tie(0);\n\n#ifdef MULTI_CASES\n    cin &gt;&gt; T;\n    while (T--)\n#endif\n       Solve();\n    //fclose(stdin);\n    //fclose(stdout);\n    return 0;\n}\n</code></pre>","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/CF2024B-Buying-Lemonade-%E9%A2%98%E8%A7%A3/","title":"CF2024B","text":"","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/CF2024B-Buying-Lemonade-%E9%A2%98%E8%A7%A3/#_1","title":"\u9898\u610f\u7b80\u8ff0","text":"<p>\u7ed9\u5b9a n \u4e2a\u6309\u94ae\uff0c\u6bcf\u4e2a\u6309\u94ae\u5bf9\u5e94 a_i \u74f6\u67e0\u6aac\u6c34\uff0c\u4f60\u4e0d\u6e05\u695a\u54ea\u4e2a\u6309\u94ae\u5bf9\u5e94\u54ea\u4e2a a_i\uff0c\u6309\u4e0b\u6309\u94ae\u540e\uff0c\u5982\u679c\u6709\u67e0\u6aac\u6c34\u5c31\u4f1a\u6389\u843d\u4e00\u74f6\uff0c\u53cd\u4e4b\u5219\u6ca1\u6709\u4efb\u4f55\u4e1c\u897f\u3002\u6c42\u81f3\u5c11\u6309\u591a\u5c11\u6b21\u6309\u94ae\u53ef\u4ee5\u4fdd\u8bc1\u81f3\u5c11\u6536\u5230 k \u74f6\u67e0\u6aac\u6c34\u3002</p>","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/CF2024B-Buying-Lemonade-%E9%A2%98%E8%A7%A3/#_2","title":"\u9898\u610f\u5206\u6790","text":"<p>\u9996\u5148\u9898\u76ee\u8981\u6c42\u4fdd\u8bc1\u81f3\u5c11\u6536\u5230 k \u74f6\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u6700\u574f\u7684\u60c5\u51b5\uff1a\u6bcf\u6b21\u9009\u62e9\u4e00\u4e2a\u6309\u94ae\u65f6\u90fd\u4f1a\u9009\u62e9\u5230\u5bb9\u91cf\u6700\u5c11\u7684\u90a3\u4e2a\u3002</p> <p>\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4e0d\u53ef\u907f\u514d\u7684\u6bcf\u4e2a\u6309\u94ae\u591a\u6309\u4e00\u6b21\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u8d2a\u5fc3\u3002\u9996\u5148\u53ef\u4ee5\u5c06 a_i \u6392\u5e8f\uff0c\u7136\u540e\u4ece\u5c0f\u5230\u5927\u4f9d\u6b21\u66f4\u65b0\u83b7\u53d6\u5230\u7684\u67e0\u6aac\u6c34\u6570\u91cf\uff0c\u540c\u65f6\u6bcf\u6b21\u5c06\u64cd\u4f5c\u6b21\u6570\u591a\u52a0 1\u3002\u663e\u7136\u8fd9\u6837\u4e0d\u662f\u6700\u4f18\uff0c\u6240\u4ee5\u5728\u66f4\u65b0\u8fc7\u7a0b\u4e2d\u8003\u8651\uff0c\u7531\u4e8e\u6bcf\u6b21\u8bfb\u53d6\u7684\u90fd\u6bd4\u4e4b\u540e\u7684\u5c0f\uff0c\u6240\u4ee5\u5982\u679c\u5f53\u524d\u7684\u503c\u4e58\u4e0a\u5269\u4f59\u7684\u6309\u94ae\u6570\u91cf\u518d\u52a0\u4e0a\u5df2\u7ecf\u83b7\u5f97\u7684\u67e0\u6aac\u6c34\u6570\u91cf\u4e4b\u548c\u5927\u4e8e\u7b49\u4e8e k\uff0c\u5c31\u76f4\u63a5\u52a0\u4e0a k\uff0c\u51cf\u53bb\u5df2\u83b7\u5f97\u7684\u67e0\u6aac\u6c34\u6570\u91cf\u5c31\u662f\u7b54\u6848\u3002</p> <p>\u5f62\u5f0f\u5316\u7684\u8bf4\uff0c\u8bbe\u64cd\u4f5c\u6b21\u6570\u4e3a cnt\uff0c\u7b54\u6848\u4e3a ans\uff0c</p> <p>\u5219\u5bf9\u4e8e 1\\le i\\le n\uff0c\u82e5ans+(n-i+1)\\times a_i&lt;k,ans=ans+a_i,cnt=cnt+a_i+1\u3002</p> <p>\u82e5 ans+(n-i+1)\\times a_i\\ge k, cnt=cnt+k-ans \u6b64\u65f6\u7684 cnt \u5c31\u662f\u7b54\u6848\u3002</p>","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/CF2024B-Buying-Lemonade-%E9%A2%98%E8%A7%A3/#code","title":"Code","text":"<pre><code>#pragma GCC optimize(1, 2, 3, \"Ofast\", \"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define ll long long\n#define int ll\n#define ONLINE_JUDGE\n#define MULTI_CASES\n#define endl '\\n'\nconst int MaxN = 2e5+100;\nconst int INF = 1e9;\nconst int mod=212370440130137957ll;\nint T=1, N, M;\nint a[MaxN];\ninline void Solve()\n{\n    cin&gt;&gt;N&gt;&gt;M;\n    for(int i=1;i&lt;=N;i++){\n        cin&gt;&gt;a[i];\n    }\n    sort(a+1,a+N+1);\n    if(M&lt;=N){\n        cout&lt;&lt;M&lt;&lt;endl;\n        return;\n    }\n    int ans=0,cnt=0;\n    for(int i=1;i&lt;=N;i++){\n        if(cnt+(N-i+1)*a[i]&gt;=M){\n            ans+=M-cnt;\n            cout&lt;&lt;ans&lt;&lt;endl;return;\n        }\n        cnt+=a[i];\n        ans+=a[i]+1;\n    }\n    cout&lt;&lt;ans&lt;&lt;endl;\n}\nsigned main()\n{\n#ifndef ONLINE_JUDGE\n    freopen(\".in\", \"r\", stdin);\n    freopen(\".out\", \"w\", stdout);\n#endif\n    ios::sync_with_stdio(0);\n    cin.tie(0),cout.tie(0);\n\n#ifdef MULTI_CASES\n    cin &gt;&gt; T;\n    while (T--)\n#endif\n       Solve();\n    //fclose(stdin);\n    //fclose(stdout);\n    return 0;\n}\n</code></pre>","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/CF2024C-Concatenation-of-Arrays-%E9%A2%98%E8%A7%A3/","title":"CF2024C","text":"","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/CF2024C-Concatenation-of-Arrays-%E9%A2%98%E8%A7%A3/#_1","title":"\u9898\u610f\u7b80\u8ff0","text":"<p>\u7ed9\u5b9a n \u4e2a\u4e8c\u7ef4\u6570\u7ec4\uff0c\u6bcf\u4e2a  \u6570\u7ec4\u7684\u957f\u5ea6\u4e3a 2\uff0c\u5c06\u8fd9 n \u4e2a\u6570\u7ec4\u8fde\u63a5\u8d77\u6765\uff0c\u8981\u4f7f\u5f97\u6570\u7ec4\u4e2d\u7684\u9006\u5e8f\u5bf9\u6570\u91cf\u5c3d\u53ef\u80fd\u7684\u5c11\u3002</p>","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/CF2024C-Concatenation-of-Arrays-%E9%A2%98%E8%A7%A3/#_2","title":"\u9898\u610f\u5206\u6790","text":"<p>\u9898\u76ee\u8981\u6c42\u6392\u5217\u6570\u7ec4\u4f7f\u5f97\u9006\u5e8f\u5bf9\u5c3d\u53ef\u80fd\u5c11\uff0c\u5bf9\u4e8e\u5176\u4e2d\u4e00\u4e2a\u6570\u7ec4\uff0c\u5176\u53ef\u80fd\u8d21\u732e\u7684\u9006\u5e8f\u5bf9\u6570\u91cf\u4e3a\u6bd4 a_{i,1} \u5c0f\u7684\u4e2a\u6570 x\uff0c\u52a0\u4e0a\u6bd4 a_{i,2} \u5c0f\u7684\u4e2a\u6570 y\uff0c\u8bbe cnt_i \u4e3a x+y\uff0c\u4e4b\u540e\u53ea\u9700\u8981\u5bf9\u6570\u7ec4 cnt \u6392\u5e8f\u8f93\u51fa\u7ed3\u679c\u5373\u53ef\u3002</p> <p>\u6ce8\u610f\uff0c\u53ea\u8981 a_{i,1} \u548c a_{i,2} \u4e0d\u76f8\u540c\uff0c\u5f97\u51fa\u7684\u7ed3\u679c\u5e94\u8be5\u51cf\u53bb 1\uff0c\u8fd9\u662f\u56e0\u4e3a\u5fc5\u7136\u4f1a\u6709\u4e00\u4e2a\u6570\u6bd4\u53e6\u4e00\u4e2a\u6570\u5c0f\uff0c\u6240\u4ee5\u8981\u6392\u9664\u6389\u3002</p> <p>\u5173\u4e8e\u6c42\u89e3\u6bd4\u5f53\u524d\u6570\u5c0f\u7684\u4e2a\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e8c\u5206\u67e5\u627e\u51fd\u6570<code>lower_bound</code>\u6765\u6c42\u89e3\u3002</p>","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/CF2024C-Concatenation-of-Arrays-%E9%A2%98%E8%A7%A3/#code","title":"Code","text":"<pre><code>#pragma GCC optimize(1, 2, 3, \"Ofast\", \"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define ll long long\n#define int ll\n#define ONLINE_JUDGE\n#define MULTI_CASES\n#define endl '\\n'\nconst int MaxN = 2e5+100;\nconst int INF = 1e9;\nconst int mod=212370440130137957ll;\nint T=1, N, M;\n// int a[MaxN];\nstruct node{\n    int x,y;\n    int id;\n}a[MaxN];\nbool cmp1(node a,node b){\n    return min(a.x,a.y)&lt;min(b.x,b.y);\n}\nbool cmp2(node a,node b){\n    return max(a.x,a.y)&gt;max(b.x,b.y);\n}\nbool cmp(node a,node b){\n    return a.id&lt;b.id;\n}\nint cnt[MaxN];\ninline void Solve()\n{\n    cin&gt;&gt;N;\n    for(int i=1;i&lt;=N;i++){\n        cin&gt;&gt;a[i].x&gt;&gt;a[i].y;\n        a[i].id=i;\n    }\n    vector&lt;int&gt;b;\n    for(int i=1;i&lt;=N;i++){\n        b.push_back(a[i].x);\n        b.push_back(a[i].y);\n    }\n    sort(b.begin(),b.end());\n    for(int i=1;i&lt;=N;i++){\n        if(a[i].x&lt;a[i].y){\n            int x=lower_bound(b.begin(),b.end(),a[i].x)-b.begin();\n            int y=lower_bound(b.begin(),b.end(),a[i].y)-b.begin()-1;\n            cnt[i]=x+y;\n        }   \n        else{\n            if(a[i].x&gt;a[i].y){\n                int x=lower_bound(b.begin(),b.end(),a[i].x)-b.begin()-1;\n                int y=lower_bound(b.begin(),b.end(),a[i].y)-b.begin();\n                cnt[i]=x+y; \n            }\n            else{\n                int x=lower_bound(b.begin(),b.end(),a[i].x)-b.begin();\n                int y=lower_bound(b.begin(),b.end(),a[i].y)-b.begin();\n                cnt[i]=x+y; \n            }\n        }\n    }\n    for(int i=1;i&lt;=N;i++){\n        a[i].id=cnt[i];\n    }\n    sort(a+1,a+N+1,cmp);\n    for(int i=1;i&lt;=N;i++){\n        cout&lt;&lt;a[i].x&lt;&lt;\" \"&lt;&lt;a[i].y&lt;&lt;\" \";\n    }\n    cout&lt;&lt;endl;\n}\nsigned main()\n{\n#ifndef ONLINE_JUDGE\n    freopen(\".in\", \"r\", stdin);\n    freopen(\".out\", \"w\", stdout);\n#endif\n    ios::sync_with_stdio(0);\n    cin.tie(0),cout.tie(0);\n\n#ifdef MULTI_CASES\n    cin &gt;&gt; T;\n    while (T--)\n#endif\n       Solve();\n    //fclose(stdin);\n    //fclose(stdout);\n    return 0;\n}\n</code></pre>","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/Codeforces-Round-1003-Div-4%EF%BC%89%E9%A2%98%E8%A7%A3/","title":"Codeforces Round 1003 (Div. 4)\u9898\u89e3","text":"","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/Codeforces-Round-1003-Div-4%EF%BC%89%E9%A2%98%E8%A7%A3/#a","title":"A","text":"<p>\u5b57\u7b26\u4e32\u6c34\u9898</p>","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/Codeforces-Round-1003-Div-4%EF%BC%89%E9%A2%98%E8%A7%A3/#code","title":"Code","text":"<pre><code>#pragma GCC optimize(1, 2, 3, \"Ofast\", \"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define ll long long\n#define int ll\n#define ONLINE_JUDGE\n#define MULTI_CASES\n#define endl '\\n'\nconst int MaxN = 2e5+100;\nconst int INF = 1e9;\nconst int mod=212370440130137957ll;\nint T=1, N, M;\nint a[MaxN];\ninline void Solve()\n{\n    string s;\n    cin&gt;&gt;s;\n    s.erase(s.size()-2,2);\n    cout&lt;&lt;s&lt;&lt;\"i\"&lt;&lt;endl;\n}\nsigned main()\n{\n#ifndef ONLINE_JUDGE\n    freopen(\".in\", \"r\", stdin);\n    freopen(\".out\", \"w\", stdout);\n#endif\n    ios::sync_with_stdio(0);\n    cin.tie(0),cout.tie(0);\n\n#ifdef MULTI_CASES\n    cin &gt;&gt; T;\n    while (T--)\n#endif\n       Solve();\n    //fclose(stdin);\n    //fclose(stdout);\n    return 0;\n}\n</code></pre>","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/Codeforces-Round-1003-Div-4%EF%BC%89%E9%A2%98%E8%A7%A3/#b","title":"B","text":"","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/Codeforces-Round-1003-Div-4%EF%BC%89%E9%A2%98%E8%A7%A3/#_1","title":"\u9898\u610f\u7b80\u8ff0","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 s\uff0c\u6bcf\u6b21\u64cd\u4f5c\uff0c\u53ef\u4ee5\u9009\u62e9\u4e00\u4e2a\u7d22\u5f15 i\uff081\\le i\\le \\lvert s \\rvert-1\uff09\uff0c\u4e14 s_i=s_{i+1}\uff0c\u7136\u540e\u5c06\u8fd9\u4e24\u4e2a\u5b57\u7b26\u66f4\u6539\u4e3a\u4efb\u610f\u4e00\u4e2a\u5b57\u6bcd\u3002\u6c42\u591a\u6b21\u64cd\u4f5c\u540e\u53ef\u4ee5\u8fbe\u5230\u7684\u6700\u5c0f\u957f\u5ea6\u3002</p>","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/Codeforces-Round-1003-Div-4%EF%BC%89%E9%A2%98%E8%A7%A3/#_2","title":"\u9898\u76ee\u5206\u6790","text":"<p>\u4e0d\u96be\u53d1\u73b0\uff0c\u53ea\u8981\u5b57\u7b26\u4e32\u4e2d\u5b58\u5728 s_i=s_{i+1}\uff0c\u5c31\u53ef\u4ee5\u91cd\u590d\u5220\u9664\u5b57\u7b26\u5e76\u66f4\u6539\u4e3a\u76f8\u90bb\u5b57\u7b26\u3002\u6700\u540e\u7684\u957f\u5ea6\u4e00\u5b9a\u4e3a 1\u3002</p>","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/Codeforces-Round-1003-Div-4%EF%BC%89%E9%A2%98%E8%A7%A3/#code_1","title":"Code","text":"<pre><code>#pragma GCC optimize(1, 2, 3, \"Ofast\", \"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define ll long long\n#define int ll\n#define ONLINE_JUDGE\n#define MULTI_CASES\n#define endl '\\n'\nconst int MaxN = 2e5+100;\nconst int INF = 1e9;\nconst int mod=212370440130137957ll;\nint T=1, N, M;\nint a[MaxN];\ninline void Solve()\n{\n    string s;\n    cin&gt;&gt;s;\n    for(int i=0;i&lt;s.size()-1;i++){\n        if(s[i]==s[i+1]){\n            cout&lt;&lt;1&lt;&lt;endl;\n            return;\n        }\n    }\n    cout&lt;&lt;s.size()&lt;&lt;endl;\n}\nsigned main()\n{\n#ifndef ONLINE_JUDGE\n    freopen(\".in\", \"r\", stdin);\n    freopen(\".out\", \"w\", stdout);\n#endif\n    ios::sync_with_stdio(0);\n    cin.tie(0),cout.tie(0);\n\n#ifdef MULTI_CASES\n    cin &gt;&gt; T;\n    while (T--)\n#endif\n       Solve();\n    //fclose(stdin);\n    //fclose(stdout);\n    return 0;\n}\n</code></pre>","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/Codeforces-Round-1003-Div-4%EF%BC%89%E9%A2%98%E8%A7%A3/#c1c2","title":"C1/C2","text":"","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/Codeforces-Round-1003-Div-4%EF%BC%89%E9%A2%98%E8%A7%A3/#_3","title":"\u9898\u610f\u7b80\u8ff0","text":"<p>\u7ed9\u5b9a\u957f\u5ea6\u5206\u522b\u4e3a n,m \u7684\u6570\u7ec4 a,b\uff0c\u5bf9\u4e8e a \u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\uff0c\u6700\u591a\u53ef\u4ee5\u6267\u884c\u4e00\u6b21\u64cd\u4f5c\u3002</p> <ul> <li>\u9009\u62e9\u4e00\u4e2a\u6574\u6570 j\uff081\\le j\\le m\uff09\uff0c\u4f7f\u5f97 a_i:=b_j-a_i\u3002</li> </ul> <p>\u6c42\u662f\u5426\u5728\u82e5\u5e72\u6b21\u64cd\u4f5c\u540e\uff0c\u6570\u7ec4 a \u53ef\u4ee5\u6309\u975e\u9012\u51cf\u987a\u5e8f\u6392\u5e8f\u3002</p> <p>C1\u8981\u6c42 m=1\uff0cC2\u8981\u6c42 1\\le m \\le 2\\times 10^5\u3002</p>","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/Codeforces-Round-1003-Div-4%EF%BC%89%E9%A2%98%E8%A7%A3/#_4","title":"\u9898\u76ee\u5206\u6790","text":"","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/Codeforces-Round-1003-Div-4%EF%BC%89%E9%A2%98%E8%A7%A3/#c1","title":"C1","text":"<p>\u8003\u8651\u8d2a\u5fc3\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4f4d\u6570\u5b57\uff0c\u8981\u5c3d\u53ef\u80fd\u4fdd\u8bc1\u524d\u4e00\u4e2a\u6570\u5c0f\u4e8e\u7b49\u4e8e\u540e\u4e00\u4e2a\u6570\uff0c\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6570\u90fd\u8981\u5728\u7b26\u5408\u6761\u4ef6\u7684\u60c5\u51b5\u4e0b\u5c3d\u53ef\u80fd\u5c0f\uff0c\u800c\u56e0\u4e3a m=1\uff0c\u6240\u4ee5\u5bf9\u4e8e\u6bcf\u4e00\u4f4d\u6570 a_i \u5c06\u5176\u4e0e b_0-a_i \u6bd4\u5927\u5c0f\uff0c\u5728\u4fdd\u8bc1\u6bd4\u4e0a\u4e00\u4e2a\u6570\u5927\u7684\u6761\u4ef6\u4e0b\uff0c\u9009\u62e9\u66f4\u5c0f\u7684\u90a3\u4e2a\u5373\u53ef\u3002\u5982\u679c\u5f53\u524d\u6570\u65e0\u8bba\u5982\u4f55\u64cd\u4f5c\u90fd\u65e0\u6cd5\u6ee1\u8db3\uff0c\u5219\u8bf4\u660e\u4e0d\u53ef\u4ee5\u5b9e\u73b0\u3002</p>","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/Codeforces-Round-1003-Div-4%EF%BC%89%E9%A2%98%E8%A7%A3/#c2","title":"C2","text":"<p>\u5728C1\u7684\u57fa\u7840\u4e0a\uff0c\u4f9d\u7136\u8003\u8651\u8d2a\u5fc3\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4f4d\u6570\u5b57\uff0c\u4ecd\u7136\u53ef\u4ee5\u904d\u5386\u6570\u7ec4 b\uff0c\u4f7f\u5176\u5728\u7b26\u5408\u6761\u4ef6\u7684\u60c5\u51b5\u4e0b\u6700\u5c0f\u3002\u590d\u6742\u5ea6 O(N^2)\u3002</p> <p>\u8003\u8651\u4f18\u5316\uff0c\u9898\u76ee\u8981\u6c42 a_{i-1}\\le \\min(a_i,b_j-a_i),(1\\le j\\le m)\uff0c\u590d\u6742\u5ea6\u74f6\u9888\u5728\u904d\u5386 b \u6570\u7ec4\u4e0a\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e8c\u5206\u67e5\u627e\uff0c\u627e\u5230 b \u6570\u7ec4\u4e2d\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e a_{i-1}+a_i \u7684\u503c\u5e76\u5c06\u5176\u66ff\u6362 a_i\uff0c\u5982\u679c\u8fd9\u4e2a\u503c\u6bd4\u6570\u7ec4\u4e2d\u7684\u6240\u6709\u503c\u90fd\u5927\uff0c\u90a3\u4e48\u5219\u65e0\u6cd5\u5b9e\u73b0\u3002</p>","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/Codeforces-Round-1003-Div-4%EF%BC%89%E9%A2%98%E8%A7%A3/#code_2","title":"Code","text":"","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/Codeforces-Round-1003-Div-4%EF%BC%89%E9%A2%98%E8%A7%A3/#c1_1","title":"C1","text":"<pre><code>#pragma GCC optimize(1, 2, 3, \"Ofast\", \"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define ll long long\n#define int ll\n#define ONLINE_JUDGE\n#define MULTI_CASES\n#define endl '\\n'\nconst int MaxN = 2e5+100;\nconst int INF = 1e9;\nconst int mod=212370440130137957ll;\nint T=1, N, M;\nint a[MaxN];\ninline void Solve()\n{\n    cin&gt;&gt;N&gt;&gt;M;\n    for(int i=1;i&lt;=N;i++){\n        cin&gt;&gt;a[i];\n    }\n    int cnt;\n    cin&gt;&gt;cnt;\n    int las=-INF;\n    for(int i=1;i&lt;=N;i++){\n        int x=cnt-a[i];\n        if(x&lt;=a[i]){\n            if(x&gt;=las){\n                las=x;\n            }\n            else{\n                if(a[i]&gt;=las){\n                    las=a[i];\n                }\n                else{\n                    puts(\"NO\");\n                    return ;\n                }\n            }\n        }\n        else{\n            if(a[i]&gt;=las){\n                las=a[i];\n            }\n            else{\n                if(x&gt;=las){\n                    las=x;\n                }\n                else{\n                    puts(\"NO\");\n                    return ;\n                }\n            }\n        }\n    }\n    puts(\"YES\");\n}\nsigned main()\n{\n#ifndef ONLINE_JUDGE\n    freopen(\".in\", \"r\", stdin);\n    freopen(\".out\", \"w\", stdout);\n#endif\n    ios::sync_with_stdio(0);\n    cin.tie(0),cout.tie(0);\n\n#ifdef MULTI_CASES\n    cin &gt;&gt; T;\n    while (T--)\n#endif\n       Solve();\n    //fclose(stdin);\n    //fclose(stdout);\n    return 0;\n}\n</code></pre>","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/Codeforces-Round-1003-Div-4%EF%BC%89%E9%A2%98%E8%A7%A3/#c2_1","title":"C2","text":"<pre><code>#pragma GCC optimize(1, 2, 3, \"Ofast\", \"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define ll long long\n#define int ll\n#define ONLINE_JUDGE\n#define MULTI_CASES\n#define endl '\\n'\nconst int MaxN = 2e5 + 100;\nconst int INF = 1e9;\nconst int mod = 212370440130137957ll;\nint T = 1, N, M;\nint a[MaxN];\ninline void Solve()\n{\n    cin &gt;&gt; N &gt;&gt; M;\n    for (int i = 1; i &lt;= N; i++)\n    {\n        cin &gt;&gt; a[i];\n    }\n    vector&lt;int&gt; b;\n    for (int i = 1; i &lt;= M; i++)\n    {\n        int x;\n        cin &gt;&gt; x;\n        b.push_back(x);\n    }\n    sort(b.begin(), b.end());\n    int las = a[1];\n    for (int i = 0; i &lt; M; i++)\n    {\n        las = min(las, b[i] - a[1]);\n    }\n    // cerr&lt;&lt;las&lt;&lt;endl;\n    for (int i = 2; i &lt;= N; i++)\n    {\n        int minn = INF;\n        if (a[i] &gt;= las)\n        {\n            minn = a[i];\n        }\n        auto x = lower_bound(b.begin(), b.end(), a[i] + las);\n        if (x == b.end())\n        {\n            if (minn == INF)\n            {\n                puts(\"NO\");\n                return;\n            }\n            else\n            {\n                las = minn;\n            }\n        }\n        else\n        {\n            int cnt = x - b.begin();\n            las = min(minn, b[cnt] - a[i]);\n        }\n        // cerr&lt;&lt;las&lt;&lt;\" \";\n    }\n    puts(\"YES\");\n}\nsigned main()\n{\n#ifndef ONLINE_JUDGE\n    freopen(\".in\", \"r\", stdin);\n    freopen(\".out\", \"w\", stdout);\n#endif\n    ios::sync_with_stdio(0);\n    cin.tie(0), cout.tie(0);\n\n#ifdef MULTI_CASES\n    cin &gt;&gt; T;\n    while (T--)\n#endif\n        Solve();\n    // fclose(stdin);\n    // fclose(stdout);\n    return 0;\n}\n</code></pre>","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/Codeforces-Round-1003-Div-4%EF%BC%89%E9%A2%98%E8%A7%A3/#d","title":"D","text":"","tags":["\u9898\u89e3","CF"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/Luogu-P11361-%E9%A2%98%E8%A7%A3/","title":"P11361 [NOIP2024] \u7f16\u8f91\u5b57\u7b26\u4e32 \u9898\u89e3","text":"","tags":["\u9898\u89e3","Luogu","\u8d2a\u5fc3"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/Luogu-P11361-%E9%A2%98%E8%A7%A3/#_1","title":"\u9898\u610f\u5206\u6790","text":"<p>\u6839\u636e\u9898\u610f\uff0c\u8003\u8651\u8d2a\u5fc3\u505a\u6cd5\uff0c\u5373\u6bcf\u4e00\u4f4d\u5c3d\u53ef\u80fd\u5339\u914d\u4e0a\uff0c\u8fd9\u4e2a\u7b56\u7565\u663e\u7136\u6b63\u786e\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u6bcf\u4e00\u4f4d\u6765\u8bf4\uff0c\u5f53\u524d\u4f4d\u5339\u914d\u81f3\u591a\u5bfc\u81f4\u540e\u9762\u7684\u4e00\u5bf9\u65e0\u6cd5\u5339\u914d\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c06\u5b57\u7b26\u4e32\u6309\u65e0\u6cd5\u4ea4\u6362\u7684\u5b57\u7b26\u4e3a\u754c\uff0c\u5206\u5272\u4e3a\u591a\u4e2a\u5757\uff0c\u5206\u522b\u5bf9\u4e8e\u6bcf\u4e00\u5757\u8fdb\u884c\u64cd\u4f5c\u3002</p> <p>\u4e00\u79cd\u505a\u6cd5\u4e3a\uff0c\u5148\u9884\u5904\u7406\u51fa\u6bcf\u4e00\u4f4d\u5b57\u7b26\u6240\u5728\u7684\u5757\u7684\u7f16\u53f7\uff0c\u5e76\u9884\u5904\u7406\u51fa\u6bcf\u4e00\u4e2a\u5757\u4e2d\uff0c<code>1</code>\u548c<code>0</code>\u7684\u4e2a\u6570\u3002\u7136\u540e\u904d\u5386\u5b57\u7b26\u4e32\uff0c\u5982\u679c\u5f53\u524d\u5b57\u7b26\u6240\u5728\u7684\u4e24\u4e2a\u5757\u4e2d\uff0c\u6709\u76f8\u540c\u7684\u5b57\u7b26\uff0c\u5219\u5c06\u4e24\u4e2a\u5757\u4e2d\u5bf9\u5e94\u5b57\u7b26\u7684\u4e2a\u6570\u51cf\u4e00\uff1b\u5982\u679c\u6ca1\u6709\uff0c\u5219\u5c06\u5f53\u524d\u4f4d\u7684\u4e24\u4e2a\u5b57\u7b26\u51cf\u53bb\u3002\u8fc7\u7a0b\u4e2d\u7edf\u8ba1\u7b54\u6848\u5373\u53ef\u3002</p>","tags":["\u9898\u89e3","Luogu","\u8d2a\u5fc3"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/Luogu-P11361-%E9%A2%98%E8%A7%A3/#code","title":"Code","text":"<pre><code>// #pragma GCC optimize(1, 2, 3, \"Ofast\", \"inline\")\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define ll long long\n#define int ll\n#define ONLINE_JUDGE\n#define MULTI_CASES\n#define endl '\\n'\nconst int MaxN = 2e5 + 100;\nconst int INF = 1e9;\nconst int mod = 212370440130137957ll;\nint T = 1, N, M;\n// int a[MaxN];\nint cnt1[MaxN], cnt2[MaxN];\npair&lt;int, int&gt; q1[MaxN], q2[MaxN];\ninline void Solve()\n{\n    cin &gt;&gt; N;\n    string s1, s2, a, b;\n    memset(cnt1, 0, sizeof cnt1);\n    memset(cnt2, 0, sizeof cnt2);\n    memset(q1, 0, sizeof q1);\n    memset(q2, 0, sizeof q2);\n    int pos = 1;\n    cnt1[0] = 1;\n    cin &gt;&gt; s1 &gt;&gt; s2 &gt;&gt; a &gt;&gt; b;\n    for (int i = 1; i &lt; N; i++)\n    {\n        if (a[i] == a[i - 1] &amp;&amp; a[i] == '1')\n        {\n            cnt1[i] = pos;\n        }\n        else\n        {\n            pos++;\n            cnt1[i] = pos;\n        }\n        if (s1[i] == '1')\n        {\n            q1[cnt1[i]].first++;\n        }\n        else\n        {\n            q1[cnt1[i]].second++;\n        }\n    }\n    pos = 1;\n    cnt2[0] = 1;\n    for (int i = 1; i &lt; N; i++)\n    {\n        if (b[i] == b[i - 1] &amp;&amp; b[i] == '1')\n        {\n            cnt2[i] = pos;\n        }\n        else\n        {\n            pos++;\n            cnt2[i] = pos;\n        }\n        if (s2[i] == '1')\n        {\n            q2[cnt2[i]].first++;\n        }\n        else\n        {\n            q2[cnt2[i]].second++;\n        }\n    }\n    if (s1[0] == '1')\n    {\n        q1[cnt1[0]].first++;\n    }\n    else\n    {\n        q1[cnt1[0]].second++;\n    }\n    if (s2[0] == '1')\n    {\n        q2[cnt2[0]].first++;\n    }\n    else\n    {\n        q2[cnt2[0]].second++;\n    }\n    int sum = 0;\n    for (int i = 0; i &lt; N; i++)\n    {\n        // cerr &lt;&lt; cnt1[i] &lt;&lt; \" \" &lt;&lt; cnt2[i] &lt;&lt; endl;\n\n        // cerr &lt;&lt; q1[cnt1[i]].first &lt;&lt; \" \" &lt;&lt; q2[cnt2[i]].first &lt;&lt; \" \";\n        // cerr &lt;&lt; q1[cnt1[i]].second &lt;&lt; \" \" &lt;&lt; q2[cnt2[i]].second &lt;&lt; endl;\n\n        if (q1[cnt1[i]].first &gt; 0 &amp;&amp; q2[cnt2[i]].first &gt; 0)\n        {\n            q1[cnt1[i]].first--;\n            q2[cnt2[i]].first--;\n            sum++;\n            continue;\n        }\n        if (q1[cnt1[i]].second &gt; 0 &amp;&amp; q2[cnt2[i]].second &gt; 0)\n        {\n            q1[cnt1[i]].second--;\n            q2[cnt2[i]].second--;\n            sum++;\n            continue;\n        }\n        if (q1[cnt1[i]].first)\n        {\n            q1[cnt1[i]].first--;\n            q2[cnt2[i]].second--;\n            continue;\n        }\n        if (q1[cnt1[i]].second)\n        {\n            q1[cnt1[i]].second--;\n            q2[cnt2[i]].first--;\n        }\n    }\n    cout &lt;&lt; sum &lt;&lt; endl;\n}\nsigned main()\n{\n#ifndef ONLINE_JUDGE\n    freopen(\".in\", \"r\", stdin);\n    freopen(\".out\", \"w\", stdout);\n#endif\n    ios::sync_with_stdio(0);\n    cin.tie(0), cout.tie(0);\n\n#ifdef MULTI_CASES\n    cin &gt;&gt; T;\n    while (T--)\n#endif\n        Solve();\n    // fclose(stdin);\n    // fclose(stdout);\n    return 0;\n}\n</code></pre>","tags":["\u9898\u89e3","Luogu","\u8d2a\u5fc3"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/Luogu-P1570-%E9%A2%98%E8%A7%A3/","title":"P1570 \u9898\u89e3","text":"","tags":["\u9898\u89e3","Luogu","\u4e8c\u5206"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/Luogu-P1570-%E9%A2%98%E8%A7%A3/#_1","title":"\u9898\u76ee\u5206\u6790","text":"<p>\u521a\u5f00\u59cb\u505a\u8fd9\u9053\u9898\u53ef\u80fd\u6ca1\u4ec0\u4e48\u601d\u8def\uff0c\u6240\u4ee5\u6211\u4eec\u5148\u4ece\u5f0f\u5b50\u5165\u624b\uff1a</p> <p>\u5047\u8bbe\u5b58\u5728\u6700\u4f18\u89e3ans\uff1aans=\\frac{\\sum v_i}{\\sum c_i}</p> <p>\u8f6c\u5316\u5f97 ans\\times\\sum c_i=\\sum v_i</p> <p>\u79fb\u9879\u5f97 ans\\times \\sum c_i-\\sum v_i=0</p> <p>\u53ef\u89c1\uff0c\u5f53\u5f0f\u5b50\u7684\u7ed3\u679c\u8d8b\u5411 $ 0$ \u65f6\uff0cans\u662f\u6700\u4f18\u89e3\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8bbe f(ans)=ans\\times\\sum c_i-\\sum v_i</p> <p>\u663e\u7136\uff0cf(ans)\u662f\u4e00\u4e2a\u4e00\u6b21\u51fd\u6570\uff0c\u5177\u6709\u5355\u8c03\u6027\u3002\u8fd9\u4e2a\u65f6\u5019\u5c31\u4f1a\u60f3\u5230\u53ef\u4ee5\u4f7f\u7528\u4e8c\u5206\u7b54\u6848\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002</p> <p>\u65e2\u7136\u4f7f\u7528\u4e8c\u5206\u7b54\u6848\u6765\u89e3\u51b3\uff0c\u9996\u5148\u5e94\u8be5\u8003\u8651\u8fb9\u754c\u95ee\u9898\uff0c\u8fd9\u9053\u9898\u7684\u8fb9\u754c\u6bd4\u8f83\u597d\u8bbe\u5b9a\uff0c\u5de6\u7aef\u70b9\u663e\u7136\u4e3a$ 0\uff0c\u800c\u53f3\u7aef\u70b9\u7684\u8bbe\u5b9a\uff0c\u6211\u4eec\u79c9\u6301\u7740\u4e0d\u6015\u5927\u53ea\u6015\u5c0f\u7684\u539f\u5219\uff0c\u53ef\u4ee5\u5c06\u5176\u8bbe\u5b9a\u4e3a\\sum v_i$\u3002</p> <p>\u7136\u540e\u8003\u8651check\u51fd\u6570\u95ee\u9898\uff0c\u601d\u8003\u4e4b\u540e\u53ef\u4ee5\u53d1\u73b0\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5224\u65ad\u5728ans\u786e\u5b9a\u7684\u60c5\u51b5\u4e0b\uff0c\u6700\u4f18\u7684\u53d6\u6cd5\u3002\u6240\u4ee5\u8003\u8651\u8d2a\u5fc3\uff0c\u628a\u6bcf\u79cd\u8c03\u6599\u7684f(ans)\u8ba1\u7b97\u51fa\u6765\uff0c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u4e4b\u540e\u53d6\u524dm\u4e2a\u8c03\u6599\u7684\u4e00\u6b21\u51fd\u6570\u503c\u5e76\u7d2f\u52a0\u3002\u8ba1\u7b97\u4e4b\u540e\u7684\u6570\u503c\u4e0e\u96f6\u76f8\u6bd4\u8f83\uff0c\u5982\u679c\u5c0f\u4e8e\u96f6\u7684\u8bdd\uff0c\u8bf4\u660eans\u8fd8\u53ef\u4ee5\u66f4\u5927\uff0c\u53cd\u4e4b\u5219\u5e94\u8be5\u66f4\u5c0f\u3002</p> <p>\u5230\u8fd9\u91cc\uff0c\u8fd9\u9053\u9898\u76ee\u5c31ac\u4e86\uff0c\u8981\u6ce8\u610f\u597d\u7ec6\u8282\u95ee\u9898\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n#define int long long \nint n,m,cnt=0;;\nstruct coffee{\n    int v,c;\n    double tot;\n}a[10010];\nvoid read(){\n    cin&gt;&gt;n&gt;&gt;m;\n    for(int i=1;i&lt;=n;i++){\n        cin&gt;&gt;a[i].v;cnt+=a[i].v;\n    }\n    for(int i=1;i&lt;=n;i++){\n        cin&gt;&gt;a[i].c;\n    }\n}\nbool cmp(coffee a,coffee b){\n    return a.tot&lt;b.tot;\n}\nbool check(double x){\n    for(int i=1;i&lt;=n;i++){\n        a[i].tot=x*a[i].c-a[i].v;\n    }\n    double sum=0;\n    sort(a+1,a+n+1,cmp);\n    for(int i=1;i&lt;=m;i++){\n        sum+=a[i].tot;\n    }\n    return sum&lt;=0;\n}\ndouble search(){\n    double l=0,r=cnt;\n    while(r-l&gt;=1e-5){\n        double mid=(l+r)/2.0;\n        //cout&lt;&lt;mid&lt;&lt;endl;\n        if(check(mid)){\n            l=mid;\n        }\n        else{\n            r=mid;\n        }\n    }\n    return l;\n}\nsigned main(){\n    read();\n    double ans=search();\n    printf(\u201c%.3lf\u201d,ans);\n    return 0;\n}\n</code></pre>","tags":["\u9898\u89e3","Luogu","\u4e8c\u5206"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/Luogu-P5686-%E9%A2%98%E8%A7%A3/","title":"\u9898\u76ee\u5206\u6790","text":"","tags":["\u9898\u89e3","Luogu","\u524d\u7f00\u548c"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/Luogu-P5686-%E9%A2%98%E8%A7%A3/#40pts","title":"40pts\u505a\u6cd5","text":"<p>40 \u5206\u505a\u6cd5\u5341\u5206\u7b80\u5355\uff0c\u5c06\u5f0f\u5b50\u4ee3\u5165\u6a21\u62df\u5373\u53ef\uff0c\u590d\u6742\u5ea6 O(n^3)\u3002</p>","tags":["\u9898\u89e3","Luogu","\u524d\u7f00\u548c"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/Luogu-P5686-%E9%A2%98%E8%A7%A3/#70pts","title":"70pts\u505a\u6cd5","text":"<p>\u6211\u4eec\u53ef\u4ee5\u89c2\u5bdf\u5230\uff0cS(l,r) \u7684\u503c\u53ef\u4ee5\u901a\u8fc7\u524d\u7f00\u548c\u9884\u5904\u7406\uff0c\u4ece\u800c\u964d\u4f4e\u65f6\u95f4\u590d\u6742\u5ea6\u81f3 O(n^2)\u3002</p>","tags":["\u9898\u89e3","Luogu","\u524d\u7f00\u548c"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/Luogu-P5686-%E9%A2%98%E8%A7%A3/#100pts","title":"100pts\u505a\u6cd5","text":"<p>\u901a\u8fc7\u4f8b\u5b50\u6765\u89e3\u91ca\uff1a</p> <p>\u5f53 n=3 \u65f6\uff1a</p> \\sum_{l=1}^{n}\\sum_{r=l}^{n}S(l,r)=S(1,1)+s(1,2)+S(1,3)+S(2,2)+S(2,3)+S(3,3) <p>S(1,1) = A_1\\times B_1</p> <p>S(1,2) = A_2\\times B_2</p> <p>S(1,3) = A_3\\times B_3</p> <p>S(2,2) = (A_2 - A_1)\\times (B_2-B_1)</p> <p>S(2,3) = (A_3 - A_1)\\times (B_3-B_1)</p> <p>S(3,3) = (A_3 - A_2)\\times (B_3-B_2)</p> <p>\u6211\u4eec\u5c06\u5176\u5168\u90e8\u76f8\u52a0\uff0c\u7ecf\u8fc7\u5316\u7b80\u53ef\u5f97\u6700\u7ec8\u5f0f\u5b50:</p> \\sum_{l=1}^{n}\\sum_{r=l}^{n}S(l,r)=(n+1)\\sum_{i=1}^{N}(A_i\\times B_i)-\\sum_{i=1}^{n}A_i\\times\\sum_{i=1}^{n}B_i","tags":["\u9898\u89e3","Luogu","\u524d\u7f00\u548c"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/Luogu-P9455-%E5%85%A5%E9%97%A8%E8%B5%9B-14-%E5%A1%94%E5%8F%B0%E8%B6%85%E9%A2%91-Hard-Version-%E9%A2%98%E8%A7%A3/","title":"Luogu-P9455-\u5165\u95e8\u8d5b-14-\u5854\u53f0\u8d85\u9891-Hard-Version-\u9898\u89e3","text":"<p>\u770b\u5230\u8ba8\u8bba\u533a\u90fd\u662f\u4e8c\u5206\uff0c\u5b9e\u9645\u4e0a\u8fd9\u9053\u9898\u7528\u8d2a\u5fc3\u6765\u5199\u975e\u5e38\u7b80\u5355</p>","tags":["\u9898\u89e3","Luogu"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/Luogu-P9455-%E5%85%A5%E9%97%A8%E8%B5%9B-14-%E5%A1%94%E5%8F%B0%E8%B6%85%E9%A2%91-Hard-Version-%E9%A2%98%E8%A7%A3/#_1","title":"\u9898\u76ee\u5206\u6790","text":"<p>\u9996\u5148\u5c06\u5f53\u524d\u5854\u53f0\u7684\u4f4d\u7f6e\u52a0\u4e0a\u901a\u8baf\u8ddd\u79bb\uff08\u5373 a+b \uff09\u770b\u4f5c\u4e3a\u53f3\u8fb9\u754c\uff0c\u901a\u8fc7\u9898\u76ee\u4e0d\u96be\u5f97\u51fa\u4e00\u4e2a\u8d2a\u5fc3\u7b56\u7565\uff1a\u5982\u679c\u5f53\u524d\u5854\u53f0 i \u80fd\u5230\u8fbe\u7684\u6700\u53f3\u8fb9\u754c\u6bd4\u5f80\u540e\u7684\u5854\u53f0 i+m \u4f4d\u7f6e\u8fd8\u8981\u9760\u53f3\uff0c\u5c31\u53ef\u4ee5\u5ffd\u7565\u5854\u53f0 i+1 \u5230 i+m\u3002\u8f6c\u5316\u4e00\u4e0b\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6bcf\u6b21\u8bb0\u5f55\u53ef\u4ee5\u5230\u8fbe\u7684\u6700\u53f3\u8fb9\u754c\uff0c\u5982\u679c\u5f53\u524d\u5854\u53f0\u7684\u4f4d\u7f6e\u4e0d\u5728\u6700\u53f3\u8fb9\u754c\u7684\u8303\u56f4\u5185\uff0c\u5c31\u53ef\u4ee5\u66f4\u65b0\u7b54\u6848\u53d6\u8d85\u9891\u7684\u6700\u5927\u503c\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 ans \u6765\u50a8\u5b58\u7b54\u6848\uff0cr \u4f5c\u4e3a\u6700\u53f3\u8fb9\u754c\uff0c\u8ba1\u7b97\u8fc7\u7a0b\u5c31\u662f\uff1a</p> <pre><code>if(a[i]&gt;r)\n{\n    k=max(a[i]-r,k);\n}\nr=max(r,a+b);\n</code></pre> <p>\u56e0\u4e3a\u662f\u9010\u4e2a\u5904\u7406\uff0c\u6240\u4ee5\u5728\u8f93\u5165\u65f6\u5c31\u53ef\u4ee5\u5b8c\u6210\u8ba1\u7b97\uff0c\u4ee3\u7801\u91cf\u6781\u5c11\u3002</p>","tags":["\u9898\u89e3","Luogu"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/Luogu-P9455-%E5%85%A5%E9%97%A8%E8%B5%9B-14-%E5%A1%94%E5%8F%B0%E8%B6%85%E9%A2%91-Hard-Version-%E9%A2%98%E8%A7%A3/#code","title":"Code","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nint a, b, c, n, r, ans;\nint main(){\n    cin &gt;&gt; n;\n    for (int i=0;i&lt;n;i++){\n        cin&gt;&gt;a&gt;&gt;b;\n        if(a&gt;r&amp;&amp;i){\n            ans=max(ans,a-r);\n        }\n        r=max(r,a+b);\n    }\n    cout&lt;&lt;ans;\n    return 0;\n}\n</code></pre>","tags":["\u9898\u89e3","Luogu"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/P9586-%E6%B8%B8%E6%88%8F-%E9%A2%98%E8%A7%A3/","title":"P9586 \u6e38\u620f \u9898\u89e3","text":"","tags":["\u9898\u89e3","Luogu"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/P9586-%E6%B8%B8%E6%88%8F-%E9%A2%98%E8%A7%A3/#_1","title":"\u5206\u6790","text":"<p>\u4e00\u9053\u7b80\u5355\u7684\u6a21\u62df\u9898\uff0c\u8003\u573a\u5f88\u5feb\u60f3\u51fa\u6b63\u89e3\u3002</p> <p>\u7136\u540e\u8003\u8651\u5c0fC\u83b7\u80dc\u7684\u60c5\u51b5\uff1a\u5c0fC\u60f3\u8981\u83b7\u80dc\uff0c\u4f5c\u4e3a\u5148\u624b\uff0c\u53ea\u6709\u81ea\u5df1\u7684\u6740\u6bd4\u5c0fD\u7684\u95ea\u8981\u591a\uff0c\u6216\u8005\u81ea\u5df1\u7684\u65a9\u6bd4\u5c0fD\u7684\u6740\u8981\u591a\u65f6.\u4ed6\u662f\u4e00\u5b9a\u80fd\u83b7\u80dc\u7684\u3002\u5373 sha_1&gt;shan_2 \u6216 zhan_1&gt;sha_2 \u65f6\uff0c\u5c0fC\u83b7\u80dc\u3002</p> <p>\u9996\u5148\u5206\u6790\u9898\u610f\uff0c\u4e0d\u96be\u53d1\u73b0\uff1a\u6740\u4e0e\u95ea\u662f\u514b\u5236\u5173\u7cfb\uff0c\u65a9\u548c\u6740\u662f\u514b\u5236\u5173\u7cfb\u3002</p> <p>\u63a5\u4e0b\u6765\u8003\u8651\u5c0fD\u83b7\u80dc\u7684\u60c5\u51b5\uff1a\u5728\u5c0fC\u7b2c\u4e00\u8f6e\u4e0d\u80fd\u83b7\u80dc\u540e\uff0c\u5c0fC\u80fd\u505a\u7684\u6700\u4f18\u7b56\u7565\u5c31\u662f\u5c3d\u53ef\u80fd\u7684\u6d88\u8017\u5c0fD\u7684\u724c\u3002\u5982\u679c\u6d88\u8017\u5b8c\u4e4b\u540e\uff0c\u5c0fD\u7684\u6740\u4f9d\u7136\u6bd4\u5c0fC\u7684\u95ea\u8981\u591a\uff0c\u6216\u8005\u81ea\u5df1\u7684\u65a9\u6bd4\u5c0fC\u7684\u6740\u8981\u591a\u65f6\uff0c\u5c0fD\u83b7\u80dc\u3002</p> <p>\u5982\u679c\u4e24\u79cd\u60c5\u51b5\u90fd\u4e0d\u6ee1\u8db3\uff0c\u90a3\u5c31\u662f\u5e73\u5c40\u4e86\u3002</p>","tags":["\u9898\u89e3","Luogu"]},{"location":"OI/%E9%A2%98%E8%A7%A3%E9%9B%86%E5%90%88/P9586-%E6%B8%B8%E6%88%8F-%E9%A2%98%E8%A7%A3/#code","title":"Code","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define ll long long\n#define int ll\nconst int MaxN = 1e6 + 100;\nconst int INF = 1e9;\nint T=1, N, M;\n\ninline void Solve()\n{\n    int sha1,shan1,zhan1,sha2,zhan2,shan2;\n    cin&gt;&gt;sha1&gt;&gt;shan1&gt;&gt;zhan1&gt;&gt;sha2&gt;&gt;shan2&gt;&gt;zhan2;\n    if(sha1&gt;shan2||zhan1&gt;sha2){//\u5c0fC Win\n        puts(\"C\");\n    }\n    else{\n        shan2-=sha1;\n        sha2-=zhan1;\n        if(sha2&gt;shan1||zhan2&gt;sha1){//\u5c0fD Win\n            puts(\"D\");\n        }\n        else{\n            puts(\"E\");//\u5e73\u5c40\n        }\n    }\n}\nsigned main()\n{\n    //freopen(\".in\", \"r\", stdin);\n    //freopen(\".out\", \"w\", stdout);\n    ios::sync_with_stdio(0);\n    cin&gt;&gt;T;\n    while(T--)\n        Solve();\n    return 0;\n}\n</code></pre>","tags":["\u9898\u89e3","Luogu"]},{"location":"%E5%8D%95%E7%89%87%E6%9C%BA/","title":"\u5355\u7247\u673a","text":""},{"location":"%E5%8D%95%E7%89%87%E6%9C%BA/#_2","title":"\u7b80\u4ecb","text":"<p>\u4e3b\u8981\u5185\u5bb9\u5305\u62ecSTM32&amp;ESP32\u7b49\u5355\u7247\u673a\u6a21\u5757\u7684\u5f00\u53d1\u73af\u5883\u642d\u5efa\uff0c\u8bbe\u5907\u9a71\u52a8\uff0c\u9879\u76ee\u5b9e\u6218\uff0c\u5e38\u89c1\u95ee\u9898\u53ca\u89e3\u51b3\u65b9\u6848\u7b49\u5185\u5bb9\u3002</p>"},{"location":"%E5%8D%95%E7%89%87%E6%9C%BA/#stm32","title":"STM32","text":""},{"location":"%E5%8D%95%E7%89%87%E6%9C%BA/#_3","title":"\u5f00\u53d1\u73af\u5883","text":""},{"location":"%E5%8D%95%E7%89%87%E6%9C%BA/#_4","title":"\u8bbe\u5907\u9a71\u52a8\u6587\u4ef6","text":""},{"location":"%E5%8D%95%E7%89%87%E6%9C%BA/#_5","title":"\u9879\u76ee","text":""},{"location":"%E5%8D%95%E7%89%87%E6%9C%BA/#_6","title":"\u95ee\u9898\u53ca\u65b9\u6848","text":""},{"location":"%E5%8D%95%E7%89%87%E6%9C%BA/#esp32","title":"ESP32","text":""},{"location":"%E5%8D%95%E7%89%87%E6%9C%BA/#_7","title":"\u5f00\u53d1\u73af\u5883","text":""},{"location":"%E5%8D%95%E7%89%87%E6%9C%BA/#_8","title":"\u8bbe\u5907\u9a71\u52a8\u6587\u4ef6","text":""},{"location":"%E5%8D%95%E7%89%87%E6%9C%BA/#_9","title":"\u9879\u76ee","text":""},{"location":"%E5%8D%95%E7%89%87%E6%9C%BA/#_10","title":"\u95ee\u9898\u53ca\u65b9\u6848","text":""},{"location":"%E6%96%87%E5%AD%A6/","title":"\u6587\u5b66","text":""},{"location":"%E6%96%87%E5%AD%A6/#_2","title":"\u7b80\u4ecb","text":"<p>\u6587\u5b66\u677f\u5757\u4e3b\u8981\u8bb0\u5f55\u9605\u8bfb\u65b9\u9762\u548c\u5199\u4f5c\u65b9\u9762\u3002\u9605\u8bfb\u65b9\u9762\u4e3b\u8981\u5305\u62ec\u9605\u8bfb\u4e66\u7c4d\uff0c\u8bfb\u4e66\u7b14\u8bb0&amp;\u611f\u609f\u7b49\u5185\u5bb9\uff1b\u5199\u4f5c\u5305\u62ec\u4f5c\u6587\u7d20\u6750\u79ef\u7d2f\uff0c\u6587\u5b66\u521b\u4f5c\u7b49\u5185\u5bb9\u3002</p>"},{"location":"%E6%96%87%E5%AD%A6/#_3","title":"\u9605\u8bfb","text":""},{"location":"%E6%96%87%E5%AD%A6/#_4","title":"\u5199\u4f5c","text":""},{"location":"%E6%96%87%E5%AD%A6/#_5","title":"\u7d20\u6750","text":""},{"location":"%E6%96%87%E5%AD%A6/#_6","title":"\u6587\u7ae0","text":""},{"location":"%E6%97%A5%E8%AE%B0/2025-03-13/","title":"2025 03 13","text":"<p>\u4eca\u5929\u770b\u5230\u5c71\u897f\u7701\u961f\u540d\u5355\u4e86\uff0c\u611f\u6168\u4e07\u5343\uff1b\u601d\u6765\u60f3\u53bb\uff0c\u8fd8\u662f\u60f3\u8981\u62fc\u4e00\u628a\uff0c\u6545\u56e0\u6b64\u91cd\u542f\u4e2a\u4eba\u77e5\u8bc6\u5e93\u9879\u76ee\u3002 \u672c\u6b21\u9879\u76ee\u4e3b\u8981\u4ee5Obsidian&amp;VScode\u5728\u672c\u5730\u90e8\u7f72\u3002\u540e\u671f\u53ef\u80fd\u8003\u8651\u6dfb\u52a0\u8fdc\u7a0b\u65b9\u5f0f\u3002\u6240\u6709\u6570\u636e\u5e93\u4fe1\u606f\u5b58\u50a8\u5728NAS\u4e0a\u3002 \u4eca\u65e5\u9996\u5148\u5c06OI\u90e8\u5206\u5185\u5bb9\u8fdb\u884c\u91cd\u6784\uff0c\u660e\u786e\u5185\u5bb9\u67b6\u6784\u3002 Dream it possible\uff01</p>"},{"location":"%E6%97%A5%E8%AE%B0/2025-03-14/","title":"2025 03 14","text":"<p>\u65e0\u66f4\u65b0</p>"},{"location":"%E6%97%A5%E8%AE%B0/2025-03-15/","title":"2025 03 15","text":"<ul> <li>\u542f\u7528git\u5b9e\u73b0\u8fdc\u7a0b\u5b58\u50a8\u3002</li> <li>\u79fb\u9664GoodNotes\u6587\u4ef6\u5939</li> <li>\u4fee\u6539OI_README\u6587\u4ef6</li> <li>\u6dfb\u52a0\u7b97\u6cd5\u6587\u7ae0\u5185\u5bb9</li> <li>\u91cd\u65b0\u4fee\u6539\u94fe\u63a5\u65b9\u5f0f\uff0c\u4f7f\u5176\u7b26\u5408markdown\u683c\u5f0f\u3002</li> </ul>"},{"location":"%E6%97%A5%E8%AE%B0/2025-03-16/","title":"2025 03 16","text":"<ul> <li>\u79fb\u9664\u6587\u5316\u8bfe\u677f\u5757\u4e2d\u7684\u5927\u6587\u4ef6\uff0c\u6539\u7528\u4e2a\u4eba\u7f51\u76d8\uff0c\u51cf\u5c11git lfs\u8d44\u6e90\u3002</li> <li>\u66f4\u65b0OI/\u8d44\u6e90\u94fe\u63a5\uff0c\u6dfb\u52a0OI\u5b66\u4e60\u4e2d\u7684\u5e38\u7528\u8d44\u6e90\u94fe\u63a5\u3002</li> <li>\u6dfb\u52a0\u7b97\u6cd5\u6587\u7ae0\u4e2d\u7684\u8bfe\u4ef6\u3002</li> </ul>"},{"location":"%E6%97%A5%E8%AE%B0/2025-04-20/","title":"2025 04 20","text":"<ul> <li>\u91cd\u6784\u9879\u76ee\u6d41\u7a0b\uff0c\u8fc1\u79fb\u4e3b\u4f53\u81f3ubuntu\u3002</li> <li>\u589e\u52a0NAS\u5907\u4efd\uff0c\u4fdd\u8bc1\u6570\u636e\u5b89\u5168\u3002</li> <li>\u91cd\u6784\u9879\u76ee\u6d41\u7a0b\uff0c\u4f7f\u7528Github Action\u5b9e\u73b0\u63d0\u4ea4\u2014\u2014\u2014\u2014\u751f\u6210\u2014\u2014\u2014\u2014\u5c55\u793a\u7684\u81ea\u52a8\u5316\u3002</li> <li>\u5b9e\u73b0\u5229\u7528git\u5b9e\u73b0\u591a\u5730\u540c\u6b65\u3002</li> </ul> <p>\u7a81\u7136\u60f3\u8d77\u9879\u76ee\uff0c\u91cd\u65b0\u62ff\u8d77\u3002</p>"},{"location":"%E6%97%A5%E8%AE%B0/2025-04-24/","title":"2025 04 24","text":"<ul> <li>\u4fee\u6539NAS\u5206\u533a\u4e3aHomeLab\u5206\u533a</li> <li>\u4fee\u590d\u6587\u5316\u8bfe\u677f\u5757\u6807\u9898\u4e0d\u4e00\u81f4</li> <li>\u66f4\u65b0README</li> </ul>"},{"location":"%E6%97%A5%E8%AE%B0/2025-05-01/","title":"2025 05 01","text":"<p>\u5b8c\u6210HomeLab/\u7f51\u7edc</p>"},{"location":"%E8%8B%B1%E8%AF%AD/","title":"\u82f1\u8bed/English","text":""},{"location":"%E8%8B%B1%E8%AF%AD/#introduce","title":"\u7b80\u4ecb/Introduce","text":"<p>\u6b64\u90e8\u5206\u5305\u62ec\u82f1\u8bed\u5b66\u4e60\u6240\u7528\u7684\u6587\u732e\uff0c\u5355\u8bcd\u5b66\u4e60\u60c5\u51b5\u4ee5\u53ca\u5404\u79cd\u5b66\u4e60\u8d44\u6e90\u7b49\u5185\u5bb9\u3002</p> <p>This section includes literature for English learning, vocabulary learning progress, and various learning resources.</p>"},{"location":"%E8%8B%B1%E8%AF%AD/#document","title":"\u6587\u732e /Document","text":""},{"location":"%E8%8B%B1%E8%AF%AD/#vocabulary","title":"\u5355\u8bcd/Vocabulary","text":""},{"location":"%E8%8B%B1%E8%AF%AD/#resources","title":"\u8d44\u6e90/Resources","text":""},{"location":"%E9%AB%98%E4%B8%AD%E6%96%87%E5%8C%96%E8%AF%BE/whk_README/","title":"\u9ad8\u4e2d\u6587\u5316\u8bfe","text":""},{"location":"%E9%AB%98%E4%B8%AD%E6%96%87%E5%8C%96%E8%AF%BE/whk_README/#_2","title":"\u7b80\u4ecb","text":"<p>\u6b64\u5206\u7c7b\u4e3b\u8981\u5305\u542b\u9ad8\u4e2d\u6240\u6709\u8bfe\u5185\u77e5\u8bc6\u70b9\u5408\u96c6\uff0c\u8bb0\u5f55\u76ee\u524d\u6240\u5b66\u7684\u77e5\u8bc6\u4ee5\u4fbf\u4e4b\u540e\u56de\u987e\u590d\u4e60\u3002\u4e3b\u8981\u6709\u8bed\u6587\u3001\u6570\u5b66\u3001\u82f1\u8bed\u3001\u7269\u7406\u3001\u5316\u5b66\u3001\u751f\u7269\u3001\u653f\u6cbb\u3001\u5730\u7406\u548c\u5386\u53f2\u7b49\u5b66\u79d1\u77e5\u8bc6\u3002</p>"},{"location":"%E9%AB%98%E4%B8%AD%E6%96%87%E5%8C%96%E8%AF%BE/whk_README/#_3","title":"\u8bed\u6587","text":"<p>\u8bed\u6587_README</p>"},{"location":"%E9%AB%98%E4%B8%AD%E6%96%87%E5%8C%96%E8%AF%BE/whk_README/#_4","title":"\u6570\u5b66","text":"<p>\u6570\u5b66_README</p>"},{"location":"%E9%AB%98%E4%B8%AD%E6%96%87%E5%8C%96%E8%AF%BE/whk_README/#_5","title":"\u82f1\u8bed","text":"<p>\u82f1\u8bed_README</p>"},{"location":"%E9%AB%98%E4%B8%AD%E6%96%87%E5%8C%96%E8%AF%BE/whk_README/#_6","title":"\u7269\u7406","text":"<p>\u7269\u7406_README</p>"},{"location":"%E9%AB%98%E4%B8%AD%E6%96%87%E5%8C%96%E8%AF%BE/whk_README/#_7","title":"\u5316\u5b66","text":"<p>\u5316\u5b66_README</p>"},{"location":"%E9%AB%98%E4%B8%AD%E6%96%87%E5%8C%96%E8%AF%BE/whk_README/#_8","title":"\u751f\u7269","text":"<p>\u751f\u7269_README</p>"},{"location":"%E9%AB%98%E4%B8%AD%E6%96%87%E5%8C%96%E8%AF%BE/whk_README/#_9","title":"\u653f\u6cbb","text":"<p>\u653f\u6cbb_README</p>"},{"location":"%E9%AB%98%E4%B8%AD%E6%96%87%E5%8C%96%E8%AF%BE/whk_README/#_10","title":"\u5730\u7406","text":"<p>\u5730\u7406_README</p>"},{"location":"%E9%AB%98%E4%B8%AD%E6%96%87%E5%8C%96%E8%AF%BE/whk_README/#_11","title":"\u5386\u53f2","text":"<p>\u5386\u53f2_README</p>"},{"location":"%E9%AB%98%E4%B8%AD%E6%96%87%E5%8C%96%E8%AF%BE/%E5%8C%96%E5%AD%A6/%E5%8C%96%E5%AD%A6_README/","title":"\u5316\u5b66","text":""},{"location":"%E9%AB%98%E4%B8%AD%E6%96%87%E5%8C%96%E8%AF%BE/%E5%8C%96%E5%AD%A6/%E5%8C%96%E5%AD%A6_README/#_2","title":"\u8d44\u6e90","text":"<ul> <li>\u5316\u5b66_\u77e5\u8bc6\u70b9\u6c47\u603b_Magolor</li> </ul>"},{"location":"%E9%AB%98%E4%B8%AD%E6%96%87%E5%8C%96%E8%AF%BE/%E5%8E%86%E5%8F%B2/%E5%8E%86%E5%8F%B2_README/","title":"\u5386\u53f2","text":""},{"location":"%E9%AB%98%E4%B8%AD%E6%96%87%E5%8C%96%E8%AF%BE/%E5%9C%B0%E7%90%86/%E5%9C%B0%E7%90%86_README/","title":"\u5730\u7406","text":""},{"location":"%E9%AB%98%E4%B8%AD%E6%96%87%E5%8C%96%E8%AF%BE/%E6%94%BF%E6%B2%BB/%E6%94%BF%E6%B2%BB_README/","title":"\u653f\u6cbb","text":""},{"location":"%E9%AB%98%E4%B8%AD%E6%96%87%E5%8C%96%E8%AF%BE/%E6%95%B0%E5%AD%A6/%E6%95%B0%E5%AD%A6_README/","title":"\u6570\u5b66","text":""},{"location":"%E9%AB%98%E4%B8%AD%E6%96%87%E5%8C%96%E8%AF%BE/%E6%95%B0%E5%AD%A6/%E6%95%B0%E5%AD%A6_README/#_2","title":"\u540c\u6b65\u7b14\u8bb0","text":"<p>\u5fc5\u4fee\u4e00\u7b14\u8bb0</p>"},{"location":"%E9%AB%98%E4%B8%AD%E6%96%87%E5%8C%96%E8%AF%BE/%E6%95%B0%E5%AD%A6/%E6%95%B0%E5%AD%A6_README/#_3","title":"\u8d44\u6e90","text":"<ul> <li>\u6570\u5b66_\u77e5\u8bc6\u70b9\u6c47\u603b_Magolor</li> </ul>"},{"location":"%E9%AB%98%E4%B8%AD%E6%96%87%E5%8C%96%E8%AF%BE/%E6%95%B0%E5%AD%A6/%E8%AF%BE%E6%9C%AC/","title":"\u5fc5\u4fee\u4e00","text":"<p>\u6559\u6750\u4e0b\u8f7d</p>"},{"location":"%E9%AB%98%E4%B8%AD%E6%96%87%E5%8C%96%E8%AF%BE/%E7%89%A9%E7%90%86/%E7%89%A9%E7%90%86_README/","title":"\u7269\u7406","text":""},{"location":"%E9%AB%98%E4%B8%AD%E6%96%87%E5%8C%96%E8%AF%BE/%E7%89%A9%E7%90%86/%E7%89%A9%E7%90%86_README/#_2","title":"\u8d44\u6e90","text":"<ul> <li>\u7269\u7406_\u77e5\u8bc6\u70b9\u6c47\u603b_Magolor</li> </ul>"},{"location":"%E9%AB%98%E4%B8%AD%E6%96%87%E5%8C%96%E8%AF%BE/%E7%94%9F%E7%89%A9/%E7%94%9F%E7%89%A9_README/","title":"\u751f\u7269","text":""},{"location":"%E9%AB%98%E4%B8%AD%E6%96%87%E5%8C%96%E8%AF%BE/%E7%94%9F%E7%89%A9/%E7%94%9F%E7%89%A9_README/#_2","title":"\u8d44\u6e90","text":"<ul> <li>\u751f\u7269_\u77e5\u8bc6\u70b9\u6c47\u603b_Magolor</li> </ul>"},{"location":"%E9%AB%98%E4%B8%AD%E6%96%87%E5%8C%96%E8%AF%BE/%E8%8B%B1%E8%AF%AD/%E8%8B%B1%E8%AF%AD_README/","title":"\u82f1\u8bed","text":""},{"location":"%E9%AB%98%E4%B8%AD%E6%96%87%E5%8C%96%E8%AF%BE/%E8%AF%AD%E6%96%87/%E8%AF%AD%E6%96%87_README/","title":"\u8bed\u6587","text":""}]}